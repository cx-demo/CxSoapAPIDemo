'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace CxPortal
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://Checkmarx.com", ConfigurationName:="CxPortal.CxPortalWebServiceSoap")>  _
    Public Interface CxPortalWebServiceSoap
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidCompanyName", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsValidCompanyName(ByVal sessionID As String, ByVal companyName As String, ByVal serviceProviderID As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidCompanyName", ReplyAction:="*")>  _
        Function IsValidCompanyNameAsync(ByVal sessionID As String, ByVal companyName As String, ByVal serviceProviderID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompanyTeams", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetCompanyTeams(ByVal sessionID As String, ByVal companyID As String) As CxPortal.CxWSResponseTeamData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompanyTeams", ReplyAction:="*")>  _
        Function GetCompanyTeamsAsync(ByVal sessionID As String, ByVal companyID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetServiceProviderTeams", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetServiceProviderTeams(ByVal sessionID As String, ByVal spID As String) As CxPortal.CxWSResponseTeamData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetServiceProviderTeams", ReplyAction:="*")>  _
        Function GetServiceProviderTeamsAsync(ByVal sessionID As String, ByVal spID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetServiceProviderCompanies", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetServiceProviderCompanies(ByVal sessionID As String, ByVal spID As String) As CxPortal.CxWSResponseTeamData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetServiceProviderCompanies", ReplyAction:="*")>  _
        Function GetServiceProviderCompaniesAsync(ByVal sessionID As String, ByVal spID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompanyProperties", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetCompanyProperties(ByVal sessionID As String, ByVal companyID As String) As CxPortal.CxWsResponseCompanyProperties
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompanyProperties", ReplyAction:="*")>  _
        Function GetCompanyPropertiesAsync(ByVal sessionID As String, ByVal companyID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWsResponseCompanyProperties)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetUserAsCompanyManager", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SetUserAsCompanyManager(ByVal sessionID As String, ByVal companyID As String, ByVal userID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetUserAsCompanyManager", ReplyAction:="*")>  _
        Function SetUserAsCompanyManagerAsync(ByVal sessionID As String, ByVal companyID As String, ByVal userID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetUserAsServiceProviderManager", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SetUserAsServiceProviderManager(ByVal sessionID As String, ByVal spID As String, ByVal userID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetUserAsServiceProviderManager", ReplyAction:="*")>  _
        Function SetUserAsServiceProviderManagerAsync(ByVal sessionID As String, ByVal spID As String, ByVal userID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidServiceProviderName", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsValidServiceProviderName(ByVal sessionID As String, ByVal serviceProviderName As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidServiceProviderName", ReplyAction:="*")>  _
        Function IsValidServiceProviderNameAsync(ByVal sessionID As String, ByVal serviceProviderName As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateCompanyProperties", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateCompanyProperties(ByVal sessionID As String, ByVal companyID As String, ByVal companyName As String, ByVal maxReviewers As Integer, ByVal maxScanners As Integer, ByVal maxManagers As Integer) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateCompanyProperties", ReplyAction:="*")>  _
        Function UpdateCompanyPropertiesAsync(ByVal sessionID As String, ByVal companyID As String, ByVal companyName As String, ByVal maxReviewers As Integer, ByVal maxScanners As Integer, ByVal maxManagers As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetSystemSettings", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SetSystemSettings(ByVal sessionID As String, ByVal settings As CxPortal.SystemSettings) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetSystemSettings", ReplyAction:="*")>  _
        Function SetSystemSettingsAsync(ByVal sessionID As String, ByVal settings As CxPortal.SystemSettings) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetServerLanguageList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetServerLanguageList(ByVal sessionID As String) As CxPortal.CxWSResponseSystemLanguages
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetServerLanguageList", ReplyAction:="*")>  _
        Function GetServerLanguageListAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSystemLanguages)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSystemSettings", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetSystemSettings(ByVal sessionID As String) As CxPortal.CxWsResponseSystemSettings
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSystemSettings", ReplyAction:="*")>  _
        Function GetSystemSettingsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWsResponseSystemSettings)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/VerifySupportedVersion", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function VerifySupportedVersion(ByVal clientType As CxPortal.CxClientType, ByVal clientVersion As String, ByVal APIVersion As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/VerifySupportedVersion", ReplyAction:="*")>  _
        Function VerifySupportedVersionAsync(ByVal clientType As CxPortal.CxClientType, ByVal clientVersion As String, ByVal APIVersion As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetInstallationSettings", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetInstallationSettings(ByVal sessionID As String) As CxPortal.CxWSResponseInstallationSettings
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetInstallationSettings", ReplyAction:="*")>  _
        Function GetInstallationSettingsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseInstallationSettings)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPresetList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetPresetList(ByVal SessionID As String) As CxPortal.CxWSResponsePresetList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPresetList", ReplyAction:="*")>  _
        Function GetPresetListAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePresetList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryCollection", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetQueryCollection(ByVal sessionId As String) As CxPortal.CxQueryCollectionResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryCollection", ReplyAction:="*")>  _
        Function GetQueryCollectionAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxQueryCollectionResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryCollectionWithInactive", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetQueryCollectionWithInactive(ByVal sessionId As String) As CxPortal.CxQueryCollectionResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryCollectionWithInactive", ReplyAction:="*")>  _
        Function GetQueryCollectionWithInactiveAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxQueryCollectionResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPresetDetails", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetPresetDetails(ByVal sessionId As String, ByVal id As Long) As CxPortal.CxWSResponsePresetDetails
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPresetDetails", ReplyAction:="*")>  _
        Function GetPresetDetailsAsync(ByVal sessionId As String, ByVal id As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePresetDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateNewPreset", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CreateNewPreset(ByVal sessionId As String, ByVal presrt As CxPortal.CxPresetDetails) As CxPortal.CxWSResponsePresetDetails
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateNewPreset", ReplyAction:="*")>  _
        Function CreateNewPresetAsync(ByVal sessionId As String, ByVal presrt As CxPortal.CxPresetDetails) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePresetDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdatePreset", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdatePreset(ByVal sessionId As String, ByVal presrt As CxPortal.CxPresetDetails) As CxPortal.CxWSResponsePresetDetails
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdatePreset", ReplyAction:="*")>  _
        Function UpdatePresetAsync(ByVal sessionId As String, ByVal presrt As CxPortal.CxPresetDetails) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePresetDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeletePreset", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeletePreset(ByVal sessionId As String, ByVal id As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeletePreset", ReplyAction:="*")>  _
        Function DeletePresetAsync(ByVal sessionId As String, ByVal id As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidPresetName", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsValidPresetName(ByVal sessionID As String, ByVal presetName As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidPresetName", ReplyAction:="*")>  _
        Function IsValidPresetNameAsync(ByVal sessionID As String, ByVal presetName As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueriesCategories", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetQueriesCategories(ByVal sessionId As String) As CxPortal.CxWSResponseQueriesCategories
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueriesCategories", ReplyAction:="*")>  _
        Function GetQueriesCategoriesAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueriesCategories)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetDetailsForQueryVersionCode", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetDetailsForQueryVersionCode(ByVal sessionId As String, ByVal queryVersionCode As Long) As CxPortal.CxWSQueryVersionDetailsResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetDetailsForQueryVersionCode", ReplyAction:="*")>  _
        Function GetDetailsForQueryVersionCodeAsync(ByVal sessionId As String, ByVal queryVersionCode As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSQueryVersionDetailsResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueriesForScan", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetQueriesForScan(ByVal sessionID As String, ByVal scanId As Long) As CxPortal.CxWSResponceQuerisForScan
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueriesForScan", ReplyAction:="*")>  _
        Function GetQueriesForScanAsync(ByVal sessionID As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceQuerisForScan)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultsForQuery", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResultsForQuery(ByVal sessionID As String, ByVal scanId As Long, ByVal queryId As Long) As CxPortal.CxWSResponceScanResults
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultsForQuery", ReplyAction:="*")>  _
        Function GetResultsForQueryAsync(ByVal sessionID As String, ByVal scanId As Long, ByVal queryId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanResults)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultsForQueryQroup", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResultsForQueryQroup(ByVal sessionID As String, ByVal scanId As Long, ByVal queryGroupId As Long) As CxPortal.CxWSResponceScanResults
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultsForQueryQroup", ReplyAction:="*")>  _
        Function GetResultsForQueryQroupAsync(ByVal sessionID As String, ByVal scanId As Long, ByVal queryGroupId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanResults)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultsForScanByLanguage", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResultsForScanByLanguage(ByVal sessionID As String, ByVal scanId As Long, ByVal Language As String) As CxPortal.CxWSResponceScanResults
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultsForScanByLanguage", ReplyAction:="*")>  _
        Function GetResultsForScanByLanguageAsync(ByVal sessionID As String, ByVal scanId As Long, ByVal Language As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanResults)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultsForScan", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResultsForScan(ByVal sessionID As String, ByVal scanId As Long) As CxPortal.CxWSResponceScanResults
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultsForScan", ReplyAction:="*")>  _
        Function GetResultsForScanAsync(ByVal sessionID As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanResults)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultPath", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResultPath(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long) As CxPortal.CxWSResponceResultPath
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultPath", ReplyAction:="*")>  _
        Function GetResultPathAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceResultPath)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPathCommentsHistory", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetPathCommentsHistory(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long, ByVal labelType As CxPortal.ResultLabelTypeEnum) As CxPortal.CxWSResponceResultPath
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPathCommentsHistory", ReplyAction:="*")>  _
        Function GetPathCommentsHistoryAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long, ByVal labelType As CxPortal.ResultLabelTypeEnum) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceResultPath)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetFileNamesForPath", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetFileNamesForPath(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long) As CxPortal.CxWSResponceFileNames
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetFileNamesForPath", ReplyAction:="*")>  _
        Function GetFileNamesForPathAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceFileNames)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultPathsForQuery", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResultPathsForQuery(ByVal sessionId As String, ByVal scanId As Long, ByVal queryId As Long) As CxPortal.CxWSResponseResultPaths
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultPathsForQuery", ReplyAction:="*")>  _
        Function GetResultPathsForQueryAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal queryId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultPaths)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultGraphForQuery", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResultGraphForQuery(ByVal sessionId As String, ByVal scanId As Long, ByVal queryId As Long, ByVal maxNodes As Integer, ByVal graphType As CxPortal.CxWSGraphTypeEnum, ByVal includeNotExploitable As Boolean) As CxPortal.CxWSResponseResultGraph
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultGraphForQuery", ReplyAction:="*")>  _
        Function GetResultGraphForQueryAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal queryId As Long, ByVal maxNodes As Integer, ByVal graphType As CxPortal.CxWSGraphTypeEnum, ByVal includeNotExploitable As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultGraph)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultsBySeverity", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResultsBySeverity(ByVal sessionId As String, ByVal scanId As Long, ByVal Severity As Integer, ByVal Language As String) As CxPortal.CxWSResponceScanResults
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultsBySeverity", ReplyAction:="*")>  _
        Function GetResultsBySeverityAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal Severity As Integer, ByVal Language As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanResults)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCustomFields", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetCustomFields(ByVal sessionID As String) As CxPortal.CxWSResponseCustomFields
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCustomFields", ReplyAction:="*")>  _
        Function GetCustomFieldsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseCustomFields)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SaveCustomFields", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SaveCustomFields(ByVal sessionID As String, ByVal customFields() As CxPortal.CxWSCustomField) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SaveCustomFields", ReplyAction:="*")>  _
        Function SaveCustomFieldsAsync(ByVal sessionID As String, ByVal customFields() As CxPortal.CxWSCustomField) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteCustomField", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeleteCustomField(ByVal sessionID As String, ByVal customFieldId As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteCustomField", ReplyAction:="*")>  _
        Function DeleteCustomFieldAsync(ByVal sessionID As String, ByVal customFieldId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCustomFieldValues", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetCustomFieldValues(ByVal sessionID As String, ByVal customFieldId As Long) As CxPortal.CxWSResponseCustomFieldValues
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCustomFieldValues", ReplyAction:="*")>  _
        Function GetCustomFieldValuesAsync(ByVal sessionID As String, ByVal customFieldId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseCustomFieldValues)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SavePredefinedCommands", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SavePredefinedCommands(ByVal sessionID As String, ByVal predefinedCommands() As CxPortal.CxPredefinedCommand) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SavePredefinedCommands", ReplyAction:="*")>  _
        Function SavePredefinedCommandsAsync(ByVal sessionID As String, ByVal predefinedCommands() As CxPortal.CxPredefinedCommand) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPredefinedCommands", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetPredefinedCommands(ByVal sessionId As String) As CxPortal.CxWSResponsePredefinedCommands
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPredefinedCommands", ReplyAction:="*")>  _
        Function GetPredefinedCommandsAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePredefinedCommands)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetExecutableList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetExecutableList(ByVal sessionId As String) As CxPortal.CxWSResponseNameList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetExecutableList", ReplyAction:="*")>  _
        Function GetExecutableListAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseNameList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdatePermission", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdatePermission(ByVal sessionID As String, ByVal permission As CxPortal.CxPermission, ByVal teamId As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdatePermission", ReplyAction:="*")>  _
        Function UpdatePermissionAsync(ByVal sessionID As String, ByVal permission As CxPortal.CxPermission, ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectAssignUsers", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetProjectAssignUsers(ByVal sessionID As String, ByVal projectId As Long) As CxPortal.CxWSResponseUserData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectAssignUsers", ReplyAction:="*")>  _
        Function GetProjectAssignUsersAsync(ByVal sessionID As String, ByVal projectId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseUserData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectAssignUsersList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetProjectAssignUsersList(ByVal sessionID As String, ByVal projectId As Long) As CxPortal.CxWSResponseAssignUsers
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectAssignUsersList", ReplyAction:="*")>  _
        Function GetProjectAssignUsersListAsync(ByVal sessionID As String, ByVal projectId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseAssignUsers)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsAllowAutoSignIn", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsAllowAutoSignIn() As CxPortal.CxWSResponseBool
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsAllowAutoSignIn", ReplyAction:="*")>  _
        Function IsAllowAutoSignInAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBool)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SaveSubsetResults", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SaveSubsetResults(ByVal sessionId As String, ByVal projectId As Long, ByVal ScanId As Long, ByVal pathIds() As Long, ByVal comments As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SaveSubsetResults", ReplyAction:="*")>  _
        Function SaveSubsetResultsAsync(ByVal sessionId As String, ByVal projectId As Long, ByVal ScanId As Long, ByVal pathIds() As Long, ByVal comments As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPivotData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetPivotData(ByVal SessionID As String, ByVal PivotParams As CxPortal.CxPivotDataRequest) As CxPortal.CxWSResponsePivotTable
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPivotData", ReplyAction:="*")>  _
        Function GetPivotDataAsync(ByVal SessionID As String, ByVal PivotParams As CxPortal.CxPivotDataRequest) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePivotTable)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPivotLayouts", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetPivotLayouts(ByVal SessionID As String) As CxPortal.CxWSResponsePivotLayouts
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPivotLayouts", ReplyAction:="*")>  _
        Function GetPivotLayoutsAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePivotLayouts)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SavePivotLayout", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SavePivotLayout(ByVal SessionID As String, ByVal layout As CxPortal.CxPivotLayout) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SavePivotLayout", ReplyAction:="*")>  _
        Function SavePivotLayoutAsync(ByVal SessionID As String, ByVal layout As CxPortal.CxPivotLayout) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeletePivotLayout", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeletePivotLayout(ByVal SessionID As String, ByVal LayoutID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeletePivotLayout", ReplyAction:="*")>  _
        Function DeletePivotLayoutAsync(ByVal SessionID As String, ByVal LayoutID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryShortDescription", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetQueryShortDescription(ByVal sessionId As String, ByVal queryId As Long) As CxPortal.CxWSResponseShortQueryDescription
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryShortDescription", ReplyAction:="*")>  _
        Function GetQueryShortDescriptionAsync(ByVal sessionId As String, ByVal queryId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseShortQueryDescription)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RegisterSaasPendingUser", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function RegisterSaasPendingUser(ByVal pendingUser As CxPortal.SaasPendingUser, ByVal activationPageUrl As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RegisterSaasPendingUser", ReplyAction:="*")>  _
        Function RegisterSaasPendingUserAsync(ByVal pendingUser As CxPortal.SaasPendingUser, ByVal activationPageUrl As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ActivateSaasUser", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ActivateSaasUser(ByVal userToken As String) As CxPortal.CxWSResponseSaasLoginData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ActivateSaasUser", ReplyAction:="*")>  _
        Function ActivateSaasUserAsync(ByVal userToken As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSaasLoginData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSaasPackages", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetSaasPackages() As CxPortal.CxWSResponseSaasPackage
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSaasPackages", ReplyAction:="*")>  _
        Function GetSaasPackagesAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSaasPackage)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetTeamSaaSPackage", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetTeamSaaSPackage(ByVal teamId As String) As CxPortal.CxWSResponseSaasPackage
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetTeamSaaSPackage", ReplyAction:="*")>  _
        Function GetTeamSaaSPackageAsync(ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSaasPackage)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SaasLogin", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SaasLogin(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer) As CxPortal.CxWSResponseSaasLoginData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SaasLogin", ReplyAction:="*")>  _
        Function SaasLoginAsync(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSaasLoginData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SendEmailForSales", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SendEmailForSales(ByVal sessionID As String, ByVal emailData As CxPortal.EmailForSalesData) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SendEmailForSales", ReplyAction:="*")>  _
        Function SendEmailForSalesAsync(ByVal sessionID As String, ByVal emailData As CxPortal.EmailForSalesData) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetEngineServers", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetEngineServers(ByVal sessionID As String) As CxPortal.CxWSResponseEngineServers
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetEngineServers", ReplyAction:="*")>  _
        Function GetEngineServersAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseEngineServers)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateEngineServer", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateEngineServer(ByVal sessionID As String, ByVal engine As CxPortal.CxEngineServer) As CxPortal.CxWSResponseEngineServerId
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateEngineServer", ReplyAction:="*")>  _
        Function UpdateEngineServerAsync(ByVal sessionID As String, ByVal engine As CxPortal.CxEngineServer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseEngineServerId)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateEngineServer", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CreateEngineServer(ByVal sessionID As String, ByVal engine As CxPortal.CxEngineServer) As CxPortal.CxWSResponseEngineServerId
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateEngineServer", ReplyAction:="*")>  _
        Function CreateEngineServerAsync(ByVal sessionID As String, ByVal engine As CxPortal.CxEngineServer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseEngineServerId)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteEngineServer", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeleteEngineServer(ByVal sessionID As String, ByVal id As Long) As CxPortal.CxWSResponseEngineServerId
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteEngineServer", ReplyAction:="*")>  _
        Function DeleteEngineServerAsync(ByVal sessionID As String, ByVal id As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseEngineServerId)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/Scan", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function Scan(ByVal sessionId As String, ByVal args As CxPortal.CliScanArgs) As CxPortal.CxWSResponseRunID
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/Scan", ReplyAction:="*")>  _
        Function ScanAsync(ByVal sessionId As String, ByVal args As CxPortal.CliScanArgs) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ExportQueries", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ExportQueries(ByVal sessionId As String, ByVal queryIds() As Long) As CxPortal.CxWSResponseQueries
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ExportQueries", ReplyAction:="*")>  _
        Function ExportQueriesAsync(ByVal sessionId As String, ByVal queryIds() As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueries)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ExportPreset", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ExportPreset(ByVal sessionId As String, ByVal presetId As Long) As CxPortal.CxWSResponsePreset
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ExportPreset", ReplyAction:="*")>  _
        Function ExportPresetAsync(ByVal sessionId As String, ByVal presetId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePreset)
        
        'CODEGEN: Parameter 'importedFile' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ImportQueries", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ImportQueries(ByVal request As CxPortal.ImportQueriesRequest) As CxPortal.ImportQueriesResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ImportQueries", ReplyAction:="*")>  _
        Function ImportQueriesAsync(ByVal request As CxPortal.ImportQueriesRequest) As System.Threading.Tasks.Task(Of CxPortal.ImportQueriesResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetImportQueriesStatus", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetImportQueriesStatus(ByVal sessionId As String, ByVal requestId As Long) As CxPortal.CxWSImportQueriesRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetImportQueriesStatus", ReplyAction:="*")>  _
        Function GetImportQueriesStatusAsync(ByVal sessionId As String, ByVal requestId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSImportQueriesRepsonse)
        
        'CODEGEN: Parameter 'importedFile' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetExistingQueries", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetExistingQueries(ByVal request As CxPortal.GetExistingQueriesRequest) As CxPortal.GetExistingQueriesResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetExistingQueries", ReplyAction:="*")>  _
        Function GetExistingQueriesAsync(ByVal request As CxPortal.GetExistingQueriesRequest) As System.Threading.Tasks.Task(Of CxPortal.GetExistingQueriesResponse)
        
        'CODEGEN: Parameter 'importedFile' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetExistingPresetQueries", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetExistingPresetQueries(ByVal request As CxPortal.GetExistingPresetQueriesRequest) As CxPortal.GetExistingPresetQueriesResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetExistingPresetQueries", ReplyAction:="*")>  _
        Function GetExistingPresetQueriesAsync(ByVal request As CxPortal.GetExistingPresetQueriesRequest) As System.Threading.Tasks.Task(Of CxPortal.GetExistingPresetQueriesResponse)
        
        'CODEGEN: Parameter 'importedFile' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ImportPreset", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ImportPreset(ByVal request As CxPortal.ImportPresetRequest) As CxPortal.ImportPresetResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ImportPreset", ReplyAction:="*")>  _
        Function ImportPresetAsync(ByVal request As CxPortal.ImportPresetRequest) As System.Threading.Tasks.Task(Of CxPortal.ImportPresetResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateScanReport", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CreateScanReport(ByVal SessionID As String, ByVal Report As CxPortal.CxWSFilteredReportRequest) As CxPortal.CxWSCreateReportResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateScanReport", ReplyAction:="*")>  _
        Function CreateScanReportAsync(ByVal SessionID As String, ByVal Report As CxPortal.CxWSFilteredReportRequest) As System.Threading.Tasks.Task(Of CxPortal.CxWSCreateReportResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanReportStatus", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetScanReportStatus(ByVal SessionID As String, ByVal ReportID As Long) As CxPortal.CxWSReportStatusResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanReportStatus", ReplyAction:="*")>  _
        Function GetScanReportStatusAsync(ByVal SessionID As String, ByVal ReportID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSReportStatusResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanReport", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetScanReport(ByVal SessionID As String, ByVal ReportID As Long) As CxPortal.CxWSResponseScanResults
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanReport", ReplyAction:="*")>  _
        Function GetScanReportAsync(ByVal SessionID As String, ByVal ReportID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScanResults)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CancelScanReport", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CancelScanReport(ByVal SessionID As String, ByVal ReportID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CancelScanReport", ReplyAction:="*")>  _
        Function CancelScanReportAsync(ByVal SessionID As String, ByVal ReportID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SaveUserPreferences", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SaveUserPreferences(ByVal SessionID As String, ByVal Preferences() As CxPortal.CxUserPreferences) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SaveUserPreferences", ReplyAction:="*")>  _
        Function SaveUserPreferencesAsync(ByVal SessionID As String, ByVal Preferences() As CxPortal.CxUserPreferences) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetUserPreferences", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetUserPreferences(ByVal SessionID As String) As CxPortal.CxWSUserPreferencesResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetUserPreferences", ReplyAction:="*")>  _
        Function GetUserPreferencesAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSUserPreferencesResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IssueTrackingSystemsAPI", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IssueTrackingSystemsAPI(ByVal request As CxPortal.CxWSIssueTrackingSystemRequest) As CxPortal.CxWSIssueTrackingSystemResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IssueTrackingSystemsAPI", ReplyAction:="*")>  _
        Function IssueTrackingSystemsAPIAsync(ByVal request As CxPortal.CxWSIssueTrackingSystemRequest) As System.Threading.Tasks.Task(Of CxPortal.CxWSIssueTrackingSystemResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetVersionNumber", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetVersionNumber() As CxPortal.CxWSCxVersionResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetVersionNumber", ReplyAction:="*")>  _
        Function GetVersionNumberAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSCxVersionResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/MoveTeam", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function MoveTeam(ByVal sessionID As String, ByVal sourceID As String, ByVal destenationID As String) As CxPortal.CxWSCxMoveTeamResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/MoveTeam", ReplyAction:="*")>  _
        Function MoveTeamAsync(ByVal sessionID As String, ByVal sourceID As String, ByVal destenationID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSCxMoveTeamResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetTeamFullPaths", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetTeamFullPaths(ByVal sessionID As String, ByVal sourceTeamID As String, ByVal destinationTeamID As String) As CxPortal.CxTeamPathsResponseResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetTeamFullPaths", ReplyAction:="*")>  _
        Function GetTeamFullPathsAsync(ByVal sessionID As String, ByVal sourceTeamID As String, ByVal destinationTeamID As String) As System.Threading.Tasks.Task(Of CxPortal.CxTeamPathsResponseResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectScannedDisplayData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetProjectScannedDisplayData(ByVal sessionID As String) As CxPortal.CxWSResponseProjectScannedDisplayData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectScannedDisplayData", ReplyAction:="*")>  _
        Function GetProjectScannedDisplayDataAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProjectScannedDisplayData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetFailedScansDisplayData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetFailedScansDisplayData(ByVal sessionID As String) As CxPortal.CxWSResponseFailedScansDisplayData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetFailedScansDisplayData", ReplyAction:="*")>  _
        Function GetFailedScansDisplayDataAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseFailedScansDisplayData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetTabWidgets", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetTabWidgets(ByVal sessionId As String, ByVal tabId As Integer) As CxPortal.CxWSResponseJSONData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetTabWidgets", ReplyAction:="*")>  _
        Function GetTabWidgetsAsync(ByVal sessionId As String, ByVal tabId As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseJSONData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetWidgetFilters", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetWidgetFilters(ByVal sessionId As String, ByVal widgetIds() As Integer) As CxPortal.CxWSResponseJSONData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetWidgetFilters", ReplyAction:="*")>  _
        Function GetWidgetFiltersAsync(ByVal sessionId As String, ByVal widgetIds() As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseJSONData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetWidgetData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetWidgetData(ByVal sessionId As String, ByVal widgetId As Integer, ByVal parametersAsJSON As String) As CxPortal.CxWSResponseJSONData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetWidgetData", ReplyAction:="*")>  _
        Function GetWidgetDataAsync(ByVal sessionId As String, ByVal widgetId As Integer, ByVal parametersAsJSON As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseJSONData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetLdapServersConfigurations", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetLdapServersConfigurations(ByVal sessionId As String) As CxPortal.CxWSResponseLDAPServersConfiguration
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetLdapServersConfigurations", ReplyAction:="*")>  _
        Function GetLdapServersConfigurationsAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLDAPServersConfiguration)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetLdapServersConfigurations", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SetLdapServersConfigurations(ByVal sessionId As String, ByVal serverConfigurations() As CxPortal.CxWSLdapServerConfiguration) As CxPortal.CxWSResponseLDAPServersConfiguration
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetLdapServersConfigurations", ReplyAction:="*")>  _
        Function SetLdapServersConfigurationsAsync(ByVal sessionId As String, ByVal serverConfigurations() As CxPortal.CxWSLdapServerConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLDAPServersConfiguration)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/TestLdapServerConnection", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function TestLdapServerConnection(ByVal sessionId As String, ByVal serverConfiguration As CxPortal.CxWSLdapServerConfiguration) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/TestLdapServerConnection", ReplyAction:="*")>  _
        Function TestLdapServerConnectionAsync(ByVal sessionId As String, ByVal serverConfiguration As CxPortal.CxWSLdapServerConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetConfiguredLdapServerNames", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetConfiguredLdapServerNames(ByVal sessionId As String, ByVal onlySyncEnabled As Boolean) As CxPortal.CxWSResponseIdNamePairList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetConfiguredLdapServerNames", ReplyAction:="*")>  _
        Function GetConfiguredLdapServerNamesAsync(ByVal sessionId As String, ByVal onlySyncEnabled As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseIdNamePairList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetLdapServerGroups", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetLdapServerGroups(ByVal sessionId As String, ByVal ldapServerId As Integer, ByVal searchPattern As String, ByVal searchPatternOption As CxPortal.CxWSSearchPatternOption) As CxPortal.CxWSResponseLDAPServerGroups
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetLdapServerGroups", ReplyAction:="*")>  _
        Function GetLdapServerGroupsAsync(ByVal sessionId As String, ByVal ldapServerId As Integer, ByVal searchPattern As String, ByVal searchPatternOption As CxPortal.CxWSSearchPatternOption) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLDAPServerGroups)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetTeamLdapGroupsMapping", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetTeamLdapGroupsMapping(ByVal sessionId As String, ByVal teamId As String) As CxPortal.CxWSResponseTeamLdapGroupMappingData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetTeamLdapGroupsMapping", ReplyAction:="*")>  _
        Function GetTeamLdapGroupsMappingAsync(ByVal sessionId As String, ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamLdapGroupMappingData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetTeamLdapGroupsMapping", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SetTeamLdapGroupsMapping(ByVal sessionId As String, ByVal teamId As String, ByVal ldapGroups() As CxPortal.CxWSLdapGroupMapping) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetTeamLdapGroupsMapping", ReplyAction:="*")>  _
        Function SetTeamLdapGroupsMappingAsync(ByVal sessionId As String, ByVal teamId As String, ByVal ldapGroups() As CxPortal.CxWSLdapGroupMapping) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ExecuteDataRetention", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ExecuteDataRetention(ByVal SessionID As String, ByVal dataRetentionConfiguration As CxPortal.CxDataRetentionConfiguration) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ExecuteDataRetention", ReplyAction:="*")>  _
        Function ExecuteDataRetentionAsync(ByVal SessionID As String, ByVal dataRetentionConfiguration As CxPortal.CxDataRetentionConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetDataRetentionStatus", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetDataRetentionStatus(ByVal SessionID As String) As CxPortal.CxWSDataRetentionStatusResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetDataRetentionStatus", ReplyAction:="*")>  _
        Function GetDataRetentionStatusAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSDataRetentionStatusResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetLatestFinishedDataRetentionRequest", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetLatestFinishedDataRetentionRequest(ByVal SessionID As String) As CxPortal.CxWSDataRetentionRequestResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetLatestFinishedDataRetentionRequest", ReplyAction:="*")>  _
        Function GetLatestFinishedDataRetentionRequestAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSDataRetentionRequestResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/StopDataRetention", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function StopDataRetention(ByVal SessionID As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/StopDataRetention", ReplyAction:="*")>  _
        Function StopDataRetentionAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetLicenseExpirationDateForAdmin", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetLicenseExpirationDateForAdmin(ByVal sessionID As String) As CxPortal.CxWSResponseLicenseExpirationDateDetails
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetLicenseExpirationDateForAdmin", ReplyAction:="*")>  _
        Function GetLicenseExpirationDateForAdminAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLicenseExpirationDateDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/AddLicenseExpirationNotification", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function AddLicenseExpirationNotification(ByVal sessionID As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/AddLicenseExpirationNotification", ReplyAction:="*")>  _
        Function AddLicenseExpirationNotificationAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CancelLicenseExpirationNotification", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CancelLicenseExpirationNotification(ByVal sessionID As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CancelLicenseExpirationNotification", ReplyAction:="*")>  _
        Function CancelLicenseExpirationNotificationAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/Warmup", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function Warmup() As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/Warmup", ReplyAction:="*")>  _
        Function WarmupAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectsWithScans", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetProjectsWithScans(ByVal sessionId As String) As CxPortal.CxWSResponseProjectsScansList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectsWithScans", ReplyAction:="*")>  _
        Function GetProjectsWithScansAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProjectsScansList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UploadProjectWithDefaultSettings", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UploadProjectWithDefaultSettings(ByVal sessionId As String, ByVal projectSettings As CxPortal.ProjectBasicSettings, ByVal localCodeContainer As CxPortal.LocalCodeContainer) As CxPortal.CxWSResponseSourceID
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UploadProjectWithDefaultSettings", ReplyAction:="*")>  _
        Function UploadProjectWithDefaultSettingsAsync(ByVal sessionId As String, ByVal projectSettings As CxPortal.ProjectBasicSettings, ByVal localCodeContainer As CxPortal.LocalCodeContainer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourceID)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSourceCodeForScan", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetSourceCodeForScan(ByVal sessionID As String, ByVal scanId As Long) As CxPortal.CxWSResponseSourceContainer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSourceCodeForScan", ReplyAction:="*")>  _
        Function GetSourceCodeForScanAsync(ByVal sessionID As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourceContainer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryCollectionForLanguage", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetQueryCollectionForLanguage(ByVal sessionId As String, ByVal projectType As Integer, ByVal projectId As Long) As CxPortal.CxQueryCollectionResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryCollectionForLanguage", ReplyAction:="*")>  _
        Function GetQueryCollectionForLanguageAsync(ByVal sessionId As String, ByVal projectType As Integer, ByVal projectId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxQueryCollectionResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryCollectionForLanguageByTeamId", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetQueryCollectionForLanguageByTeamId(ByVal sessionId As String, ByVal projectType As Integer, ByVal teamId As String) As CxPortal.CxQueryCollectionResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryCollectionForLanguageByTeamId", ReplyAction:="*")>  _
        Function GetQueryCollectionForLanguageByTeamIdAsync(ByVal sessionId As String, ByVal projectType As Integer, ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxQueryCollectionResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UploadQueries", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UploadQueries(ByVal sessionId As String, ByVal queries() As CxPortal.CxWSQueryGroup) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UploadQueries", ReplyAction:="*")>  _
        Function UploadQueriesAsync(ByVal sessionId As String, ByVal queries() As CxPortal.CxWSQueryGroup) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/AddScanResultsToProject", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function AddScanResultsToProject(ByVal sessionId As String, ByVal projectId As Long, ByVal sourceId As String, ByVal resultsCollection As CxPortal.AuditResultsCollection, ByVal comment As String) As CxPortal.CxWSResponseBasicScanData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/AddScanResultsToProject", ReplyAction:="*")>  _
        Function AddScanResultsToProjectAsync(ByVal sessionId As String, ByVal projectId As Long, ByVal sourceId As String, ByVal resultsCollection As CxPortal.AuditResultsCollection, ByVal comment As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBasicScanData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResults", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResults(ByVal sessionId As String, ByVal scanId As Long) As CxPortal.CxWSResponseResultCollection
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResults", ReplyAction:="*")>  _
        Function GetResultsAsync(ByVal sessionId As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultCollection)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultSummary", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResultSummary(ByVal sessionId As String, ByVal scanId As Long) As CxPortal.CXWSResponseResultSummary
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultSummary", ReplyAction:="*")>  _
        Function GetResultSummaryAsync(ByVal sessionId As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CXWSResponseResultSummary)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCache", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetCache(ByVal sessionId As String, ByVal scanId As Long) As CxPortal.CxWSResponseCache
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCache", ReplyAction:="*")>  _
        Function GetCacheAsync(ByVal sessionId As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseCache)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/Login", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function Login(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer) As CxPortal.CxWSResponseLoginData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/Login", ReplyAction:="*")>  _
        Function LoginAsync(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SamlLogin", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SamlLogin(ByVal token As String, ByVal lcid As Integer) As CxPortal.CxWSResponseLoginData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SamlLogin", ReplyAction:="*")>  _
        Function SamlLoginAsync(ByVal token As String, ByVal lcid As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/LoginV2", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function LoginV2(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer, ByVal useExistingSession As Boolean) As CxPortal.CxWSResponseLoginData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/LoginV2", ReplyAction:="*")>  _
        Function LoginV2Async(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer, ByVal useExistingSession As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SsoLogin", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SsoLogin(ByVal encryptedCredentials As CxPortal.Credentials, ByVal lcid As Integer) As CxPortal.CxWSResponseLoginData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SsoLogin", ReplyAction:="*")>  _
        Function SsoLoginAsync(ByVal encryptedCredentials As CxPortal.Credentials, ByVal lcid As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SsoLoginV2", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SsoLoginV2(ByVal encryptedCredentials As CxPortal.Credentials, ByVal lcid As Integer, ByVal useExistingSession As Boolean) As CxPortal.CxWSResponseLoginData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SsoLoginV2", ReplyAction:="*")>  _
        Function SsoLoginV2Async(ByVal encryptedCredentials As CxPortal.Credentials, ByVal lcid As Integer, ByVal useExistingSession As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/Logout", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function Logout(ByVal sessionID As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/Logout", ReplyAction:="*")>  _
        Function LogoutAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/LoginBySID", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function LoginBySID(ByVal sessionID As String) As CxPortal.CxWSResponseLoginData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/LoginBySID", ReplyAction:="*")>  _
        Function LoginBySIDAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsFirstLogin", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsFirstLogin() As CxPortal.CxWSResponseBool
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsFirstLogin", ReplyAction:="*")>  _
        Function IsFirstLoginAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBool)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/FirstLogin", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function FirstLogin(ByVal newUsername As String, ByVal newPassword As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/FirstLogin", ReplyAction:="*")>  _
        Function FirstLoginAsync(ByVal newUsername As String, ByVal newPassword As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAssociatedGroupsList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAssociatedGroupsList(ByVal SessionID As String) As CxPortal.CxWSResponseGroupList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAssociatedGroupsList", ReplyAction:="*")>  _
        Function GetAssociatedGroupsListAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseGroupList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetConfigurationSetList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetConfigurationSetList(ByVal SessionID As String) As CxPortal.CxWSResponseConfigSetList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetConfigurationSetList", ReplyAction:="*")>  _
        Function GetConfigurationSetListAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseConfigSetList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidProjectName", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsValidProjectName(ByVal SessionID As String, ByVal ProjectName As String, ByVal GroupId As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidProjectName", ReplyAction:="*")>  _
        Function IsValidProjectNameAsync(ByVal SessionID As String, ByVal ProjectName As String, ByVal GroupId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSharedFileSystemLayer", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetSharedFileSystemLayer(ByVal SessionID As String, ByVal Path As String, ByVal UserCredentials As CxPortal.Credentials) As CxPortal.CxWSResponseFileSystemLayer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSharedFileSystemLayer", ReplyAction:="*")>  _
        Function GetSharedFileSystemLayerAsync(ByVal SessionID As String, ByVal Path As String, ByVal UserCredentials As CxPortal.Credentials) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseFileSystemLayer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetRepositoryFileSystemLayer", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetRepositoryFileSystemLayer(ByVal SessionID As String, ByVal Path As String, ByVal SourceControlSettings As CxPortal.SourceControlSettings) As CxPortal.CxWSResponseFileSystemLayer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetRepositoryFileSystemLayer", ReplyAction:="*")>  _
        Function GetRepositoryFileSystemLayerAsync(ByVal SessionID As String, ByVal Path As String, ByVal SourceControlSettings As CxPortal.SourceControlSettings) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseFileSystemLayer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSourceControlActionList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetSourceControlActionList(ByVal SessionID As String, ByVal teamId As String) As CxPortal.CxWSResponseSourceActionList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSourceControlActionList", ReplyAction:="*")>  _
        Function GetSourceControlActionListAsync(ByVal SessionID As String, ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourceActionList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPostScanActionList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetPostScanActionList(ByVal SessionID As String, ByVal teamId As String) As CxPortal.CxWSResponseSourceActionList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPostScanActionList", ReplyAction:="*")>  _
        Function GetPostScanActionListAsync(ByVal SessionID As String, ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourceActionList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateNewProject", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CreateNewProject(ByVal SessionID As String, ByVal Project As CxPortal.ProjectConfiguration) As CxPortal.CxWSResponseRunID
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateNewProject", ReplyAction:="*")>  _
        Function CreateNewProjectAsync(ByVal SessionID As String, ByVal Project As CxPortal.ProjectConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateAndRunProject", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CreateAndRunProject(ByVal SessionID As String, ByVal ProjectSettings As CxPortal.ProjectSettings, ByVal LocalCodeContainer As CxPortal.LocalCodeContainer, ByVal visibleToOtherUsers As Boolean) As CxPortal.CxWSResponseRunID
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateAndRunProject", ReplyAction:="*")>  _
        Function CreateAndRunProjectAsync(ByVal SessionID As String, ByVal ProjectSettings As CxPortal.ProjectSettings, ByVal LocalCodeContainer As CxPortal.LocalCodeContainer, ByVal visibleToOtherUsers As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RunScanAndAddToProject", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function RunScanAndAddToProject(ByVal sessionId As String, ByVal projectSettings As CxPortal.ProjectSettings, ByVal localCodeContainer As CxPortal.LocalCodeContainer, ByVal visibleToUtherUsers As Boolean) As CxPortal.CxWSResponseRunID
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RunScanAndAddToProject", ReplyAction:="*")>  _
        Function RunScanAndAddToProjectAsync(ByVal sessionId As String, ByVal projectSettings As CxPortal.ProjectSettings, ByVal localCodeContainer As CxPortal.LocalCodeContainer, ByVal visibleToUtherUsers As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CountLines", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CountLines(ByVal sessionId As String, ByVal localCodeContainer As CxPortal.LocalCodeContainer) As CxPortal.CxWSResponseCountLines
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CountLines", ReplyAction:="*")>  _
        Function CountLinesAsync(ByVal sessionId As String, ByVal localCodeContainer As CxPortal.LocalCodeContainer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseCountLines)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScansStatuses", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetScansStatuses(ByVal sessionID As String) As CxPortal.CxWSResponseExtendedScanStatusArray
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScansStatuses", ReplyAction:="*")>  _
        Function GetScansStatusesAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseExtendedScanStatusArray)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetStatusOfSingleScan", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetStatusOfSingleScan(ByVal sessionID As String, ByVal runId As String) As CxPortal.CxWSResponseExtendedScanStatus
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetStatusOfSingleScan", ReplyAction:="*")>  _
        Function GetStatusOfSingleScanAsync(ByVal sessionID As String, ByVal runId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseExtendedScanStatus)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/PostponeScan", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function PostponeScan(ByVal sessionID As String, ByVal RunId As String) As CxPortal.CxWSResponseQueueRunID
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/PostponeScan", ReplyAction:="*")>  _
        Function PostponeScanAsync(ByVal sessionID As String, ByVal RunId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueueRunID)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CancelScan", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CancelScan(ByVal sessionID As String, ByVal RunId As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CancelScan", ReplyAction:="*")>  _
        Function CancelScanAsync(ByVal sessionID As String, ByVal RunId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateProjectUserCredentials", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateProjectUserCredentials(ByVal sessionID As String, ByVal projectID As Long, ByVal credentials As CxPortal.Credentials) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateProjectUserCredentials", ReplyAction:="*")>  _
        Function UpdateProjectUserCredentialsAsync(ByVal sessionID As String, ByVal projectID As Long, ByVal credentials As CxPortal.Credentials) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectsWithUserCredentials", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetProjectsWithUserCredentials(ByVal sessionID As String, ByVal username As String) As CxPortal.CxWSResponseProjectsData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectsWithUserCredentials", ReplyAction:="*")>  _
        Function GetProjectsWithUserCredentialsAsync(ByVal sessionID As String, ByVal username As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProjectsData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectsCredentialUsers", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetProjectsCredentialUsers(ByVal sessionID As String) As CxPortal.CxWSResponseNameList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectsCredentialUsers", ReplyAction:="*")>  _
        Function GetProjectsCredentialUsersAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseNameList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectsDisplayData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetProjectsDisplayData(ByVal sessionID As String) As CxPortal.CxWSResponseProjectsDisplayData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectsDisplayData", ReplyAction:="*")>  _
        Function GetProjectsDisplayDataAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProjectsDisplayData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RunProjectImmediately", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function RunProjectImmediately(ByVal sessionID As String, ByVal projectID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RunProjectImmediately", ReplyAction:="*")>  _
        Function RunProjectImmediatelyAsync(ByVal sessionID As String, ByVal projectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RunProjectIncrementally", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function RunProjectIncrementally(ByVal sessionID As String, ByVal projectID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RunProjectIncrementally", ReplyAction:="*")>  _
        Function RunProjectIncrementallyAsync(ByVal sessionID As String, ByVal projectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteProject", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeleteProject(ByVal sessionID As String, ByVal projectID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteProject", ReplyAction:="*")>  _
        Function DeleteProjectAsync(ByVal sessionID As String, ByVal projectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectConfiguration", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetProjectConfiguration(ByVal sessionID As String, ByVal projectID As Long) As CxPortal.CxWSResponseProjectConfig
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectConfiguration", ReplyAction:="*")>  _
        Function GetProjectConfigurationAsync(ByVal sessionID As String, ByVal projectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProjectConfig)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectProperties", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetProjectProperties(ByVal sessionID As String, ByVal projectID As Long, ByVal scanType As CxPortal.ScanType) As CxPortal.CxWSResponsProjectProperties
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectProperties", ReplyAction:="*")>  _
        Function GetProjectPropertiesAsync(ByVal sessionID As String, ByVal projectID As Long, ByVal scanType As CxPortal.ScanType) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsProjectProperties)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateProjectConfiguration", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateProjectConfiguration(ByVal sessionID As String, ByVal projectID As Long, ByVal projectConfiguration As CxPortal.ProjectConfiguration) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateProjectConfiguration", ReplyAction:="*")>  _
        Function UpdateProjectConfigurationAsync(ByVal sessionID As String, ByVal projectID As Long, ByVal projectConfiguration As CxPortal.ProjectConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateProjectIncrementalConfiguration", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateProjectIncrementalConfiguration(ByVal sessionID As String, ByVal projectID As Long, ByVal projectConfiguration As CxPortal.ProjectConfiguration) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateProjectIncrementalConfiguration", ReplyAction:="*")>  _
        Function UpdateProjectIncrementalConfigurationAsync(ByVal sessionID As String, ByVal projectID As Long, ByVal projectConfiguration As CxPortal.ProjectConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectCharts", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetProjectCharts(ByVal sessionID As String, ByVal projectID As Long, ByVal scanType As CxPortal.ScanType) As CxPortal.CxWSResponsProjectChartData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectCharts", ReplyAction:="*")>  _
        Function GetProjectChartsAsync(ByVal sessionID As String, ByVal projectID As Long, ByVal scanType As CxPortal.ScanType) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsProjectChartData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetFalsePositiveFlag", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SetFalsePositiveFlag(ByVal sessionID As String, ByVal ResultId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal falsePositiveFlag As Boolean) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetFalsePositiveFlag", ReplyAction:="*")>  _
        Function SetFalsePositiveFlagAsync(ByVal sessionID As String, ByVal ResultId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal falsePositiveFlag As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateResultComment", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateResultComment(ByVal sessionID As String, ByVal ResultId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal comment As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateResultComment", ReplyAction:="*")>  _
        Function UpdateResultCommentAsync(ByVal sessionID As String, ByVal ResultId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal comment As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateResultState", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateResultState(ByVal sessionID As String, ByVal scanId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal Remarks As String, ByVal ResultLabelType As Integer, ByVal data As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateResultState", ReplyAction:="*")>  _
        Function UpdateResultStateAsync(ByVal sessionID As String, ByVal scanId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal Remarks As String, ByVal ResultLabelType As Integer, ByVal data As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateSetOfResultState", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateSetOfResultState(ByVal sessionID As String, ByVal resultsStates() As CxPortal.ResultStateData) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateSetOfResultState", ReplyAction:="*")>  _
        Function UpdateSetOfResultStateAsync(ByVal sessionID As String, ByVal resultsStates() As CxPortal.ResultStateData) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateSetOfResultStateInfluenceCheck", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateSetOfResultStateInfluenceCheck(ByVal sessionID As String, ByVal resultsStates() As CxPortal.ResultStateData, ByVal checkPathInfluence As Boolean) As CxPortal.CxWSResponseResultStateUpdate
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateSetOfResultStateInfluenceCheck", ReplyAction:="*")>  _
        Function UpdateSetOfResultStateInfluenceCheckAsync(ByVal sessionID As String, ByVal resultsStates() As CxPortal.ResultStateData, ByVal checkPathInfluence As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultStateUpdate)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/BranchProject", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function BranchProject(ByVal SessionID As String, ByVal Project As CxPortal.ProjectConfiguration, ByVal originalProjectId As Long) As CxPortal.CxWSResponseRunID
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/BranchProject", ReplyAction:="*")>  _
        Function BranchProjectAsync(ByVal SessionID As String, ByVal Project As CxPortal.ProjectConfiguration, ByVal originalProjectId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectBranchingStatus", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetProjectBranchingStatus(ByVal SessionID As String, ByVal BranchedProjectID As Long) As CxPortal.CxWSProjectBranchingStatusResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetProjectBranchingStatus", ReplyAction:="*")>  _
        Function GetProjectBranchingStatusAsync(ByVal SessionID As String, ByVal BranchedProjectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSProjectBranchingStatusResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteProjects", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeleteProjects(ByVal request As CxPortal.CxWSRequestDeleteProjects) As CxPortal.CxWSResponseDeleteProjects
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteProjects", ReplyAction:="*")>  _
        Function DeleteProjectsAsync(ByVal request As CxPortal.CxWSRequestDeleteProjects) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseDeleteProjects)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RunScanWithExistingProject", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function RunScanWithExistingProject(ByVal sessionId As String, ByVal projectName As String) As CxPortal.CxWSResponseRunID
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RunScanWithExistingProject", ReplyAction:="*")>  _
        Function RunScanWithExistingProjectAsync(ByVal sessionId As String, ByVal projectName As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScansDisplayData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetScansDisplayData(ByVal sessionID As String, ByVal projectID As Long) As CxPortal.CxWSResponseScansDisplayData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScansDisplayData", ReplyAction:="*")>  _
        Function GetScansDisplayDataAsync(ByVal sessionID As String, ByVal projectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScansDisplayData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteScan", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeleteScan(ByVal sessionID As String, ByVal ScanID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteScan", ReplyAction:="*")>  _
        Function DeleteScanAsync(ByVal sessionID As String, ByVal ScanID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanProperties", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetScanProperties(ByVal sessionID As String, ByVal ScanID As Long) As CxPortal.CxWSResponseScanProperties
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanProperties", ReplyAction:="*")>  _
        Function GetScanPropertiesAsync(ByVal sessionID As String, ByVal ScanID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScanProperties)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateScanComment", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateScanComment(ByVal sessionID As String, ByVal ScanID As Long, ByVal Comment As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateScanComment", ReplyAction:="*")>  _
        Function UpdateScanCommentAsync(ByVal sessionID As String, ByVal ScanID As Long, ByVal Comment As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScansDisplayDataForAllProjects", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetScansDisplayDataForAllProjects(ByVal sessionID As String) As CxPortal.CxWSResponseScansDisplayExtendedData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScansDisplayDataForAllProjects", ReplyAction:="*")>  _
        Function GetScansDisplayDataForAllProjectsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScansDisplayExtendedData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanSummary", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetScanSummary(ByVal i_SessionID As String, ByVal i_ScanID As Long, ByVal auditEvent As Boolean) As CxPortal.CxWSResponseScanSummaryExtended
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanSummary", ReplyAction:="*")>  _
        Function GetScanSummaryAsync(ByVal i_SessionID As String, ByVal i_ScanID As Long, ByVal auditEvent As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScanSummaryExtended)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanCompareSummary", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetScanCompareSummary(ByVal sessionId As String, ByVal oldScanId As Long, ByVal newScanId As Long) As CxPortal.CxWSResponseScanCompareSummary
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanCompareSummary", ReplyAction:="*")>  _
        Function GetScanCompareSummaryAsync(ByVal sessionId As String, ByVal oldScanId As Long, ByVal newScanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScanCompareSummary)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompareScanResults", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetCompareScanResults(ByVal sessionId As String, ByVal oldScanId As Long, ByVal newScanId As Long) As CxPortal.CxWSResponceScanCompareResults
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompareScanResults", ReplyAction:="*")>  _
        Function GetCompareScanResultsAsync(ByVal sessionId As String, ByVal oldScanId As Long, ByVal newScanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanCompareResults)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanLogs", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetScanLogs(ByVal cxWSRequestScanLog As CxPortal.CxWSRequestScanLog) As CxPortal.CxWSResponseScanLog
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetScanLogs", ReplyAction:="*")>  _
        Function GetScanLogsAsync(ByVal cxWSRequestScanLog As CxPortal.CxWSRequestScanLog) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScanLog)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteScans", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeleteScans(ByVal request As CxPortal.CxWSRequestDeleteScans) As CxPortal.CxWSResponseDeleteScans
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteScans", ReplyAction:="*")>  _
        Function DeleteScansAsync(ByVal request As CxPortal.CxWSRequestDeleteScans) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseDeleteScans)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/LockScan", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function LockScan(ByVal i_SessionID As String, ByVal i_ScanID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/LockScan", ReplyAction:="*")>  _
        Function LockScanAsync(ByVal i_SessionID As String, ByVal i_ScanID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UnlockScan", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UnlockScan(ByVal i_SessionID As String, ByVal i_ScanID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UnlockScan", ReplyAction:="*")>  _
        Function UnlockScanAsync(ByVal i_SessionID As String, ByVal i_ScanID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryDescriptionByQueryId", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetQueryDescriptionByQueryId(ByVal sessionId As String, ByVal queryId As Integer) As CxPortal.CxWSResponseQueryDescription
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryDescriptionByQueryId", ReplyAction:="*")>  _
        Function GetQueryDescriptionByQueryIdAsync(ByVal sessionId As String, ByVal queryId As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueryDescription)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryDescription", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetQueryDescription(ByVal sessionId As String, ByVal cweID As Integer) As CxPortal.CxWSResponseQueryDescription
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetQueryDescription", ReplyAction:="*")>  _
        Function GetQueryDescriptionAsync(ByVal sessionId As String, ByVal cweID As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueryDescription)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultDescription", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResultDescription(ByVal sessionID As String, ByVal scanID As Long, ByVal pathID As Long) As CxPortal.CxWSResponseResultDescription
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultDescription", ReplyAction:="*")>  _
        Function GetResultDescriptionAsync(ByVal sessionID As String, ByVal scanID As Long, ByVal pathID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultDescription)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCWEDescription", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetCWEDescription(ByVal sessionId As String, ByVal cweID As Integer) As CxPortal.CxWSResponseQueryDescription
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCWEDescription", ReplyAction:="*")>  _
        Function GetCWEDescriptionAsync(ByVal sessionId As String, ByVal cweID As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueryDescription)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSourceByScanID", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetSourceByScanID(ByVal sessionID As String, ByVal scanID As Long, ByVal fileToRetreive As String) As CxPortal.CxWSResponseSourceContent
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSourceByScanID", ReplyAction:="*")>  _
        Function GetSourceByScanIDAsync(ByVal sessionID As String, ByVal scanID As Long, ByVal fileToRetreive As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourceContent)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSourcesByScanID", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetSourcesByScanID(ByVal sessionID As String, ByVal scanID As Long, ByVal filesToRetreive() As String) As CxPortal.CxWSResponseSourcesContent
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSourcesByScanID", ReplyAction:="*")>  _
        Function GetSourcesByScanIDAsync(ByVal sessionID As String, ByVal scanID As Long, ByVal filesToRetreive() As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourcesContent)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultStateList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetResultStateList(ByVal sessionID As String) As CxPortal.CxWSResponseResultStateList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetResultStateList", ReplyAction:="*")>  _
        Function GetResultStateListAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultStateList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsSMTPHostConfigured", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsSMTPHostConfigured() As CxPortal.CxWSResponseBool
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsSMTPHostConfigured", ReplyAction:="*")>  _
        Function IsSMTPHostConfiguredAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBool)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsPasswordComplexityEnabled", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsPasswordComplexityEnabled() As CxPortal.CxWSResponseBool
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsPasswordComplexityEnabled", ReplyAction:="*")>  _
        Function IsPasswordComplexityEnabledAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBool)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsPrivateCloud", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsPrivateCloud() As CxPortal.CxWSResponseBool
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsPrivateCloud", ReplyAction:="*")>  _
        Function IsPrivateCloudAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBool)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsAdminAllowedToChangeUserPassword", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsAdminAllowedToChangeUserPassword(ByVal sessionID As String, ByVal userID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsAdminAllowedToChangeUserPassword", ReplyAction:="*")>  _
        Function IsAdminAllowedToChangeUserPasswordAsync(ByVal sessionID As String, ByVal userID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ForgotPassword", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ForgotPassword(ByVal passwordChangePageUrl As String, ByVal userName As String, ByVal email As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ForgotPassword", ReplyAction:="*")>  _
        Function ForgotPasswordAsync(ByVal passwordChangePageUrl As String, ByVal userName As String, ByVal email As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ResetPassword", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ResetPassword(ByVal sessionID As String, ByVal loginUrl As String, ByVal userID As Long) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ResetPassword", ReplyAction:="*")>  _
        Function ResetPasswordAsync(ByVal sessionID As String, ByVal loginUrl As String, ByVal userID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CheckChangePasswordToken", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CheckChangePasswordToken(ByVal token As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CheckChangePasswordToken", ReplyAction:="*")>  _
        Function CheckChangePasswordTokenAsync(ByVal token As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ChangePasswordWithToken", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ChangePasswordWithToken(ByVal token As String, ByVal password As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ChangePasswordWithToken", ReplyAction:="*")>  _
        Function ChangePasswordWithTokenAsync(ByVal token As String, ByVal password As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ChangePassword", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ChangePassword(ByVal sessionID As String, ByVal oldPsw As String, ByVal newPsw As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ChangePassword", ReplyAction:="*")>  _
        Function ChangePasswordAsync(ByVal sessionID As String, ByVal oldPsw As String, ByVal newPsw As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ChangePasswordAdminToUser", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ChangePasswordAdminToUser(ByVal sessionID As String, ByVal userID As Long, ByVal newPassword As String, ByVal adminPassword As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ChangePasswordAdminToUser", ReplyAction:="*")>  _
        Function ChangePasswordAdminToUserAsync(ByVal sessionID As String, ByVal userID As Long, ByVal newPassword As String, ByVal adminPassword As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompanies", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetCompanies() As CxPortal.CxWSResponseGroupList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompanies", ReplyAction:="*")>  _
        Function GetCompaniesAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseGroupList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RegisterPendingUser", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function RegisterPendingUser(ByVal pendingUser As CxPortal.WebClientPendingUser, ByVal pendingUsersTableUrl As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RegisterPendingUser", ReplyAction:="*")>  _
        Function RegisterPendingUserAsync(ByVal pendingUser As CxPortal.WebClientPendingUser, ByVal pendingUsersTableUrl As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPendingUsersList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetPendingUsersList(ByVal sessionID As String) As CxPortal.CxWSResponsePendingUsersList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetPendingUsersList", ReplyAction:="*")>  _
        Function GetPendingUsersListAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePendingUsersList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeletePendingUsers", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeletePendingUsers(ByVal sessionID As String, ByVal userIdList() As Integer) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeletePendingUsers", ReplyAction:="*")>  _
        Function DeletePendingUsersAsync(ByVal sessionID As String, ByVal userIdList() As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ApprovePendingUsers", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function ApprovePendingUsers(ByVal sessionID As String, ByVal userList() As CxPortal.WebClientApprovedUser) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/ApprovePendingUsers", ReplyAction:="*")>  _
        Function ApprovePendingUsersAsync(ByVal sessionID As String, ByVal userList() As CxPortal.WebClientApprovedUser) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetUserProfileData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetUserProfileData(ByVal sessionID As String) As CxPortal.CxWSResponseProfileData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetUserProfileData", ReplyAction:="*")>  _
        Function GetUserProfileDataAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProfileData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateUserProfileData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateUserProfileData(ByVal sessionID As String, ByVal userProfileData As CxPortal.ProfileData) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateUserProfileData", ReplyAction:="*")>  _
        Function UpdateUserProfileDataAsync(ByVal sessionID As String, ByVal userProfileData As CxPortal.ProfileData) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetUserById", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetUserById(ByVal sessionID As String, ByVal userId As Long) As CxPortal.CxWSResponseSingleUserData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetUserById", ReplyAction:="*")>  _
        Function GetUserByIdAsync(ByVal sessionID As String, ByVal userId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSingleUserData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllUsers", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAllUsers(ByVal sessionID As String) As CxPortal.CxWSResponseUserData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllUsers", ReplyAction:="*")>  _
        Function GetAllUsersAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseUserData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllUsersInGroup", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAllUsersInGroup(ByVal sessionID As String, ByVal groupID As String, ByVal isRecursive As Boolean) As CxPortal.CxWSResponseUserData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllUsersInGroup", ReplyAction:="*")>  _
        Function GetAllUsersInGroupAsync(ByVal sessionID As String, ByVal groupID As String, ByVal isRecursive As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseUserData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteUser", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeleteUser(ByVal sessionID As String, ByVal userID As Integer) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteUser", ReplyAction:="*")>  _
        Function DeleteUserAsync(ByVal sessionID As String, ByVal userID As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetHierarchyGroupTree", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetHierarchyGroupTree(ByVal sessionID As String) As CxPortal.CxWSResponseHierarchyGroupNodes
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetHierarchyGroupTree", ReplyAction:="*")>  _
        Function GetHierarchyGroupTreeAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseHierarchyGroupNodes)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetChildNodes", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetChildNodes(ByVal sessionID As String, ByVal pTeamId As String, ByVal pLevel As Integer, ByVal pTeamPath As String) As CxPortal.CxWSResponseHierarchyGroupNodes
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetChildNodes", ReplyAction:="*")>  _
        Function GetChildNodesAsync(ByVal sessionID As String, ByVal pTeamId As String, ByVal pLevel As Integer, ByVal pTeamPath As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseHierarchyGroupNodes)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAncestryGroupTree", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAncestryGroupTree(ByVal sessionID As String, ByVal pTeamID As String) As CxPortal.CxWSResponseHierarchyGroupNodes
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAncestryGroupTree", ReplyAction:="*")>  _
        Function GetAncestryGroupTreeAsync(ByVal sessionID As String, ByVal pTeamID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseHierarchyGroupNodes)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetUserActivationState", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function SetUserActivationState(ByVal sessionID As String, ByVal userID As Integer, ByVal activationState As Boolean) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/SetUserActivationState", ReplyAction:="*")>  _
        Function SetUserActivationStateAsync(ByVal sessionID As String, ByVal userID As Integer, ByVal activationState As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/AddNewUser", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function AddNewUser(ByVal sessionID As String, ByVal userData As CxPortal.UserData, ByVal userType As CxPortal.CxUserTypes) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/AddNewUser", ReplyAction:="*")>  _
        Function AddNewUserAsync(ByVal sessionID As String, ByVal userData As CxPortal.UserData, ByVal userType As CxPortal.CxUserTypes) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateUserData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateUserData(ByVal sessionID As String, ByVal userData As CxPortal.UserData) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateUserData", ReplyAction:="*")>  _
        Function UpdateUserDataAsync(ByVal sessionID As String, ByVal userData As CxPortal.UserData) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetServerLicenseData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetServerLicenseData(ByVal sessionID As String) As CxPortal.CxWSResponseServerLicenseData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetServerLicenseData", ReplyAction:="*")>  _
        Function GetServerLicenseDataAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseServerLicenseData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetUsersLicenseData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetUsersLicenseData(ByVal sessionID As String, ByVal groupID As String) As CxPortal.CxWSResponseUsersLicenseData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetUsersLicenseData", ReplyAction:="*")>  _
        Function GetUsersLicenseDataAsync(ByVal sessionID As String, ByVal groupID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseUsersLicenseData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompaniesLicenseData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetCompaniesLicenseData(ByVal sessionID As String, ByVal groupID As String) As CxPortal.CxWSResponseCompaniesLicenseData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompaniesLicenseData", ReplyAction:="*")>  _
        Function GetCompaniesLicenseDataAsync(ByVal sessionID As String, ByVal groupID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseCompaniesLicenseData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSPLicenseData", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetSPLicenseData(ByVal sessionID As String, ByVal groupID As String) As CxPortal.CxWSResponseSPLicenseData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetSPLicenseData", ReplyAction:="*")>  _
        Function GetSPLicenseDataAsync(ByVal sessionID As String, ByVal groupID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSPLicenseData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateUserGroups", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateUserGroups(ByVal sessionID As String, ByVal userID As Long, ByVal unsubscribedGroups() As CxPortal.Group, ByVal subscribedGroups() As CxPortal.Group, ByVal role As CxPortal.Role) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateUserGroups", ReplyAction:="*")>  _
        Function UpdateUserGroupsAsync(ByVal sessionID As String, ByVal userID As Long, ByVal unsubscribedGroups() As CxPortal.Group, ByVal subscribedGroups() As CxPortal.Group, ByVal role As CxPortal.Role) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompaniesList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetCompaniesList() As CxPortal.CxWSResponseGroupList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetCompaniesList", ReplyAction:="*")>  _
        Function GetCompaniesListAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseGroupList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidUserName", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsValidUserName(ByVal sessionID As String, ByVal username As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidUserName", ReplyAction:="*")>  _
        Function IsValidUserNameAsync(ByVal sessionID As String, ByVal username As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidEmail", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function IsValidEmail(ByVal sessionID As String, ByVal email As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/IsValidEmail", ReplyAction:="*")>  _
        Function IsValidEmailAsync(ByVal sessionID As String, ByVal email As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAvailbleDomainNames", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAvailbleDomainNames(ByVal sessionID As String) As CxPortal.CxWSResponseNameList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAvailbleDomainNames", ReplyAction:="*")>  _
        Function GetAvailbleDomainNamesAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseNameList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAvailbleUserDirectoriesNames", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAvailbleUserDirectoriesNames(ByVal sessionID As String) As CxPortal.CxWSResponseNameList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAvailbleUserDirectoriesNames", ReplyAction:="*")>  _
        Function GetAvailbleUserDirectoriesNamesAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseNameList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAvailbleUserDirectories", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAvailbleUserDirectories(ByVal sessionID As String) As CxPortal.CxWSResponseUserDirectories
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAvailbleUserDirectories", ReplyAction:="*")>  _
        Function GetAvailbleUserDirectoriesAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseUserDirectories)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllUsersFromDomain", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAllUsersFromDomain(ByVal sessionID As String, ByVal domain As String, ByVal i_SearchPattern As String) As CxPortal.CxWSResponseDomainUserList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllUsersFromDomain", ReplyAction:="*")>  _
        Function GetAllUsersFromDomainAsync(ByVal sessionID As String, ByVal domain As String, ByVal i_SearchPattern As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseDomainUserList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllUsersFromUserDirectory", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAllUsersFromUserDirectory(ByVal sessionID As String, ByVal domain As String, ByVal i_SearchPattern As String, ByVal searchPatternOption As CxPortal.CxWSSearchPatternOption) As CxPortal.CxWSResponseDomainUserList
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllUsersFromUserDirectory", ReplyAction:="*")>  _
        Function GetAllUsersFromUserDirectoryAsync(ByVal sessionID As String, ByVal domain As String, ByVal i_SearchPattern As String, ByVal searchPatternOption As CxPortal.CxWSSearchPatternOption) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseDomainUserList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateNewTeam", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CreateNewTeam(ByVal sessionID As String, ByVal parentTeamID As String, ByVal newTeamName As String, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateNewTeam", ReplyAction:="*")>  _
        Function CreateNewTeamAsync(ByVal sessionID As String, ByVal parentTeamID As String, ByVal newTeamName As String, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RenameTeam", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function RenameTeam(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RenameTeam", ReplyAction:="*")>  _
        Function RenameTeamAsync(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateTeam", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function UpdateTeam(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/UpdateTeam", ReplyAction:="*")>  _
        Function UpdateTeamAsync(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllTeams", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAllTeams(ByVal sessionID As String) As CxPortal.CxWSResponseTeamData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllTeams", ReplyAction:="*")>  _
        Function GetAllTeamsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllUserDirecTeams", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAllUserDirecTeams(ByVal sessionID As String) As CxPortal.CxWSResponseTeamData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllUserDirecTeams", ReplyAction:="*")>  _
        Function GetAllUserDirecTeamsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteTeam", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeleteTeam(ByVal sessionID As String, ByVal teamID As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteTeam", ReplyAction:="*")>  _
        Function DeleteTeamAsync(ByVal sessionID As String, ByVal teamID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateNewCompany", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CreateNewCompany(ByVal sessionID As String, ByVal ParentSP As String, ByVal newTCompanyName As String, ByVal companyManagers As Integer, ByVal scanners As Integer, ByVal reviewers As Integer, ByVal allowActions As Boolean, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateNewCompany", ReplyAction:="*")>  _
        Function CreateNewCompanyAsync(ByVal sessionID As String, ByVal ParentSP As String, ByVal newTCompanyName As String, ByVal companyManagers As Integer, ByVal scanners As Integer, ByVal reviewers As Integer, ByVal allowActions As Boolean, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateNewServiceProvider", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function CreateNewServiceProvider(ByVal sessionID As String, ByVal newSpName As String, ByVal spManagersint As Integer, ByVal companyManagers As Integer, ByVal scanners As Integer, ByVal reviewers As Integer, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/CreateNewServiceProvider", ReplyAction:="*")>  _
        Function CreateNewServiceProviderAsync(ByVal sessionID As String, ByVal newSpName As String, ByVal spManagersint As Integer, ByVal companyManagers As Integer, ByVal scanners As Integer, ByVal reviewers As Integer, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RenameCompany", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function RenameCompany(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/RenameCompany", ReplyAction:="*")>  _
        Function RenameCompanyAsync(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllCompanies", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAllCompanies(ByVal sessionID As String) As CxPortal.CxWSResponseTeamData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllCompanies", ReplyAction:="*")>  _
        Function GetAllCompaniesAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllSPs", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function GetAllSPs(ByVal sessionID As String) As CxPortal.CxWSResponseTeamData
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/GetAllSPs", ReplyAction:="*")>  _
        Function GetAllSPsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteCompany", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeleteCompany(ByVal sessionID As String, ByVal teamID As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteCompany", ReplyAction:="*")>  _
        Function DeleteCompanyAsync(ByVal sessionID As String, ByVal teamID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteSP", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxWSReportRequest)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(WebClientUser)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(CxPivotRow()))>  _
        Function DeleteSP(ByVal sessionID As String, ByVal teamID As String) As CxPortal.CxWSBasicRepsonse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Checkmarx.com/DeleteSP", ReplyAction:="*")>  _
        Function DeleteSPAsync(ByVal sessionID As String, ByVal teamID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse)
    End Interface
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseDomainUserList)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseUserDirectories)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseHierarchyGroupNodes)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSingleUserData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseProfileData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponsePendingUsersList)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseResultStateList)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSourcesContent)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseResultDescription)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseQueryDescription)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseDeleteScans)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseScanLog)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponceScanCompareResults)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseScanCompareSummary)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseScanSummary)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseScanSummaryExtended)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseScansDisplayExtendedData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseScanProperties)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseScansDisplayData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseDeleteProjects)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseResultStateUpdate)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponsProjectChartData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponsProjectProperties)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseProjectConfig)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseProjectsDisplayData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseProjectsData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseQueueRunID)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseExtendedScanStatusArray)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseCountLines)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSourceActionList)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseFileSystemLayer)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseConfigSetList)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseGroupList)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseCache)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CXWSResponseResultSummary)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseResultCollection)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSourceContainer)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSourceID)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseProjectsScansList)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseLicenseExpirationDateDetails)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSDataRetentionRequestResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSDataRetentionStatusResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseTeamLdapGroupMappingData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseLDAPServerGroups)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseIdNamePairList)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseLDAPServersConfiguration)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseJSONData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseFailedScansDisplayData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseProjectScannedDisplayData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxTeamPathsResponseResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSCxMoveTeamResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSCxVersionResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemRetrieveResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemSaveResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemMetaResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSUserPreferencesResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseScanResults)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSReportStatusResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSProjectBranchingStatusResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSCreateReportResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseTransportedQueries)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseExistsingTransportedPresetQueries)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSImportQueriesRepsonse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponsePreset)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseQueries)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseRunID)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseEngineServerId)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseEngineServers)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSaasPackage)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSessionID)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseLoginData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSaasLoginData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseShortQueryDescription)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponsePivotLayouts)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSourceContent)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseScanStatus)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseExtendedScanStatus)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseBasicScanData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponsePivotTable)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseBool)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseAssignUsers)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseUserData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseNameList)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponsePredefinedCommands)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseCustomFieldValues)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseCustomFields)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseResultGraph)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseResultPaths)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponceFileNames)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponceResultPath)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponceScanResults)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponceQuerisForScan)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSQueryVersionDetailsResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseQueriesCategories)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponsePresetDetails)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxQueryCollectionResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponsePresetList)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseInstallationSettings)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWsResponseSystemSettings)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSystemLanguages)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseUsersLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseCompaniesLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSPLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseServerManagersLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseServerLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWsResponseCompanyProperties)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseTeamData)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSBasicRepsonse
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private isSuccesfullField As Boolean
        
        Private errorMessageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property IsSuccesfull() As Boolean
            Get
                Return Me.isSuccesfullField
            End Get
            Set
                Me.isSuccesfullField = value
                Me.RaisePropertyChanged("IsSuccesfull")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ErrorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
                Me.RaisePropertyChanged("ErrorMessage")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxDomainUser
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private usernameField As String
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private emailField As String
        
        Private uPNField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
                Me.RaisePropertyChanged("Username")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
                Me.RaisePropertyChanged("FirstName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
                Me.RaisePropertyChanged("LastName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
                Me.RaisePropertyChanged("Email")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property UPN() As String
            Get
                Return Me.uPNField
            End Get
            Set
                Me.uPNField = value
                Me.RaisePropertyChanged("UPN")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSActiveDirectoryDomainDetails
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private netbiosNameField As String
        
        Private fullyQualifiedNameField As String
        
        Private isMappedToLdapField As Boolean
        
        Private hasDomainUsersField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property NetbiosName() As String
            Get
                Return Me.netbiosNameField
            End Get
            Set
                Me.netbiosNameField = value
                Me.RaisePropertyChanged("NetbiosName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property FullyQualifiedName() As String
            Get
                Return Me.fullyQualifiedNameField
            End Get
            Set
                Me.fullyQualifiedNameField = value
                Me.RaisePropertyChanged("FullyQualifiedName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property IsMappedToLdap() As Boolean
            Get
                Return Me.isMappedToLdapField
            End Get
            Set
                Me.isMappedToLdapField = value
                Me.RaisePropertyChanged("IsMappedToLdap")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property HasDomainUsers() As Boolean
            Get
                Return Me.hasDomainUsersField
            End Get
            Set
                Me.hasDomainUsersField = value
                Me.RaisePropertyChanged("HasDomainUsers")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ProfileData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private userNameField As String
        
        Private firstNameField As String
        
        Private userPreferedLanguageLCIDField As Integer
        
        Private lastNameField As String
        
        Private jobTitleField As String
        
        Private emailField As String
        
        Private phoneField As String
        
        Private cellPhoneField As String
        
        Private skypeField As String
        
        Private countryField As String
        
        Private auditUserField As Boolean
        
        Private lastLoginDateField As Date
        
        Private userTeamsField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
                Me.RaisePropertyChanged("UserName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
                Me.RaisePropertyChanged("FirstName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property UserPreferedLanguageLCID() As Integer
            Get
                Return Me.userPreferedLanguageLCIDField
            End Get
            Set
                Me.userPreferedLanguageLCIDField = value
                Me.RaisePropertyChanged("UserPreferedLanguageLCID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
                Me.RaisePropertyChanged("LastName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property JobTitle() As String
            Get
                Return Me.jobTitleField
            End Get
            Set
                Me.jobTitleField = value
                Me.RaisePropertyChanged("JobTitle")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
                Me.RaisePropertyChanged("Email")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property Phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
                Me.RaisePropertyChanged("Phone")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property CellPhone() As String
            Get
                Return Me.cellPhoneField
            End Get
            Set
                Me.cellPhoneField = value
                Me.RaisePropertyChanged("CellPhone")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property Skype() As String
            Get
                Return Me.skypeField
            End Get
            Set
                Me.skypeField = value
                Me.RaisePropertyChanged("Skype")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property Country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
                Me.RaisePropertyChanged("Country")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property AuditUser() As Boolean
            Get
                Return Me.auditUserField
            End Get
            Set
                Me.auditUserField = value
                Me.RaisePropertyChanged("AuditUser")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property LastLoginDate() As Date
            Get
                Return Me.lastLoginDateField
            End Get
            Set
                Me.lastLoginDateField = value
                Me.RaisePropertyChanged("LastLoginDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property UserTeams() As String
            Get
                Return Me.userTeamsField
            End Get
            Set
                Me.userTeamsField = value
                Me.RaisePropertyChanged("UserTeams")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class WebClientApprovedUser
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private userIDField As Integer
        
        Private userNameField As String
        
        Private companyIDField As String
        
        Private expirationDateField As Date
        
        Private teamIdField As String
        
        Private loginUrlField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property UserID() As Integer
            Get
                Return Me.userIDField
            End Get
            Set
                Me.userIDField = value
                Me.RaisePropertyChanged("UserID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
                Me.RaisePropertyChanged("UserName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property CompanyID() As String
            Get
                Return Me.companyIDField
            End Get
            Set
                Me.companyIDField = value
                Me.RaisePropertyChanged("CompanyID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property ExpirationDate() As Date
            Get
                Return Me.expirationDateField
            End Get
            Set
                Me.expirationDateField = value
                Me.RaisePropertyChanged("ExpirationDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property TeamId() As String
            Get
                Return Me.teamIdField
            End Get
            Set
                Me.teamIdField = value
                Me.RaisePropertyChanged("TeamId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property LoginUrl() As String
            Get
                Return Me.loginUrlField
            End Get
            Set
                Me.loginUrlField = value
                Me.RaisePropertyChanged("LoginUrl")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class WebClientPendingUser
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private passwordField As String
        
        Private emailField As String
        
        Private jobTitleField As String
        
        Private userNameField As String
        
        Private phoneField As String
        
        Private cellPhoneField As String
        
        Private skypeField As String
        
        Private companyIDField As String
        
        Private companyNameField As String
        
        Private countryField As String
        
        Private groupsField() As Group
        
        Private createdDateField As CxDateTime
        
        Private auditUserField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
                Me.RaisePropertyChanged("FirstName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
                Me.RaisePropertyChanged("LastName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
                Me.RaisePropertyChanged("Password")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
                Me.RaisePropertyChanged("Email")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property JobTitle() As String
            Get
                Return Me.jobTitleField
            End Get
            Set
                Me.jobTitleField = value
                Me.RaisePropertyChanged("JobTitle")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
                Me.RaisePropertyChanged("UserName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property Phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
                Me.RaisePropertyChanged("Phone")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property CellPhone() As String
            Get
                Return Me.cellPhoneField
            End Get
            Set
                Me.cellPhoneField = value
                Me.RaisePropertyChanged("CellPhone")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property Skype() As String
            Get
                Return Me.skypeField
            End Get
            Set
                Me.skypeField = value
                Me.RaisePropertyChanged("Skype")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property CompanyID() As String
            Get
                Return Me.companyIDField
            End Get
            Set
                Me.companyIDField = value
                Me.RaisePropertyChanged("CompanyID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property CompanyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
                Me.RaisePropertyChanged("CompanyName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property Country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
                Me.RaisePropertyChanged("Country")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=13)>  _
        Public Property Groups() As Group()
            Get
                Return Me.groupsField
            End Get
            Set
                Me.groupsField = value
                Me.RaisePropertyChanged("Groups")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property CreatedDate() As CxDateTime
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
                Me.RaisePropertyChanged("CreatedDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property AuditUser() As Boolean
            Get
                Return Me.auditUserField
            End Get
            Set
                Me.auditUserField = value
                Me.RaisePropertyChanged("AuditUser")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(HierarchyGroupNode)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class Group
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private groupNameField As String
        
        Private idField As String
        
        Private typeField As GroupType
        
        Private guidField As String
        
        Private fullPathField As String
        
        Private pathField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property GroupName() As String
            Get
                Return Me.groupNameField
            End Get
            Set
                Me.groupNameField = value
                Me.RaisePropertyChanged("GroupName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Type() As GroupType
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
                Me.RaisePropertyChanged("Type")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Guid() As String
            Get
                Return Me.guidField
            End Get
            Set
                Me.guidField = value
                Me.RaisePropertyChanged("Guid")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property FullPath() As String
            Get
                Return Me.fullPathField
            End Get
            Set
                Me.fullPathField = value
                Me.RaisePropertyChanged("FullPath")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Path() As String
            Get
                Return Me.pathField
            End Get
            Set
                Me.pathField = value
                Me.RaisePropertyChanged("Path")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum GroupType
        
        '''<remarks/>
        Team
        
        '''<remarks/>
        Company
        
        '''<remarks/>
        SP
        
        '''<remarks/>
        Server
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class HierarchyGroupNode
        Inherits Group
        
        Private childsField() As HierarchyGroupNode
        
        Private membershipField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Childs() As HierarchyGroupNode()
            Get
                Return Me.childsField
            End Get
            Set
                Me.childsField = value
                Me.RaisePropertyChanged("Childs")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Membership() As Boolean
            Get
                Return Me.membershipField
            End Get
            Set
                Me.membershipField = value
                Me.RaisePropertyChanged("Membership")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxDateTime
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private hourField As Integer
        
        Private minuteField As Integer
        
        Private secondField As Integer
        
        Private dayField As Integer
        
        Private monthField As Integer
        
        Private yearField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Hour() As Integer
            Get
                Return Me.hourField
            End Get
            Set
                Me.hourField = value
                Me.RaisePropertyChanged("Hour")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Minute() As Integer
            Get
                Return Me.minuteField
            End Get
            Set
                Me.minuteField = value
                Me.RaisePropertyChanged("Minute")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Second() As Integer
            Get
                Return Me.secondField
            End Get
            Set
                Me.secondField = value
                Me.RaisePropertyChanged("Second")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Day() As Integer
            Get
                Return Me.dayField
            End Get
            Set
                Me.dayField = value
                Me.RaisePropertyChanged("Day")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Month() As Integer
            Get
                Return Me.monthField
            End Get
            Set
                Me.monthField = value
                Me.RaisePropertyChanged("Month")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Year() As Integer
            Get
                Return Me.yearField
            End Get
            Set
                Me.yearField = value
                Me.RaisePropertyChanged("Year")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ResultState
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private resultNameField As String
        
        Private resultIDField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ResultName() As String
            Get
                Return Me.resultNameField
            End Get
            Set
                Me.resultNameField = value
                Me.RaisePropertyChanged("ResultName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ResultID() As Long
            Get
                Return Me.resultIDField
            End Get
            Set
                Me.resultIDField = value
                Me.RaisePropertyChanged("ResultID")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSRequestDeleteScans
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private sessionIDField As String
        
        Private scanIDsField() As Long
        
        Private flagsField As DeleteFlags
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property SessionID() As String
            Get
                Return Me.sessionIDField
            End Get
            Set
                Me.sessionIDField = value
                Me.RaisePropertyChanged("SessionID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property ScanIDs() As Long()
            Get
                Return Me.scanIDsField
            End Get
            Set
                Me.scanIDsField = value
                Me.RaisePropertyChanged("ScanIDs")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Flags() As DeleteFlags
            Get
                Return Me.flagsField
            End Get
            Set
                Me.flagsField = value
                Me.RaisePropertyChanged("Flags")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.FlagsAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum DeleteFlags
        
        '''<remarks/>
        None = 1
        
        '''<remarks/>
        RunningScans = 2
        
        '''<remarks/>
        OnlyAllowedProjects = 4
    End Enum
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSRequestScanLogUnfinishedScan)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSRequestScanLogFinishedScan)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSRequestScanLogFailedScan)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public MustInherit Class CxWSRequestScanLog
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private sessionIDField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property SessionID() As String
            Get
                Return Me.sessionIDField
            End Get
            Set
                Me.sessionIDField = value
                Me.RaisePropertyChanged("SessionID")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSRequestScanLogUnfinishedScan
        Inherits CxWSRequestScanLog
        
        Private scanRequestIdField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ScanRequestId() As Long
            Get
                Return Me.scanRequestIdField
            End Get
            Set
                Me.scanRequestIdField = value
                Me.RaisePropertyChanged("ScanRequestId")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSRequestScanLogFinishedScan
        Inherits CxWSRequestScanLog
        
        Private scanIdField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ScanId() As Long
            Get
                Return Me.scanIdField
            End Get
            Set
                Me.scanIdField = value
                Me.RaisePropertyChanged("ScanId")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSRequestScanLogFailedScan
        Inherits CxWSRequestScanLog
        
        Private idField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWsScanCompareCount
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private newField As Integer
        
        Private fixedField As Integer
        
        Private reOccuredField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property [New]() As Integer
            Get
                Return Me.newField
            End Get
            Set
                Me.newField = value
                Me.RaisePropertyChanged("New")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Fixed() As Integer
            Get
                Return Me.fixedField
            End Get
            Set
                Me.fixedField = value
                Me.RaisePropertyChanged("Fixed")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ReOccured() As Integer
            Get
                Return Me.reOccuredField
            End Get
            Set
                Me.reOccuredField = value
                Me.RaisePropertyChanged("ReOccured")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSQueryLanguageState
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private languageIDField As Integer
        
        Private languageNameField As String
        
        Private languageHashField As String
        
        Private stateCreationDateField As Date
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property LanguageID() As Integer
            Get
                Return Me.languageIDField
            End Get
            Set
                Me.languageIDField = value
                Me.RaisePropertyChanged("LanguageID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property LanguageName() As String
            Get
                Return Me.languageNameField
            End Get
            Set
                Me.languageNameField = value
                Me.RaisePropertyChanged("LanguageName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property LanguageHash() As String
            Get
                Return Me.languageHashField
            End Get
            Set
                Me.languageHashField = value
                Me.RaisePropertyChanged("LanguageHash")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property StateCreationDate() As Date
            Get
                Return Me.stateCreationDateField
            End Get
            Set
                Me.stateCreationDateField = value
                Me.RaisePropertyChanged("StateCreationDate")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class PartialSASTScansDTO
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private abortedMessageField As String
        
        Private abortedStatusField As SASTScanAbortedStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property AbortedMessage() As String
            Get
                Return Me.abortedMessageField
            End Get
            Set
                Me.abortedMessageField = value
                Me.RaisePropertyChanged("AbortedMessage")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property AbortedStatus() As SASTScanAbortedStatus
            Get
                Return Me.abortedStatusField
            End Get
            Set
                Me.abortedStatusField = value
                Me.RaisePropertyChanged("AbortedStatus")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum SASTScanAbortedStatus
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Queries
        
        '''<remarks/>
        Stages
        
        '''<remarks/>
        QueriesExceededResultThreshold
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class Vulerability
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private nameField As String
        
        Private severityField As String
        
        Private countField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Severity() As String
            Get
                Return Me.severityField
            End Get
            Set
                Me.severityField = value
                Me.RaisePropertyChanged("Severity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Count() As Long
            Get
                Return Me.countField
            End Get
            Set
                Me.countField = value
                Me.RaisePropertyChanged("Count")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(ScanDisplayDataExtended)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ScanDisplayData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private scanIDField As Long
        
        Private isAllowedToDeleteField As Boolean
        
        Private queuedDateTimeField As CxDateTime
        
        Private riskLevelScoreField As Integer
        
        Private finishedDateTimeField As CxDateTime
        
        Private projectIdField As Long
        
        Private projectNameField As String
        
        Private initiatorNameField As String
        
        Private teamNameField As String
        
        Private isIncrementalField As Boolean
        
        Private cxVersionField As String
        
        Private lOCField As Long
        
        Private highSeverityResultsField As Integer
        
        Private mediumSeverityResultsField As Integer
        
        Private lowSeverityResultsField As Integer
        
        Private commentsField As String
        
        Private scanDisplayTypeField As ScanType
        
        Private serverNameField As String
        
        Private originField As String
        
        Private failedLOCField As String
        
        Private statisticsCalculationDateField As CxDateTime
        
        Private isPublicField As Boolean
        
        Private isLockedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ScanID() As Long
            Get
                Return Me.scanIDField
            End Get
            Set
                Me.scanIDField = value
                Me.RaisePropertyChanged("ScanID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property IsAllowedToDelete() As Boolean
            Get
                Return Me.isAllowedToDeleteField
            End Get
            Set
                Me.isAllowedToDeleteField = value
                Me.RaisePropertyChanged("IsAllowedToDelete")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property QueuedDateTime() As CxDateTime
            Get
                Return Me.queuedDateTimeField
            End Get
            Set
                Me.queuedDateTimeField = value
                Me.RaisePropertyChanged("QueuedDateTime")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property RiskLevelScore() As Integer
            Get
                Return Me.riskLevelScoreField
            End Get
            Set
                Me.riskLevelScoreField = value
                Me.RaisePropertyChanged("RiskLevelScore")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property FinishedDateTime() As CxDateTime
            Get
                Return Me.finishedDateTimeField
            End Get
            Set
                Me.finishedDateTimeField = value
                Me.RaisePropertyChanged("FinishedDateTime")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property ProjectId() As Long
            Get
                Return Me.projectIdField
            End Get
            Set
                Me.projectIdField = value
                Me.RaisePropertyChanged("ProjectId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
                Me.RaisePropertyChanged("ProjectName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property InitiatorName() As String
            Get
                Return Me.initiatorNameField
            End Get
            Set
                Me.initiatorNameField = value
                Me.RaisePropertyChanged("InitiatorName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property TeamName() As String
            Get
                Return Me.teamNameField
            End Get
            Set
                Me.teamNameField = value
                Me.RaisePropertyChanged("TeamName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property IsIncremental() As Boolean
            Get
                Return Me.isIncrementalField
            End Get
            Set
                Me.isIncrementalField = value
                Me.RaisePropertyChanged("IsIncremental")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property CxVersion() As String
            Get
                Return Me.cxVersionField
            End Get
            Set
                Me.cxVersionField = value
                Me.RaisePropertyChanged("CxVersion")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property LOC() As Long
            Get
                Return Me.lOCField
            End Get
            Set
                Me.lOCField = value
                Me.RaisePropertyChanged("LOC")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property HighSeverityResults() As Integer
            Get
                Return Me.highSeverityResultsField
            End Get
            Set
                Me.highSeverityResultsField = value
                Me.RaisePropertyChanged("HighSeverityResults")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property MediumSeverityResults() As Integer
            Get
                Return Me.mediumSeverityResultsField
            End Get
            Set
                Me.mediumSeverityResultsField = value
                Me.RaisePropertyChanged("MediumSeverityResults")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property LowSeverityResults() As Integer
            Get
                Return Me.lowSeverityResultsField
            End Get
            Set
                Me.lowSeverityResultsField = value
                Me.RaisePropertyChanged("LowSeverityResults")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property Comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
                Me.RaisePropertyChanged("Comments")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=16)>  _
        Public Property ScanDisplayType() As ScanType
            Get
                Return Me.scanDisplayTypeField
            End Get
            Set
                Me.scanDisplayTypeField = value
                Me.RaisePropertyChanged("ScanDisplayType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=17)>  _
        Public Property ServerName() As String
            Get
                Return Me.serverNameField
            End Get
            Set
                Me.serverNameField = value
                Me.RaisePropertyChanged("ServerName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=18)>  _
        Public Property Origin() As String
            Get
                Return Me.originField
            End Get
            Set
                Me.originField = value
                Me.RaisePropertyChanged("Origin")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=19)>  _
        Public Property FailedLOC() As String
            Get
                Return Me.failedLOCField
            End Get
            Set
                Me.failedLOCField = value
                Me.RaisePropertyChanged("FailedLOC")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=20)>  _
        Public Property StatisticsCalculationDate() As CxDateTime
            Get
                Return Me.statisticsCalculationDateField
            End Get
            Set
                Me.statisticsCalculationDateField = value
                Me.RaisePropertyChanged("StatisticsCalculationDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=21)>  _
        Public Property IsPublic() As Boolean
            Get
                Return Me.isPublicField
            End Get
            Set
                Me.isPublicField = value
                Me.RaisePropertyChanged("IsPublic")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=22)>  _
        Public Property IsLocked() As Boolean
            Get
                Return Me.isLockedField
            End Get
            Set
                Me.isLockedField = value
                Me.RaisePropertyChanged("IsLocked")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum ScanType
        
        '''<remarks/>
        UNKNOWN
        
        '''<remarks/>
        ALLSCANS
        
        '''<remarks/>
        REGULAR
        
        '''<remarks/>
        SUBSET
        
        '''<remarks/>
        [PARTIAL]
        
        '''<remarks/>
        RUNNING
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ScanDisplayDataExtended
        Inherits ScanDisplayData
        
        Private scanCompletedStatusField As ScanCompletedStatus
        
        Private partialScanAboartedMessageField As String
        
        Private teamField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ScanCompletedStatus() As ScanCompletedStatus
            Get
                Return Me.scanCompletedStatusField
            End Get
            Set
                Me.scanCompletedStatusField = value
                Me.RaisePropertyChanged("ScanCompletedStatus")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property PartialScanAboartedMessage() As String
            Get
                Return Me.partialScanAboartedMessageField
            End Get
            Set
                Me.partialScanAboartedMessageField = value
                Me.RaisePropertyChanged("PartialScanAboartedMessage")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Team() As String
            Get
                Return Me.teamField
            End Get
            Set
                Me.teamField = value
                Me.RaisePropertyChanged("Team")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum ScanCompletedStatus
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Completed
        
        '''<remarks/>
        [Partial]
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class UndeletedObject
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private errorCodeField As UndeletedObjectCode
        
        Private projectNameField As String
        
        Private teamPathField As String
        
        Private startTimeField As Double
        
        Private errorMessageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ErrorCode() As UndeletedObjectCode
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
                Me.RaisePropertyChanged("ErrorCode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
                Me.RaisePropertyChanged("ProjectName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property TeamPath() As String
            Get
                Return Me.teamPathField
            End Get
            Set
                Me.teamPathField = value
                Me.RaisePropertyChanged("TeamPath")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property StartTime() As Double
            Get
                Return Me.startTimeField
            End Get
            Set
                Me.startTimeField = value
                Me.RaisePropertyChanged("StartTime")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property ErrorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
                Me.RaisePropertyChanged("ErrorMessage")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum UndeletedObjectCode
        
        '''<remarks/>
        Authorization
        
        '''<remarks/>
        Locked
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSRequestDeleteProjects
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private sessionIDField As String
        
        Private projectIDsField() As Long
        
        Private flagsField As DeleteFlags
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property SessionID() As String
            Get
                Return Me.sessionIDField
            End Get
            Set
                Me.sessionIDField = value
                Me.RaisePropertyChanged("SessionID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property ProjectIDs() As Long()
            Get
                Return Me.projectIDsField
            End Get
            Set
                Me.projectIDsField = value
                Me.RaisePropertyChanged("ProjectIDs")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Flags() As DeleteFlags
            Get
                Return Me.flagsField
            End Get
            Set
                Me.flagsField = value
                Me.RaisePropertyChanged("Flags")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResultPathDisplayDetails
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private projectIdField As Long
        
        Private projectNameField As String
        
        Private scanIdField As Long
        
        Private scanDateField As CxDateTime
        
        Private pathIdsField() As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ProjectId() As Long
            Get
                Return Me.projectIdField
            End Get
            Set
                Me.projectIdField = value
                Me.RaisePropertyChanged("ProjectId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
                Me.RaisePropertyChanged("ProjectName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ScanId() As Long
            Get
                Return Me.scanIdField
            End Get
            Set
                Me.scanIdField = value
                Me.RaisePropertyChanged("ScanId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property ScanDate() As CxDateTime
            Get
                Return Me.scanDateField
            End Get
            Set
                Me.scanDateField = value
                Me.RaisePropertyChanged("ScanDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=4)>  _
        Public Property PathIds() As Long()
            Get
                Return Me.pathIdsField
            End Get
            Set
                Me.pathIdsField = value
                Me.RaisePropertyChanged("PathIds")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ResultStateData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private scanIdField As Long
        
        Private pathIdField As Long
        
        Private projectIdField As Long
        
        Private remarksField As String
        
        Private resultLabelTypeField As Integer
        
        Private dataField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property scanId() As Long
            Get
                Return Me.scanIdField
            End Get
            Set
                Me.scanIdField = value
                Me.RaisePropertyChanged("scanId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property PathId() As Long
            Get
                Return Me.pathIdField
            End Get
            Set
                Me.pathIdField = value
                Me.RaisePropertyChanged("PathId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property projectId() As Long
            Get
                Return Me.projectIdField
            End Get
            Set
                Me.projectIdField = value
                Me.RaisePropertyChanged("projectId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Remarks() As String
            Get
                Return Me.remarksField
            End Get
            Set
                Me.remarksField = value
                Me.RaisePropertyChanged("Remarks")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property ResultLabelType() As Integer
            Get
                Return Me.resultLabelTypeField
            End Get
            Set
                Me.resultLabelTypeField = value
                Me.RaisePropertyChanged("ResultLabelType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property data() As String
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("data")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ScanRiskLevel
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private quantityField As Integer
        
        Private severityField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Quantity() As Integer
            Get
                Return Me.quantityField
            End Get
            Set
                Me.quantityField = value
                Me.RaisePropertyChanged("Quantity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Severity() As Integer
            Get
                Return Me.severityField
            End Get
            Set
                Me.severityField = value
                Me.RaisePropertyChanged("Severity")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ProjectScansRiskLevel
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private labelField As String
        
        Private scanRiskParamsField As ScanRiskLevel
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
                Me.RaisePropertyChanged("Label")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ScanRiskParams() As ScanRiskLevel
            Get
                Return Me.scanRiskParamsField
            End Get
            Set
                Me.scanRiskParamsField = value
                Me.RaisePropertyChanged("ScanRiskParams")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ProjectScansResultSummary
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private labelField As String
        
        Private highField As Integer
        
        Private mediumField As Integer
        
        Private lowField As Integer
        
        Private infoField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
                Me.RaisePropertyChanged("Label")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property High() As Integer
            Get
                Return Me.highField
            End Get
            Set
                Me.highField = value
                Me.RaisePropertyChanged("High")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Medium() As Integer
            Get
                Return Me.mediumField
            End Get
            Set
                Me.mediumField = value
                Me.RaisePropertyChanged("Medium")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Low() As Integer
            Get
                Return Me.lowField
            End Get
            Set
                Me.lowField = value
                Me.RaisePropertyChanged("Low")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Info() As Integer
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
                Me.RaisePropertyChanged("Info")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class UserPermission
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private isAllowedToDeleteField As Boolean
        
        Private isAllowedToDuplicateField As Boolean
        
        Private isAllowedToRunField As Boolean
        
        Private isAllowedToUpdateField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property IsAllowedToDelete() As Boolean
            Get
                Return Me.isAllowedToDeleteField
            End Get
            Set
                Me.isAllowedToDeleteField = value
                Me.RaisePropertyChanged("IsAllowedToDelete")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property IsAllowedToDuplicate() As Boolean
            Get
                Return Me.isAllowedToDuplicateField
            End Get
            Set
                Me.isAllowedToDuplicateField = value
                Me.RaisePropertyChanged("IsAllowedToDuplicate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property IsAllowedToRun() As Boolean
            Get
                Return Me.isAllowedToRunField
            End Get
            Set
                Me.isAllowedToRunField = value
                Me.RaisePropertyChanged("IsAllowedToRun")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property IsAllowedToUpdate() As Boolean
            Get
                Return Me.isAllowedToUpdateField
            End Get
            Set
                Me.isAllowedToUpdateField = value
                Me.RaisePropertyChanged("IsAllowedToUpdate")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ProjectDisplayData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private permissionField As UserPermission
        
        Private projectIDField As Long
        
        Private serviceProviderField As String
        
        Private companyField As String
        
        Private ownerField As String
        
        Private projectNameField As String
        
        Private groupField As String
        
        Private presetField As String
        
        Private lastScanDateField As CxDateTime
        
        Private totalScansField As Integer
        
        Private isPublicField As Boolean
        
        Private totalOsaScansField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Permission() As UserPermission
            Get
                Return Me.permissionField
            End Get
            Set
                Me.permissionField = value
                Me.RaisePropertyChanged("Permission")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property projectID() As Long
            Get
                Return Me.projectIDField
            End Get
            Set
                Me.projectIDField = value
                Me.RaisePropertyChanged("projectID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ServiceProvider() As String
            Get
                Return Me.serviceProviderField
            End Get
            Set
                Me.serviceProviderField = value
                Me.RaisePropertyChanged("ServiceProvider")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
                Me.RaisePropertyChanged("Company")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Owner() As String
            Get
                Return Me.ownerField
            End Get
            Set
                Me.ownerField = value
                Me.RaisePropertyChanged("Owner")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
                Me.RaisePropertyChanged("ProjectName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property Group() As String
            Get
                Return Me.groupField
            End Get
            Set
                Me.groupField = value
                Me.RaisePropertyChanged("Group")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property Preset() As String
            Get
                Return Me.presetField
            End Get
            Set
                Me.presetField = value
                Me.RaisePropertyChanged("Preset")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property LastScanDate() As CxDateTime
            Get
                Return Me.lastScanDateField
            End Get
            Set
                Me.lastScanDateField = value
                Me.RaisePropertyChanged("LastScanDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property TotalScans() As Integer
            Get
                Return Me.totalScansField
            End Get
            Set
                Me.totalScansField = value
                Me.RaisePropertyChanged("TotalScans")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property IsPublic() As Boolean
            Get
                Return Me.isPublicField
            End Get
            Set
                Me.isPublicField = value
                Me.RaisePropertyChanged("IsPublic")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property TotalOsaScans() As Integer
            Get
                Return Me.totalOsaScansField
            End Get
            Set
                Me.totalOsaScansField = value
                Me.RaisePropertyChanged("TotalOsaScans")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxProjectData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private projectIDField As Long
        
        Private sourceTypeField As CxProjectSourceType
        
        Private companyField As String
        
        Private ownerField As String
        
        Private projectNameField As String
        
        Private groupField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ProjectID() As Long
            Get
                Return Me.projectIDField
            End Get
            Set
                Me.projectIDField = value
                Me.RaisePropertyChanged("ProjectID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property SourceType() As CxProjectSourceType
            Get
                Return Me.sourceTypeField
            End Get
            Set
                Me.sourceTypeField = value
                Me.RaisePropertyChanged("SourceType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
                Me.RaisePropertyChanged("Company")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Owner() As String
            Get
                Return Me.ownerField
            End Get
            Set
                Me.ownerField = value
                Me.RaisePropertyChanged("Owner")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
                Me.RaisePropertyChanged("ProjectName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Group() As String
            Get
                Return Me.groupField
            End Get
            Set
                Me.groupField = value
                Me.RaisePropertyChanged("Group")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxProjectSourceType
        
        '''<remarks/>
        LocalPath
        
        '''<remarks/>
        UNC
        
        '''<remarks/>
        TFS
        
        '''<remarks/>
        SVN
        
        '''<remarks/>
        SourceSafe
        
        '''<remarks/>
        External
        
        '''<remarks/>
        CVS
        
        '''<remarks/>
        Perforce
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class DataRetentionSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private numOfScansToKeepField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property NumOfScansToKeep() As Integer
            Get
                Return Me.numOfScansToKeepField
            End Get
            Set
                Me.numOfScansToKeepField = value
                Me.RaisePropertyChanged("NumOfScansToKeep")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSProjectCustomField
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private customFieldIdField As Long
        
        Private valueField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property CustomFieldId() As Long
            Get
                Return Me.customFieldIdField
            End Get
            Set
                Me.customFieldIdField = value
                Me.RaisePropertyChanged("CustomFieldId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
                Me.RaisePropertyChanged("Value")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSProjectIssueTrackingSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private trackingSystemIDField As Long
        
        Private paramsField() As CxWSIssueTrackingParam
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property TrackingSystemID() As Long
            Get
                Return Me.trackingSystemIDField
            End Get
            Set
                Me.trackingSystemIDField = value
                Me.RaisePropertyChanged("TrackingSystemID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property Params() As CxWSIssueTrackingParam()
            Get
                Return Me.paramsField
            End Get
            Set
                Me.paramsField = value
                Me.RaisePropertyChanged("Params")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingParam
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private nameField As String
        
        Private valueField As Object
        
        Private typeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Value() As Object
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
                Me.RaisePropertyChanged("Value")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
                Me.RaisePropertyChanged("Type")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ScanAction
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private parametersField() As String
        
        Private triggerField As ScanEventType
        
        Private actionField As ScanActionType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Parameters() As String()
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
                Me.RaisePropertyChanged("Parameters")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Trigger() As ScanEventType
            Get
                Return Me.triggerField
            End Get
            Set
                Me.triggerField = value
                Me.RaisePropertyChanged("Trigger")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Action() As ScanActionType
            Get
                Return Me.actionField
            End Get
            Set
                Me.actionField = value
                Me.RaisePropertyChanged("Action")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum ScanEventType
        
        '''<remarks/>
        BeforeScanStarts
        
        '''<remarks/>
        AfterScanSucceeds
        
        '''<remarks/>
        OnScanFailure
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum ScanActionType
        
        '''<remarks/>
        EmailNotification
        
        '''<remarks/>
        PostScanAction
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ScanActionSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private scanActionListField() As ScanAction
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property ScanActionList() As ScanAction()
            Get
                Return Me.scanActionListField
            End Get
            Set
                Me.scanActionListField = value
                Me.RaisePropertyChanged("ScanActionList")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ScheduleSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private scheduleField As ScheduleType
        
        Private scheduledDaysField() As DayOfWeek
        
        Private timeField As CxDateTime
        
        Private startSchedulingPeriodField As CxDateTime
        
        Private endSchedulingPeriodField As CxDateTime
        
        Private schedulingFrequencyField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Schedule() As ScheduleType
            Get
                Return Me.scheduleField
            End Get
            Set
                Me.scheduleField = value
                Me.RaisePropertyChanged("Schedule")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property ScheduledDays() As DayOfWeek()
            Get
                Return Me.scheduledDaysField
            End Get
            Set
                Me.scheduledDaysField = value
                Me.RaisePropertyChanged("ScheduledDays")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Time() As CxDateTime
            Get
                Return Me.timeField
            End Get
            Set
                Me.timeField = value
                Me.RaisePropertyChanged("Time")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property StartSchedulingPeriod() As CxDateTime
            Get
                Return Me.startSchedulingPeriodField
            End Get
            Set
                Me.startSchedulingPeriodField = value
                Me.RaisePropertyChanged("StartSchedulingPeriod")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property EndSchedulingPeriod() As CxDateTime
            Get
                Return Me.endSchedulingPeriodField
            End Get
            Set
                Me.endSchedulingPeriodField = value
                Me.RaisePropertyChanged("EndSchedulingPeriod")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property SchedulingFrequency() As Integer
            Get
                Return Me.schedulingFrequencyField
            End Get
            Set
                Me.schedulingFrequencyField = value
                Me.RaisePropertyChanged("SchedulingFrequency")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum ScheduleType
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Now
        
        '''<remarks/>
        Weekly
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum DayOfWeek
        
        '''<remarks/>
        Sunday
        
        '''<remarks/>
        Monday
        
        '''<remarks/>
        Tuesday
        
        '''<remarks/>
        Wednesday
        
        '''<remarks/>
        Thursday
        
        '''<remarks/>
        Friday
        
        '''<remarks/>
        Saturday
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ProjectConfiguration
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private projectSettingsField As ProjectSettings
        
        Private sourceCodeSettingsField As SourceCodeSettings
        
        Private scheduleSettingsField As ScheduleSettings
        
        Private scanActionSettingsField As ScanActionSettings
        
        Private projectIssueTrackingSettingsField As CxWSProjectIssueTrackingSettings
        
        Private customFieldsField() As CxWSProjectCustomField
        
        Private dataRetentionSettingsField As DataRetentionSettings
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ProjectSettings() As ProjectSettings
            Get
                Return Me.projectSettingsField
            End Get
            Set
                Me.projectSettingsField = value
                Me.RaisePropertyChanged("ProjectSettings")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property SourceCodeSettings() As SourceCodeSettings
            Get
                Return Me.sourceCodeSettingsField
            End Get
            Set
                Me.sourceCodeSettingsField = value
                Me.RaisePropertyChanged("SourceCodeSettings")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ScheduleSettings() As ScheduleSettings
            Get
                Return Me.scheduleSettingsField
            End Get
            Set
                Me.scheduleSettingsField = value
                Me.RaisePropertyChanged("ScheduleSettings")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property ScanActionSettings() As ScanActionSettings
            Get
                Return Me.scanActionSettingsField
            End Get
            Set
                Me.scanActionSettingsField = value
                Me.RaisePropertyChanged("ScanActionSettings")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property ProjectIssueTrackingSettings() As CxWSProjectIssueTrackingSettings
            Get
                Return Me.projectIssueTrackingSettingsField
            End Get
            Set
                Me.projectIssueTrackingSettingsField = value
                Me.RaisePropertyChanged("ProjectIssueTrackingSettings")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=5)>  _
        Public Property CustomFields() As CxWSProjectCustomField()
            Get
                Return Me.customFieldsField
            End Get
            Set
                Me.customFieldsField = value
                Me.RaisePropertyChanged("CustomFields")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property DataRetentionSettings() As DataRetentionSettings
            Get
                Return Me.dataRetentionSettingsField
            End Get
            Set
                Me.dataRetentionSettingsField = value
                Me.RaisePropertyChanged("DataRetentionSettings")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ProjectSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private projectIDField As Long
        
        Private projectNameField As String
        
        Private presetIDField As Long
        
        Private taskIdField As Long
        
        Private associatedGroupIDField As String
        
        Private scanConfigurationIDField As Long
        
        Private descriptionField As String
        
        Private ownerField As String
        
        Private isPublicField As Boolean
        
        Private openSourceSettingsField As ProjectSharedLocation
        
        Private openSourceAnalysisOriginField As ProjectOrigin
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property projectID() As Long
            Get
                Return Me.projectIDField
            End Get
            Set
                Me.projectIDField = value
                Me.RaisePropertyChanged("projectID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
                Me.RaisePropertyChanged("ProjectName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property PresetID() As Long
            Get
                Return Me.presetIDField
            End Get
            Set
                Me.presetIDField = value
                Me.RaisePropertyChanged("PresetID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property TaskId() As Long
            Get
                Return Me.taskIdField
            End Get
            Set
                Me.taskIdField = value
                Me.RaisePropertyChanged("TaskId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property AssociatedGroupID() As String
            Get
                Return Me.associatedGroupIDField
            End Get
            Set
                Me.associatedGroupIDField = value
                Me.RaisePropertyChanged("AssociatedGroupID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property ScanConfigurationID() As Long
            Get
                Return Me.scanConfigurationIDField
            End Get
            Set
                Me.scanConfigurationIDField = value
                Me.RaisePropertyChanged("ScanConfigurationID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
                Me.RaisePropertyChanged("Description")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property Owner() As String
            Get
                Return Me.ownerField
            End Get
            Set
                Me.ownerField = value
                Me.RaisePropertyChanged("Owner")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property IsPublic() As Boolean
            Get
                Return Me.isPublicField
            End Get
            Set
                Me.isPublicField = value
                Me.RaisePropertyChanged("IsPublic")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property OpenSourceSettings() As ProjectSharedLocation
            Get
                Return Me.openSourceSettingsField
            End Get
            Set
                Me.openSourceSettingsField = value
                Me.RaisePropertyChanged("OpenSourceSettings")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property OpenSourceAnalysisOrigin() As ProjectOrigin
            Get
                Return Me.openSourceAnalysisOriginField
            End Get
            Set
                Me.openSourceAnalysisOriginField = value
                Me.RaisePropertyChanged("OpenSourceAnalysisOrigin")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ProjectSharedLocation
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pathField() As String
        
        Private credentialsField As Credentials
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Path() As String()
            Get
                Return Me.pathField
            End Get
            Set
                Me.pathField = value
                Me.RaisePropertyChanged("Path")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Credentials() As Credentials
            Get
                Return Me.credentialsField
            End Get
            Set
                Me.credentialsField = value
                Me.RaisePropertyChanged("Credentials")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class Credentials
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private userField As String
        
        Private passField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property User() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
                Me.RaisePropertyChanged("User")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Pass() As String
            Get
                Return Me.passField
            End Get
            Set
                Me.passField = value
                Me.RaisePropertyChanged("Pass")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum ProjectOrigin
        
        '''<remarks/>
        LocalPath
        
        '''<remarks/>
        SharedPath
        
        '''<remarks/>
        TFS
        
        '''<remarks/>
        External
        
        '''<remarks/>
        SVN
        
        '''<remarks/>
        CVS
        
        '''<remarks/>
        GIT
        
        '''<remarks/>
        Perforce
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class SourceCodeSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private sourceOriginField As SourceLocationType
        
        Private userCredentialsField As Credentials
        
        Private pathListField() As ScanPath
        
        Private sourceControlSettingField As SourceControlSettings
        
        Private packagedCodeField As LocalCodeContainer
        
        Private sourcePullingActionField As String
        
        Private sourceControlCommandIdField As Long
        
        Private sourceFilterListsField As SourceFilterPatterns
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property SourceOrigin() As SourceLocationType
            Get
                Return Me.sourceOriginField
            End Get
            Set
                Me.sourceOriginField = value
                Me.RaisePropertyChanged("SourceOrigin")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property UserCredentials() As Credentials
            Get
                Return Me.userCredentialsField
            End Get
            Set
                Me.userCredentialsField = value
                Me.RaisePropertyChanged("UserCredentials")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=2)>  _
        Public Property PathList() As ScanPath()
            Get
                Return Me.pathListField
            End Get
            Set
                Me.pathListField = value
                Me.RaisePropertyChanged("PathList")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property SourceControlSetting() As SourceControlSettings
            Get
                Return Me.sourceControlSettingField
            End Get
            Set
                Me.sourceControlSettingField = value
                Me.RaisePropertyChanged("SourceControlSetting")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property PackagedCode() As LocalCodeContainer
            Get
                Return Me.packagedCodeField
            End Get
            Set
                Me.packagedCodeField = value
                Me.RaisePropertyChanged("PackagedCode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property SourcePullingAction() As String
            Get
                Return Me.sourcePullingActionField
            End Get
            Set
                Me.sourcePullingActionField = value
                Me.RaisePropertyChanged("SourcePullingAction")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property SourceControlCommandId() As Long
            Get
                Return Me.sourceControlCommandIdField
            End Get
            Set
                Me.sourceControlCommandIdField = value
                Me.RaisePropertyChanged("SourceControlCommandId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property SourceFilterLists() As SourceFilterPatterns
            Get
                Return Me.sourceFilterListsField
            End Get
            Set
                Me.sourceFilterListsField = value
                Me.RaisePropertyChanged("SourceFilterLists")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum SourceLocationType
        
        '''<remarks/>
        Local
        
        '''<remarks/>
        [Shared]
        
        '''<remarks/>
        SourceControl
        
        '''<remarks/>
        SourcePulling
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ScanPath
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private pathField As String
        
        Private includeSubTreeField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Path() As String
            Get
                Return Me.pathField
            End Get
            Set
                Me.pathField = value
                Me.RaisePropertyChanged("Path")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property IncludeSubTree() As Boolean
            Get
                Return Me.includeSubTreeField
            End Get
            Set
                Me.includeSubTreeField = value
                Me.RaisePropertyChanged("IncludeSubTree")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class SourceControlSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private portField As Integer
        
        Private useSSLField As Boolean
        
        Private useSSHField As Boolean
        
        Private serverNameField As String
        
        Private repositoryField As RepositoryType
        
        Private userCredentialsField As Credentials
        
        Private protocolField As SourceControlProtocolType
        
        Private repositoryNameField As String
        
        Private protocolParametersField As String
        
        Private gITBranchField As String
        
        Private gitLsViewTypeField As GitLsRemoteViewType
        
        Private sSHPublicKeyField As String
        
        Private sSHPrivateKeyField As String
        
        Private gitHubSettingsField As GitHubIntegrationSettings
        
        Private perforceBrowsingModeField As CxWSPerforceBrowsingMode
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Port() As Integer
            Get
                Return Me.portField
            End Get
            Set
                Me.portField = value
                Me.RaisePropertyChanged("Port")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property UseSSL() As Boolean
            Get
                Return Me.useSSLField
            End Get
            Set
                Me.useSSLField = value
                Me.RaisePropertyChanged("UseSSL")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property UseSSH() As Boolean
            Get
                Return Me.useSSHField
            End Get
            Set
                Me.useSSHField = value
                Me.RaisePropertyChanged("UseSSH")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property ServerName() As String
            Get
                Return Me.serverNameField
            End Get
            Set
                Me.serverNameField = value
                Me.RaisePropertyChanged("ServerName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Repository() As RepositoryType
            Get
                Return Me.repositoryField
            End Get
            Set
                Me.repositoryField = value
                Me.RaisePropertyChanged("Repository")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property UserCredentials() As Credentials
            Get
                Return Me.userCredentialsField
            End Get
            Set
                Me.userCredentialsField = value
                Me.RaisePropertyChanged("UserCredentials")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property Protocol() As SourceControlProtocolType
            Get
                Return Me.protocolField
            End Get
            Set
                Me.protocolField = value
                Me.RaisePropertyChanged("Protocol")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property RepositoryName() As String
            Get
                Return Me.repositoryNameField
            End Get
            Set
                Me.repositoryNameField = value
                Me.RaisePropertyChanged("RepositoryName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property ProtocolParameters() As String
            Get
                Return Me.protocolParametersField
            End Get
            Set
                Me.protocolParametersField = value
                Me.RaisePropertyChanged("ProtocolParameters")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property GITBranch() As String
            Get
                Return Me.gITBranchField
            End Get
            Set
                Me.gITBranchField = value
                Me.RaisePropertyChanged("GITBranch")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property GitLsViewType() As GitLsRemoteViewType
            Get
                Return Me.gitLsViewTypeField
            End Get
            Set
                Me.gitLsViewTypeField = value
                Me.RaisePropertyChanged("GitLsViewType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property SSHPublicKey() As String
            Get
                Return Me.sSHPublicKeyField
            End Get
            Set
                Me.sSHPublicKeyField = value
                Me.RaisePropertyChanged("SSHPublicKey")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property SSHPrivateKey() As String
            Get
                Return Me.sSHPrivateKeyField
            End Get
            Set
                Me.sSHPrivateKeyField = value
                Me.RaisePropertyChanged("SSHPrivateKey")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property GitHubSettings() As GitHubIntegrationSettings
            Get
                Return Me.gitHubSettingsField
            End Get
            Set
                Me.gitHubSettingsField = value
                Me.RaisePropertyChanged("GitHubSettings")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property PerforceBrowsingMode() As CxWSPerforceBrowsingMode
            Get
                Return Me.perforceBrowsingModeField
            End Get
            Set
                Me.perforceBrowsingModeField = value
                Me.RaisePropertyChanged("PerforceBrowsingMode")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum RepositoryType
        
        '''<remarks/>
        TFS
        
        '''<remarks/>
        SVN
        
        '''<remarks/>
        CVS
        
        '''<remarks/>
        GIT
        
        '''<remarks/>
        Perforce
        
        '''<remarks/>
        NONE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum SourceControlProtocolType
        
        '''<remarks/>
        WindowsAuthentication
        
        '''<remarks/>
        SSL
        
        '''<remarks/>
        SSH
        
        '''<remarks/>
        PasswordServer
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum GitLsRemoteViewType
        
        '''<remarks/>
        TAGS
        
        '''<remarks/>
        HEADS
        
        '''<remarks/>
        TAGS_AND_HEADS
        
        '''<remarks/>
        ALL
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class GitHubIntegrationSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private contributorCredentialsField As Credentials
        
        Private ownerCredentialsField As Credentials
        
        Private eventsThresholdField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ContributorCredentials() As Credentials
            Get
                Return Me.contributorCredentialsField
            End Get
            Set
                Me.contributorCredentialsField = value
                Me.RaisePropertyChanged("ContributorCredentials")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property OwnerCredentials() As Credentials
            Get
                Return Me.ownerCredentialsField
            End Get
            Set
                Me.ownerCredentialsField = value
                Me.RaisePropertyChanged("OwnerCredentials")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property EventsThreshold() As Integer
            Get
                Return Me.eventsThresholdField
            End Get
            Set
                Me.eventsThresholdField = value
                Me.RaisePropertyChanged("EventsThreshold")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSPerforceBrowsingMode
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Depot
        
        '''<remarks/>
        Workspace
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class LocalCodeContainer
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private zippedFileField() As Byte
        
        Private fileNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", Order:=0)>  _
        Public Property ZippedFile() As Byte()
            Get
                Return Me.zippedFileField
            End Get
            Set
                Me.zippedFileField = value
                Me.RaisePropertyChanged("ZippedFile")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property FileName() As String
            Get
                Return Me.fileNameField
            End Get
            Set
                Me.fileNameField = value
                Me.RaisePropertyChanged("FileName")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class SourceFilterPatterns
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private excludeFilesPatternsField As String
        
        Private excludeFoldersPatternsField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ExcludeFilesPatterns() As String
            Get
                Return Me.excludeFilesPatternsField
            End Get
            Set
                Me.excludeFilesPatternsField = value
                Me.RaisePropertyChanged("ExcludeFilesPatterns")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ExcludeFoldersPatterns() As String
            Get
                Return Me.excludeFoldersPatternsField
            End Get
            Set
                Me.excludeFoldersPatternsField = value
                Me.RaisePropertyChanged("ExcludeFoldersPatterns")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class Action
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private actionNameField As String
        
        Private idField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ActionName() As String
            Get
                Return Me.actionNameField
            End Get
            Set
                Me.actionNameField = value
                Me.RaisePropertyChanged("ActionName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ConfigurationSet
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private configSetNameField As String
        
        Private idField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ConfigSetName() As String
            Get
                Return Me.configSetNameField
            End Get
            Set
                Me.configSetNameField = value
                Me.RaisePropertyChanged("ConfigSetName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResultSummary
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private queryIdField As Long
        
        Private queryNameField As String
        
        Private queryGroupNameField As String
        
        Private countField As Long
        
        Private severityField As Integer
        
        Private cweField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property QueryId() As Long
            Get
                Return Me.queryIdField
            End Get
            Set
                Me.queryIdField = value
                Me.RaisePropertyChanged("QueryId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property QueryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
                Me.RaisePropertyChanged("QueryName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property QueryGroupName() As String
            Get
                Return Me.queryGroupNameField
            End Get
            Set
                Me.queryGroupNameField = value
                Me.RaisePropertyChanged("QueryGroupName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Count() As Long
            Get
                Return Me.countField
            End Get
            Set
                Me.countField = value
                Me.RaisePropertyChanged("Count")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Severity() As Integer
            Get
                Return Me.severityField
            End Get
            Set
                Me.severityField = value
                Me.RaisePropertyChanged("Severity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Cwe() As Long
            Get
                Return Me.cweField
            End Get
            Set
                Me.cweField = value
                Me.RaisePropertyChanged("Cwe")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class AuditScanResult
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private queryIdField As Long
        
        Private queryNameField As String
        
        Private querySourceField As String
        
        Private severityField As Integer
        
        Private queryGroupNameField As String
        
        Private cWEField As Long
        
        Private queryVersionCodeField As Long
        
        Private debugMessagesField() As String
        
        Private compilationMessagesField() As String
        
        Private pathPerResultField() As CxWSResultPath
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property QueryId() As Long
            Get
                Return Me.queryIdField
            End Get
            Set
                Me.queryIdField = value
                Me.RaisePropertyChanged("QueryId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property QueryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
                Me.RaisePropertyChanged("QueryName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property QuerySource() As String
            Get
                Return Me.querySourceField
            End Get
            Set
                Me.querySourceField = value
                Me.RaisePropertyChanged("QuerySource")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Severity() As Integer
            Get
                Return Me.severityField
            End Get
            Set
                Me.severityField = value
                Me.RaisePropertyChanged("Severity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property QueryGroupName() As String
            Get
                Return Me.queryGroupNameField
            End Get
            Set
                Me.queryGroupNameField = value
                Me.RaisePropertyChanged("QueryGroupName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property CWE() As Long
            Get
                Return Me.cWEField
            End Get
            Set
                Me.cWEField = value
                Me.RaisePropertyChanged("CWE")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property QueryVersionCode() As Long
            Get
                Return Me.queryVersionCodeField
            End Get
            Set
                Me.queryVersionCodeField = value
                Me.RaisePropertyChanged("QueryVersionCode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=7)>  _
        Public Property DebugMessages() As String()
            Get
                Return Me.debugMessagesField
            End Get
            Set
                Me.debugMessagesField = value
                Me.RaisePropertyChanged("DebugMessages")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=8)>  _
        Public Property CompilationMessages() As String()
            Get
                Return Me.compilationMessagesField
            End Get
            Set
                Me.compilationMessagesField = value
                Me.RaisePropertyChanged("CompilationMessages")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=9)>  _
        Public Property PathPerResult() As CxWSResultPath()
            Get
                Return Me.pathPerResultField
            End Get
            Set
                Me.pathPerResultField = value
                Me.RaisePropertyChanged("PathPerResult")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResultPath
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private similarityIdField As Long
        
        Private pathIdField As Long
        
        Private commentField As String
        
        Private stateField As Integer
        
        Private severityField As Integer
        
        Private assignedUserField As String
        
        Private nodesField() As CxWSPathNode
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property SimilarityId() As Long
            Get
                Return Me.similarityIdField
            End Get
            Set
                Me.similarityIdField = value
                Me.RaisePropertyChanged("SimilarityId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property PathId() As Long
            Get
                Return Me.pathIdField
            End Get
            Set
                Me.pathIdField = value
                Me.RaisePropertyChanged("PathId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
                Me.RaisePropertyChanged("Comment")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property State() As Integer
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
                Me.RaisePropertyChanged("State")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Severity() As Integer
            Get
                Return Me.severityField
            End Get
            Set
                Me.severityField = value
                Me.RaisePropertyChanged("Severity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property AssignedUser() As String
            Get
                Return Me.assignedUserField
            End Get
            Set
                Me.assignedUserField = value
                Me.RaisePropertyChanged("AssignedUser")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=6)>  _
        Public Property Nodes() As CxWSPathNode()
            Get
                Return Me.nodesField
            End Get
            Set
                Me.nodesField = value
                Me.RaisePropertyChanged("Nodes")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSPathNode
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private columnField As Integer
        
        Private fullNameField As String
        
        Private fileNameField As String
        
        Private lengthField As Integer
        
        Private lineField As Integer
        
        Private nameField As String
        
        Private dOM_IdField As Integer
        
        Private methodLineField As Integer
        
        Private pathNodeIdField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Column() As Integer
            Get
                Return Me.columnField
            End Get
            Set
                Me.columnField = value
                Me.RaisePropertyChanged("Column")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property FullName() As String
            Get
                Return Me.fullNameField
            End Get
            Set
                Me.fullNameField = value
                Me.RaisePropertyChanged("FullName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property FileName() As String
            Get
                Return Me.fileNameField
            End Get
            Set
                Me.fileNameField = value
                Me.RaisePropertyChanged("FileName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Length() As Integer
            Get
                Return Me.lengthField
            End Get
            Set
                Me.lengthField = value
                Me.RaisePropertyChanged("Length")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Line() As Integer
            Get
                Return Me.lineField
            End Get
            Set
                Me.lineField = value
                Me.RaisePropertyChanged("Line")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property DOM_Id() As Integer
            Get
                Return Me.dOM_IdField
            End Get
            Set
                Me.dOM_IdField = value
                Me.RaisePropertyChanged("DOM_Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property MethodLine() As Integer
            Get
                Return Me.methodLineField
            End Get
            Set
                Me.methodLineField = value
                Me.RaisePropertyChanged("MethodLine")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property PathNodeId() As Integer
            Get
                Return Me.pathNodeIdField
            End Get
            Set
                Me.pathNodeIdField = value
                Me.RaisePropertyChanged("PathNodeId")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class AuditResultsCollection
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private resultsField() As AuditScanResult
        
        Private failedLOCField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Results() As AuditScanResult()
            Get
                Return Me.resultsField
            End Get
            Set
                Me.resultsField = value
                Me.RaisePropertyChanged("Results")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property FailedLOC() As Long
            Get
                Return Me.failedLOCField
            End Get
            Set
                Me.failedLOCField = value
                Me.RaisePropertyChanged("FailedLOC")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ProjectBasicSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private projectNameField As String
        
        Private associatedGroupIDField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
                Me.RaisePropertyChanged("ProjectName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property AssociatedGroupID() As String
            Get
                Return Me.associatedGroupIDField
            End Get
            Set
                Me.associatedGroupIDField = value
                Me.RaisePropertyChanged("AssociatedGroupID")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseBasicProjectData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private nameField As String
        
        Private idField As Long
        
        Private scansField() As CxWSResponseBasicScanData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=2)>  _
        Public Property scans() As CxWSResponseBasicScanData()
            Get
                Return Me.scansField
            End Get
            Set
                Me.scansField = value
                Me.RaisePropertyChanged("scans")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseBasicScanData
        Inherits CxWSBasicRepsonse
        
        Private nameField As String
        
        Private idField As Long
        
        Private sourceIdField As String
        
        Private commentField As String
        
        Private resultIdField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property SourceId() As String
            Get
                Return Me.sourceIdField
            End Get
            Set
                Me.sourceIdField = value
                Me.RaisePropertyChanged("SourceId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
                Me.RaisePropertyChanged("Comment")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property ResultId() As Long
            Get
                Return Me.resultIdField
            End Get
            Set
                Me.resultIdField = value
                Me.RaisePropertyChanged("ResultId")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSDataRetentionRequest
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Integer
        
        Private requestDateField As Date
        
        Private requestEndDateField As System.Nullable(Of Date)
        
        Private initiatorNameField As String
        
        Private requestTimeLimitationField As System.Nullable(Of Date)
        
        Private stageField As CxDataRetentionStatus
        
        Private currentProgressField As System.Nullable(Of Integer)
        
        Private totalProgressField As System.Nullable(Of Integer)
        
        Private stageErrorField As String
        
        Private isDoneField As Boolean
        
        Private originalConfigurationField As CxDataRetentionConfiguration
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property RequestDate() As Date
            Get
                Return Me.requestDateField
            End Get
            Set
                Me.requestDateField = value
                Me.RaisePropertyChanged("RequestDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=2)>  _
        Public Property RequestEndDate() As System.Nullable(Of Date)
            Get
                Return Me.requestEndDateField
            End Get
            Set
                Me.requestEndDateField = value
                Me.RaisePropertyChanged("RequestEndDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property InitiatorName() As String
            Get
                Return Me.initiatorNameField
            End Get
            Set
                Me.initiatorNameField = value
                Me.RaisePropertyChanged("InitiatorName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=4)>  _
        Public Property RequestTimeLimitation() As System.Nullable(Of Date)
            Get
                Return Me.requestTimeLimitationField
            End Get
            Set
                Me.requestTimeLimitationField = value
                Me.RaisePropertyChanged("RequestTimeLimitation")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Stage() As CxDataRetentionStatus
            Get
                Return Me.stageField
            End Get
            Set
                Me.stageField = value
                Me.RaisePropertyChanged("Stage")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=6)>  _
        Public Property CurrentProgress() As System.Nullable(Of Integer)
            Get
                Return Me.currentProgressField
            End Get
            Set
                Me.currentProgressField = value
                Me.RaisePropertyChanged("CurrentProgress")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=7)>  _
        Public Property TotalProgress() As System.Nullable(Of Integer)
            Get
                Return Me.totalProgressField
            End Get
            Set
                Me.totalProgressField = value
                Me.RaisePropertyChanged("TotalProgress")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property StageError() As String
            Get
                Return Me.stageErrorField
            End Get
            Set
                Me.stageErrorField = value
                Me.RaisePropertyChanged("StageError")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property IsDone() As Boolean
            Get
                Return Me.isDoneField
            End Get
            Set
                Me.isDoneField = value
                Me.RaisePropertyChanged("IsDone")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property OriginalConfiguration() As CxDataRetentionConfiguration
            Get
                Return Me.originalConfigurationField
            End Get
            Set
                Me.originalConfigurationField = value
                Me.RaisePropertyChanged("OriginalConfiguration")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxDataRetentionStatus
        
        '''<remarks/>
        None
        
        '''<remarks/>
        [New]
        
        '''<remarks/>
        Cleanup
        
        '''<remarks/>
        Deletion
        
        '''<remarks/>
        Stopping
        
        '''<remarks/>
        Stopped
        
        '''<remarks/>
        Failed
        
        '''<remarks/>
        Finished
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxDataRetentionConfiguration
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private dataRetentionTypeField As CxDataRetentionType
        
        Private numOfScansToPreserveField As Integer
        
        Private startDateField As Long
        
        Private endDateField As Long
        
        Private durationLimitInHoursField As System.Nullable(Of Long)
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property DataRetentionType() As CxDataRetentionType
            Get
                Return Me.dataRetentionTypeField
            End Get
            Set
                Me.dataRetentionTypeField = value
                Me.RaisePropertyChanged("DataRetentionType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property NumOfScansToPreserve() As Integer
            Get
                Return Me.numOfScansToPreserveField
            End Get
            Set
                Me.numOfScansToPreserveField = value
                Me.RaisePropertyChanged("NumOfScansToPreserve")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property StartDate() As Long
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
                Me.RaisePropertyChanged("StartDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property EndDate() As Long
            Get
                Return Me.endDateField
            End Get
            Set
                Me.endDateField = value
                Me.RaisePropertyChanged("EndDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=4)>  _
        Public Property DurationLimitInHours() As System.Nullable(Of Long)
            Get
                Return Me.durationLimitInHoursField
            End Get
            Set
                Me.durationLimitInHoursField = value
                Me.RaisePropertyChanged("DurationLimitInHours")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxDataRetentionType
        
        '''<remarks/>
        NumOfScansToPreserve
        
        '''<remarks/>
        DatesRange
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIdNamePair
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Integer
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSLdapDomainMappingSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private isMappedToDomainField As Boolean
        
        Private domainNetbiosNameField As String
        
        Private domainFQnameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property IsMappedToDomain() As Boolean
            Get
                Return Me.isMappedToDomainField
            End Get
            Set
                Me.isMappedToDomainField = value
                Me.RaisePropertyChanged("IsMappedToDomain")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property DomainNetbiosName() As String
            Get
                Return Me.domainNetbiosNameField
            End Get
            Set
                Me.domainNetbiosNameField = value
                Me.RaisePropertyChanged("DomainNetbiosName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property DomainFQname() As String
            Get
                Return Me.domainFQnameField
            End Get
            Set
                Me.domainFQnameField = value
                Me.RaisePropertyChanged("DomainFQname")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSLdapAdvancedRoleMapping
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private scannerWithoutRoleAttributesGroupDnListField As String
        
        Private scannerWithNotExploitableGroupDnListField As String
        
        Private scannerWithDeleteGroupDnListField As String
        
        Private scannerWithNotExploitableAndDeleteGroupDnListField As String
        
        Private reviewerWithoutRoleAttributesGroupDnListField As String
        
        Private reviewerWithSeverityStatusChangeGroupDnListField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ScannerWithoutRoleAttributesGroupDnList() As String
            Get
                Return Me.scannerWithoutRoleAttributesGroupDnListField
            End Get
            Set
                Me.scannerWithoutRoleAttributesGroupDnListField = value
                Me.RaisePropertyChanged("ScannerWithoutRoleAttributesGroupDnList")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ScannerWithNotExploitableGroupDnList() As String
            Get
                Return Me.scannerWithNotExploitableGroupDnListField
            End Get
            Set
                Me.scannerWithNotExploitableGroupDnListField = value
                Me.RaisePropertyChanged("ScannerWithNotExploitableGroupDnList")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ScannerWithDeleteGroupDnList() As String
            Get
                Return Me.scannerWithDeleteGroupDnListField
            End Get
            Set
                Me.scannerWithDeleteGroupDnListField = value
                Me.RaisePropertyChanged("ScannerWithDeleteGroupDnList")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property ScannerWithNotExploitableAndDeleteGroupDnList() As String
            Get
                Return Me.scannerWithNotExploitableAndDeleteGroupDnListField
            End Get
            Set
                Me.scannerWithNotExploitableAndDeleteGroupDnListField = value
                Me.RaisePropertyChanged("ScannerWithNotExploitableAndDeleteGroupDnList")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property ReviewerWithoutRoleAttributesGroupDnList() As String
            Get
                Return Me.reviewerWithoutRoleAttributesGroupDnListField
            End Get
            Set
                Me.reviewerWithoutRoleAttributesGroupDnListField = value
                Me.RaisePropertyChanged("ReviewerWithoutRoleAttributesGroupDnList")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property ReviewerWithSeverityStatusChangeGroupDnList() As String
            Get
                Return Me.reviewerWithSeverityStatusChangeGroupDnListField
            End Get
            Set
                Me.reviewerWithSeverityStatusChangeGroupDnListField = value
                Me.RaisePropertyChanged("ReviewerWithSeverityStatusChangeGroupDnList")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSLdapRoleMapping
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private defaultRoleIdField As System.Nullable(Of Long)
        
        Private advancedRoleMappingEnabledField As Boolean
        
        Private defaultRoleApplyNotExploitableField As Boolean
        
        Private defaultRoleDeleteProjectsAndScansField As Boolean
        
        Private defaultRoleAllowStatusSeverityChangesField As Boolean
        
        Private wsLdapAdvancedRoleMappingField As CxWSLdapAdvancedRoleMapping
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=0)>  _
        Public Property DefaultRoleId() As System.Nullable(Of Long)
            Get
                Return Me.defaultRoleIdField
            End Get
            Set
                Me.defaultRoleIdField = value
                Me.RaisePropertyChanged("DefaultRoleId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property AdvancedRoleMappingEnabled() As Boolean
            Get
                Return Me.advancedRoleMappingEnabledField
            End Get
            Set
                Me.advancedRoleMappingEnabledField = value
                Me.RaisePropertyChanged("AdvancedRoleMappingEnabled")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property DefaultRoleApplyNotExploitable() As Boolean
            Get
                Return Me.defaultRoleApplyNotExploitableField
            End Get
            Set
                Me.defaultRoleApplyNotExploitableField = value
                Me.RaisePropertyChanged("DefaultRoleApplyNotExploitable")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property DefaultRoleDeleteProjectsAndScans() As Boolean
            Get
                Return Me.defaultRoleDeleteProjectsAndScansField
            End Get
            Set
                Me.defaultRoleDeleteProjectsAndScansField = value
                Me.RaisePropertyChanged("DefaultRoleDeleteProjectsAndScans")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property DefaultRoleAllowStatusSeverityChanges() As Boolean
            Get
                Return Me.defaultRoleAllowStatusSeverityChangesField
            End Get
            Set
                Me.defaultRoleAllowStatusSeverityChangesField = value
                Me.RaisePropertyChanged("DefaultRoleAllowStatusSeverityChanges")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property WsLdapAdvancedRoleMapping() As CxWSLdapAdvancedRoleMapping
            Get
                Return Me.wsLdapAdvancedRoleMappingField
            End Get
            Set
                Me.wsLdapAdvancedRoleMappingField = value
                Me.RaisePropertyChanged("WsLdapAdvancedRoleMapping")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSLdapServerSyncSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private enabledField As Boolean
        
        Private additionalGroupDNField As String
        
        Private groupObjectClassField As String
        
        Private groupObjectFilterField As String
        
        Private groupIdAttributeField As String
        
        Private groupNameAttributeField As String
        
        Private groupMembersAttributeField As String
        
        Private userMemberShipAttributeField As String
        
        Private ldapRoleMappingField As CxWSLdapRoleMapping
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Enabled() As Boolean
            Get
                Return Me.enabledField
            End Get
            Set
                Me.enabledField = value
                Me.RaisePropertyChanged("Enabled")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property AdditionalGroupDN() As String
            Get
                Return Me.additionalGroupDNField
            End Get
            Set
                Me.additionalGroupDNField = value
                Me.RaisePropertyChanged("AdditionalGroupDN")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property GroupObjectClass() As String
            Get
                Return Me.groupObjectClassField
            End Get
            Set
                Me.groupObjectClassField = value
                Me.RaisePropertyChanged("GroupObjectClass")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property GroupObjectFilter() As String
            Get
                Return Me.groupObjectFilterField
            End Get
            Set
                Me.groupObjectFilterField = value
                Me.RaisePropertyChanged("GroupObjectFilter")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property GroupIdAttribute() As String
            Get
                Return Me.groupIdAttributeField
            End Get
            Set
                Me.groupIdAttributeField = value
                Me.RaisePropertyChanged("GroupIdAttribute")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property GroupNameAttribute() As String
            Get
                Return Me.groupNameAttributeField
            End Get
            Set
                Me.groupNameAttributeField = value
                Me.RaisePropertyChanged("GroupNameAttribute")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property GroupMembersAttribute() As String
            Get
                Return Me.groupMembersAttributeField
            End Get
            Set
                Me.groupMembersAttributeField = value
                Me.RaisePropertyChanged("GroupMembersAttribute")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property UserMemberShipAttribute() As String
            Get
                Return Me.userMemberShipAttributeField
            End Get
            Set
                Me.userMemberShipAttributeField = value
                Me.RaisePropertyChanged("UserMemberShipAttribute")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property LdapRoleMapping() As CxWSLdapRoleMapping
            Get
                Return Me.ldapRoleMappingField
            End Get
            Set
                Me.ldapRoleMappingField = value
                Me.RaisePropertyChanged("LdapRoleMapping")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSLdapServerConfiguration
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Integer
        
        Private nameField As String
        
        Private directoryTypeField As CxWSLdapDirectoryType
        
        Private actionField As CxWSLdapServerConfigurationAction
        
        Private hostNameField As String
        
        Private portField As Integer
        
        Private useSSLField As Boolean
        
        Private verifySslCertificateField As Boolean
        
        Private usernameField As String
        
        Private passwordField As String
        
        Private baseDnField As String
        
        Private additionalUserDnField As String
        
        Private userObjectClassField As String
        
        Private userObjectFilterField As String
        
        Private usernameAttributeField As String
        
        Private userRdnAttributeField As String
        
        Private firstNameAttributeField As String
        
        Private lastNameAttributeField As String
        
        Private emailAttributeField As String
        
        Private syncSettingsField As CxWSLdapServerSyncSettings
        
        Private domainMapSettingsField As CxWSLdapDomainMappingSettings
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property DirectoryType() As CxWSLdapDirectoryType
            Get
                Return Me.directoryTypeField
            End Get
            Set
                Me.directoryTypeField = value
                Me.RaisePropertyChanged("DirectoryType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Action() As CxWSLdapServerConfigurationAction
            Get
                Return Me.actionField
            End Get
            Set
                Me.actionField = value
                Me.RaisePropertyChanged("Action")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property HostName() As String
            Get
                Return Me.hostNameField
            End Get
            Set
                Me.hostNameField = value
                Me.RaisePropertyChanged("HostName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Port() As Integer
            Get
                Return Me.portField
            End Get
            Set
                Me.portField = value
                Me.RaisePropertyChanged("Port")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property UseSSL() As Boolean
            Get
                Return Me.useSSLField
            End Get
            Set
                Me.useSSLField = value
                Me.RaisePropertyChanged("UseSSL")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property VerifySslCertificate() As Boolean
            Get
                Return Me.verifySslCertificateField
            End Get
            Set
                Me.verifySslCertificateField = value
                Me.RaisePropertyChanged("VerifySslCertificate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property Username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
                Me.RaisePropertyChanged("Username")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
                Me.RaisePropertyChanged("Password")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property BaseDn() As String
            Get
                Return Me.baseDnField
            End Get
            Set
                Me.baseDnField = value
                Me.RaisePropertyChanged("BaseDn")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property AdditionalUserDn() As String
            Get
                Return Me.additionalUserDnField
            End Get
            Set
                Me.additionalUserDnField = value
                Me.RaisePropertyChanged("AdditionalUserDn")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property UserObjectClass() As String
            Get
                Return Me.userObjectClassField
            End Get
            Set
                Me.userObjectClassField = value
                Me.RaisePropertyChanged("UserObjectClass")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property UserObjectFilter() As String
            Get
                Return Me.userObjectFilterField
            End Get
            Set
                Me.userObjectFilterField = value
                Me.RaisePropertyChanged("UserObjectFilter")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property UsernameAttribute() As String
            Get
                Return Me.usernameAttributeField
            End Get
            Set
                Me.usernameAttributeField = value
                Me.RaisePropertyChanged("UsernameAttribute")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property UserRdnAttribute() As String
            Get
                Return Me.userRdnAttributeField
            End Get
            Set
                Me.userRdnAttributeField = value
                Me.RaisePropertyChanged("UserRdnAttribute")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=16)>  _
        Public Property FirstNameAttribute() As String
            Get
                Return Me.firstNameAttributeField
            End Get
            Set
                Me.firstNameAttributeField = value
                Me.RaisePropertyChanged("FirstNameAttribute")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=17)>  _
        Public Property LastNameAttribute() As String
            Get
                Return Me.lastNameAttributeField
            End Get
            Set
                Me.lastNameAttributeField = value
                Me.RaisePropertyChanged("LastNameAttribute")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=18)>  _
        Public Property EmailAttribute() As String
            Get
                Return Me.emailAttributeField
            End Get
            Set
                Me.emailAttributeField = value
                Me.RaisePropertyChanged("EmailAttribute")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=19)>  _
        Public Property SyncSettings() As CxWSLdapServerSyncSettings
            Get
                Return Me.syncSettingsField
            End Get
            Set
                Me.syncSettingsField = value
                Me.RaisePropertyChanged("SyncSettings")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=20)>  _
        Public Property DomainMapSettings() As CxWSLdapDomainMappingSettings
            Get
                Return Me.domainMapSettingsField
            End Get
            Set
                Me.domainMapSettingsField = value
                Me.RaisePropertyChanged("DomainMapSettings")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSLdapDirectoryType
        
        '''<remarks/>
        None
        
        '''<remarks/>
        ActiveDirectory
        
        '''<remarks/>
        OpenLDAP
        
        '''<remarks/>
        CustomLDAPServer
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSLdapServerConfigurationAction
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Create
        
        '''<remarks/>
        Update
        
        '''<remarks/>
        Delete
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class FailedScansDisplayData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private scanRequestIdField As Long
        
        Private projectIdField As Long
        
        Private projectNameField As String
        
        Private taskIdField As Long
        
        Private taskScanIdField As Long
        
        Private configurationIdField As Long
        
        Private presetIdField As Long
        
        Private isIncrementalField As Boolean
        
        Private runIdField As String
        
        Private createdOnField As Long
        
        Private updatedOnField As Long
        
        Private queuedOnField As Long
        
        Private engineStartedOnField As Long
        
        Private engineFinishedOnField As Long
        
        Private completedOnField As Long
        
        Private sourceLocationPathField As String
        
        Private sourceIdField As String
        
        Private lOCField As Integer
        
        Private languageField As Integer
        
        Private partialResultsField As Boolean
        
        Private commentsField As String
        
        Private serverIdField As Long
        
        Private initiatorField As String
        
        Private detailsField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ScanRequestId() As Long
            Get
                Return Me.scanRequestIdField
            End Get
            Set
                Me.scanRequestIdField = value
                Me.RaisePropertyChanged("ScanRequestId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ProjectId() As Long
            Get
                Return Me.projectIdField
            End Get
            Set
                Me.projectIdField = value
                Me.RaisePropertyChanged("ProjectId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
                Me.RaisePropertyChanged("ProjectName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property TaskId() As Long
            Get
                Return Me.taskIdField
            End Get
            Set
                Me.taskIdField = value
                Me.RaisePropertyChanged("TaskId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property TaskScanId() As Long
            Get
                Return Me.taskScanIdField
            End Get
            Set
                Me.taskScanIdField = value
                Me.RaisePropertyChanged("TaskScanId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property ConfigurationId() As Long
            Get
                Return Me.configurationIdField
            End Get
            Set
                Me.configurationIdField = value
                Me.RaisePropertyChanged("ConfigurationId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property PresetId() As Long
            Get
                Return Me.presetIdField
            End Get
            Set
                Me.presetIdField = value
                Me.RaisePropertyChanged("PresetId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property IsIncremental() As Boolean
            Get
                Return Me.isIncrementalField
            End Get
            Set
                Me.isIncrementalField = value
                Me.RaisePropertyChanged("IsIncremental")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property RunId() As String
            Get
                Return Me.runIdField
            End Get
            Set
                Me.runIdField = value
                Me.RaisePropertyChanged("RunId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property CreatedOn() As Long
            Get
                Return Me.createdOnField
            End Get
            Set
                Me.createdOnField = value
                Me.RaisePropertyChanged("CreatedOn")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property UpdatedOn() As Long
            Get
                Return Me.updatedOnField
            End Get
            Set
                Me.updatedOnField = value
                Me.RaisePropertyChanged("UpdatedOn")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property QueuedOn() As Long
            Get
                Return Me.queuedOnField
            End Get
            Set
                Me.queuedOnField = value
                Me.RaisePropertyChanged("QueuedOn")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property EngineStartedOn() As Long
            Get
                Return Me.engineStartedOnField
            End Get
            Set
                Me.engineStartedOnField = value
                Me.RaisePropertyChanged("EngineStartedOn")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property EngineFinishedOn() As Long
            Get
                Return Me.engineFinishedOnField
            End Get
            Set
                Me.engineFinishedOnField = value
                Me.RaisePropertyChanged("EngineFinishedOn")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property CompletedOn() As Long
            Get
                Return Me.completedOnField
            End Get
            Set
                Me.completedOnField = value
                Me.RaisePropertyChanged("CompletedOn")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=16)>  _
        Public Property SourceLocationPath() As String
            Get
                Return Me.sourceLocationPathField
            End Get
            Set
                Me.sourceLocationPathField = value
                Me.RaisePropertyChanged("SourceLocationPath")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=17)>  _
        Public Property SourceId() As String
            Get
                Return Me.sourceIdField
            End Get
            Set
                Me.sourceIdField = value
                Me.RaisePropertyChanged("SourceId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=18)>  _
        Public Property LOC() As Integer
            Get
                Return Me.lOCField
            End Get
            Set
                Me.lOCField = value
                Me.RaisePropertyChanged("LOC")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=19)>  _
        Public Property Language() As Integer
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
                Me.RaisePropertyChanged("Language")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=20)>  _
        Public Property PartialResults() As Boolean
            Get
                Return Me.partialResultsField
            End Get
            Set
                Me.partialResultsField = value
                Me.RaisePropertyChanged("PartialResults")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=21)>  _
        Public Property Comments() As String
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
                Me.RaisePropertyChanged("Comments")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=22)>  _
        Public Property ServerId() As Long
            Get
                Return Me.serverIdField
            End Get
            Set
                Me.serverIdField = value
                Me.RaisePropertyChanged("ServerId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=23)>  _
        Public Property Initiator() As String
            Get
                Return Me.initiatorField
            End Get
            Set
                Me.initiatorField = value
                Me.RaisePropertyChanged("Initiator")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=24)>  _
        Public Property Details() As String
            Get
                Return Me.detailsField
            End Get
            Set
                Me.detailsField = value
                Me.RaisePropertyChanged("Details")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class ProjectScannedDisplayData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private projectIDField As Long
        
        Private projectNameField As String
        
        Private lastScanIDField As Long
        
        Private lastScanDateField As Long
        
        Private teamNameField As String
        
        Private riskLevelScoreField As Integer
        
        Private lOCField As Long
        
        Private highVulnerabilitiesField As Integer
        
        Private mediumVulnerabilitiesField As Integer
        
        Private lowVulnerabilitiesField As Integer
        
        Private infoVulnerabilitiesField As Integer
        
        Private totalVulnerabilitiesField As Integer
        
        Private queueTimeField As Long
        
        Private scanTimeField As Long
        
        Private failedLOCField As String
        
        Private statisticsCalculationDateField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ProjectID() As Long
            Get
                Return Me.projectIDField
            End Get
            Set
                Me.projectIDField = value
                Me.RaisePropertyChanged("ProjectID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
                Me.RaisePropertyChanged("ProjectName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property LastScanID() As Long
            Get
                Return Me.lastScanIDField
            End Get
            Set
                Me.lastScanIDField = value
                Me.RaisePropertyChanged("LastScanID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property LastScanDate() As Long
            Get
                Return Me.lastScanDateField
            End Get
            Set
                Me.lastScanDateField = value
                Me.RaisePropertyChanged("LastScanDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property TeamName() As String
            Get
                Return Me.teamNameField
            End Get
            Set
                Me.teamNameField = value
                Me.RaisePropertyChanged("TeamName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property RiskLevelScore() As Integer
            Get
                Return Me.riskLevelScoreField
            End Get
            Set
                Me.riskLevelScoreField = value
                Me.RaisePropertyChanged("RiskLevelScore")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property LOC() As Long
            Get
                Return Me.lOCField
            End Get
            Set
                Me.lOCField = value
                Me.RaisePropertyChanged("LOC")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property HighVulnerabilities() As Integer
            Get
                Return Me.highVulnerabilitiesField
            End Get
            Set
                Me.highVulnerabilitiesField = value
                Me.RaisePropertyChanged("HighVulnerabilities")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property MediumVulnerabilities() As Integer
            Get
                Return Me.mediumVulnerabilitiesField
            End Get
            Set
                Me.mediumVulnerabilitiesField = value
                Me.RaisePropertyChanged("MediumVulnerabilities")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property LowVulnerabilities() As Integer
            Get
                Return Me.lowVulnerabilitiesField
            End Get
            Set
                Me.lowVulnerabilitiesField = value
                Me.RaisePropertyChanged("LowVulnerabilities")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property InfoVulnerabilities() As Integer
            Get
                Return Me.infoVulnerabilitiesField
            End Get
            Set
                Me.infoVulnerabilitiesField = value
                Me.RaisePropertyChanged("InfoVulnerabilities")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property TotalVulnerabilities() As Integer
            Get
                Return Me.totalVulnerabilitiesField
            End Get
            Set
                Me.totalVulnerabilitiesField = value
                Me.RaisePropertyChanged("TotalVulnerabilities")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property QueueTime() As Long
            Get
                Return Me.queueTimeField
            End Get
            Set
                Me.queueTimeField = value
                Me.RaisePropertyChanged("QueueTime")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property ScanTime() As Long
            Get
                Return Me.scanTimeField
            End Get
            Set
                Me.scanTimeField = value
                Me.RaisePropertyChanged("ScanTime")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property FailedLOC() As String
            Get
                Return Me.failedLOCField
            End Get
            Set
                Me.failedLOCField = value
                Me.RaisePropertyChanged("FailedLOC")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property StatisticsCalculationDate() As Long
            Get
                Return Me.statisticsCalculationDateField
            End Get
            Set
                Me.statisticsCalculationDateField = value
                Me.RaisePropertyChanged("StatisticsCalculationDate")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSJIRAIssueCreateMeta)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public MustInherit Class CxWSIssueTrackingSystemMeta
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSJIRAIssueCreateMeta
        Inherits CxWSIssueTrackingSystemMeta
        
        Private projectsField() As CxWSJIRAProjectMeta
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Projects() As CxWSJIRAProjectMeta()
            Get
                Return Me.projectsField
            End Get
            Set
                Me.projectsField = value
                Me.RaisePropertyChanged("Projects")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSJIRAProjectMeta
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As String
        
        Private keyField As String
        
        Private nameField As String
        
        Private issueTypesField() As CxWSJIRAIssueType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Key() As String
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
                Me.RaisePropertyChanged("Key")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=3)>  _
        Public Property IssueTypes() As CxWSJIRAIssueType()
            Get
                Return Me.issueTypesField
            End Get
            Set
                Me.issueTypesField = value
                Me.RaisePropertyChanged("IssueTypes")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSJIRAIssueType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As String
        
        Private nameField As String
        
        Private subtaskField As Boolean
        
        Private fieldsField() As CxWSJIRAFields
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Subtask() As Boolean
            Get
                Return Me.subtaskField
            End Get
            Set
                Me.subtaskField = value
                Me.RaisePropertyChanged("Subtask")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=3)>  _
        Public Property Fields() As CxWSJIRAFields()
            Get
                Return Me.fieldsField
            End Get
            Set
                Me.fieldsField = value
                Me.RaisePropertyChanged("Fields")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSJIRAFields
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private jiraFieldNameField As String
        
        Private defaultValuesField() As Object
        
        Private nameField As String
        
        Private requiredField As Boolean
        
        Private schemaField As CxWSJIRASchema
        
        Private allowedValuesField() As CxWSJIRAAllowedValues
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property JiraFieldName() As String
            Get
                Return Me.jiraFieldNameField
            End Get
            Set
                Me.jiraFieldNameField = value
                Me.RaisePropertyChanged("JiraFieldName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property DefaultValues() As Object()
            Get
                Return Me.defaultValuesField
            End Get
            Set
                Me.defaultValuesField = value
                Me.RaisePropertyChanged("DefaultValues")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Required() As Boolean
            Get
                Return Me.requiredField
            End Get
            Set
                Me.requiredField = value
                Me.RaisePropertyChanged("Required")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Schema() As CxWSJIRASchema
            Get
                Return Me.schemaField
            End Get
            Set
                Me.schemaField = value
                Me.RaisePropertyChanged("Schema")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=5)>  _
        Public Property AllowedValues() As CxWSJIRAAllowedValues()
            Get
                Return Me.allowedValuesField
            End Get
            Set
                Me.allowedValuesField = value
                Me.RaisePropertyChanged("AllowedValues")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSJIRASchema
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private systemField As String
        
        Private typeField As String
        
        Private itemsField As String
        
        Private customField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property System() As String
            Get
                Return Me.systemField
            End Get
            Set
                Me.systemField = value
                Me.RaisePropertyChanged("System")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
                Me.RaisePropertyChanged("Type")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Items() As String
            Get
                Return Me.itemsField
            End Get
            Set
                Me.itemsField = value
                Me.RaisePropertyChanged("Items")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Custom() As String
            Get
                Return Me.customField
            End Get
            Set
                Me.customField = value
                Me.RaisePropertyChanged("Custom")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSJIRAAllowedValues
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As String
        
        Private valueField As String
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
                Me.RaisePropertyChanged("Value")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSJIRATrackingSystem)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public MustInherit Class CxWSIssueTrackingSystem
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private systemTypeField As CxWSIssueTrackingType
        
        Private idField As Long
        
        Private nameField As String
        
        Private serverURLField As String
        
        Private usernameField As String
        
        Private passwordField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property SystemType() As CxWSIssueTrackingType
            Get
                Return Me.systemTypeField
            End Get
            Set
                Me.systemTypeField = value
                Me.RaisePropertyChanged("SystemType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property ServerURL() As String
            Get
                Return Me.serverURLField
            End Get
            Set
                Me.serverURLField = value
                Me.RaisePropertyChanged("ServerURL")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
                Me.RaisePropertyChanged("Username")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
                Me.RaisePropertyChanged("Password")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSIssueTrackingType
        
        '''<remarks/>
        JIRA
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSJIRATrackingSystem
        Inherits CxWSIssueTrackingSystem
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingMetaRequestParam
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private keyField As String
        
        Private valueField As Object
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Key() As String
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
                Me.RaisePropertyChanged("Key")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Value() As Object
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
                Me.RaisePropertyChanged("Value")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemSaveRequest)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemDeleteRequest)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemRetrieveRequest)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemValidateConnectRequest)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemMetaRequest)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemCreateIssueRequest)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public MustInherit Class CxWSIssueTrackingSystemRequest
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private sessionIDField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property SessionID() As String
            Get
                Return Me.sessionIDField
            End Get
            Set
                Me.sessionIDField = value
                Me.RaisePropertyChanged("SessionID")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingSystemSaveRequest
        Inherits CxWSIssueTrackingSystemRequest
        
        Private trackingSystemField As CxWSIssueTrackingSystem
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property TrackingSystem() As CxWSIssueTrackingSystem
            Get
                Return Me.trackingSystemField
            End Get
            Set
                Me.trackingSystemField = value
                Me.RaisePropertyChanged("TrackingSystem")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingSystemDeleteRequest
        Inherits CxWSIssueTrackingSystemRequest
        
        Private iDsField() As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property IDs() As Long()
            Get
                Return Me.iDsField
            End Get
            Set
                Me.iDsField = value
                Me.RaisePropertyChanged("IDs")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingSystemRetrieveRequest
        Inherits CxWSIssueTrackingSystemRequest
        
        Private iDsField() As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property IDs() As Long()
            Get
                Return Me.iDsField
            End Get
            Set
                Me.iDsField = value
                Me.RaisePropertyChanged("IDs")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingSystemValidateConnectRequest
        Inherits CxWSIssueTrackingSystemRequest
        
        Private trackingSystemField As CxWSIssueTrackingSystem
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property TrackingSystem() As CxWSIssueTrackingSystem
            Get
                Return Me.trackingSystemField
            End Get
            Set
                Me.trackingSystemField = value
                Me.RaisePropertyChanged("TrackingSystem")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingSystemMetaRequest
        Inherits CxWSIssueTrackingSystemRequest
        
        Private trackingSystemIDField As Long
        
        Private paramsField() As CxWSIssueTrackingMetaRequestParam
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property TrackingSystemID() As Long
            Get
                Return Me.trackingSystemIDField
            End Get
            Set
                Me.trackingSystemIDField = value
                Me.RaisePropertyChanged("TrackingSystemID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property Params() As CxWSIssueTrackingMetaRequestParam()
            Get
                Return Me.paramsField
            End Get
            Set
                Me.paramsField = value
                Me.RaisePropertyChanged("Params")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingSystemCreateIssueRequest
        Inherits CxWSIssueTrackingSystemRequest
        
        Private trackingSystemIDField As Long
        
        Private scanIDField As Long
        
        Private resultIDsField() As Long
        
        Private paramsField() As CxWSIssueTrackingParam
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property TrackingSystemID() As Long
            Get
                Return Me.trackingSystemIDField
            End Get
            Set
                Me.trackingSystemIDField = value
                Me.RaisePropertyChanged("TrackingSystemID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ScanID() As Long
            Get
                Return Me.scanIDField
            End Get
            Set
                Me.scanIDField = value
                Me.RaisePropertyChanged("ScanID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=2)>  _
        Public Property ResultIDs() As Long()
            Get
                Return Me.resultIDsField
            End Get
            Set
                Me.resultIDsField = value
                Me.RaisePropertyChanged("ResultIDs")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=3)>  _
        Public Property Params() As CxWSIssueTrackingParam()
            Get
                Return Me.paramsField
            End Get
            Set
                Me.paramsField = value
                Me.RaisePropertyChanged("Params")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxUserReportPreferences)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public MustInherit Class CxUserPreferences
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxUserReportPreferences
        Inherits CxUserPreferences
        
        Private link2OnlineResultsField As Boolean
        
        Private teamField As Boolean
        
        Private checkmarxVersionField As Boolean
        
        Private scanCommentsField As Boolean
        
        Private scanTypeField As Boolean
        
        Private sourceOriginField As Boolean
        
        Private scanDensityField As Boolean
        
        Private tableOfContentsField As Boolean
        
        Private executiveSummaryField As Boolean
        
        Private displayCategoriesField As Boolean
        
        Private displayLanguageHashNumberField As Boolean
        
        Private scannedQueriesField As Boolean
        
        Private scannedFilesField As Boolean
        
        Private assignedToField As Boolean
        
        Private commentsField As Boolean
        
        Private link2OnlineField As Boolean
        
        Private resultDescriptionField As Boolean
        
        Private onlyExecutiveSummaryField As Boolean
        
        Private resultsPerQueryLimitField As Integer
        
        Private vulnerabilityDescriptionField As CxReportVulnerabilityDescription
        
        Private snippetsModeField As CxReportSnippetsMode
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Link2OnlineResults() As Boolean
            Get
                Return Me.link2OnlineResultsField
            End Get
            Set
                Me.link2OnlineResultsField = value
                Me.RaisePropertyChanged("Link2OnlineResults")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Team() As Boolean
            Get
                Return Me.teamField
            End Get
            Set
                Me.teamField = value
                Me.RaisePropertyChanged("Team")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property CheckmarxVersion() As Boolean
            Get
                Return Me.checkmarxVersionField
            End Get
            Set
                Me.checkmarxVersionField = value
                Me.RaisePropertyChanged("CheckmarxVersion")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property ScanComments() As Boolean
            Get
                Return Me.scanCommentsField
            End Get
            Set
                Me.scanCommentsField = value
                Me.RaisePropertyChanged("ScanComments")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property ScanType() As Boolean
            Get
                Return Me.scanTypeField
            End Get
            Set
                Me.scanTypeField = value
                Me.RaisePropertyChanged("ScanType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property SourceOrigin() As Boolean
            Get
                Return Me.sourceOriginField
            End Get
            Set
                Me.sourceOriginField = value
                Me.RaisePropertyChanged("SourceOrigin")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property ScanDensity() As Boolean
            Get
                Return Me.scanDensityField
            End Get
            Set
                Me.scanDensityField = value
                Me.RaisePropertyChanged("ScanDensity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property TableOfContents() As Boolean
            Get
                Return Me.tableOfContentsField
            End Get
            Set
                Me.tableOfContentsField = value
                Me.RaisePropertyChanged("TableOfContents")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property ExecutiveSummary() As Boolean
            Get
                Return Me.executiveSummaryField
            End Get
            Set
                Me.executiveSummaryField = value
                Me.RaisePropertyChanged("ExecutiveSummary")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property DisplayCategories() As Boolean
            Get
                Return Me.displayCategoriesField
            End Get
            Set
                Me.displayCategoriesField = value
                Me.RaisePropertyChanged("DisplayCategories")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property DisplayLanguageHashNumber() As Boolean
            Get
                Return Me.displayLanguageHashNumberField
            End Get
            Set
                Me.displayLanguageHashNumberField = value
                Me.RaisePropertyChanged("DisplayLanguageHashNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property ScannedQueries() As Boolean
            Get
                Return Me.scannedQueriesField
            End Get
            Set
                Me.scannedQueriesField = value
                Me.RaisePropertyChanged("ScannedQueries")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property ScannedFiles() As Boolean
            Get
                Return Me.scannedFilesField
            End Get
            Set
                Me.scannedFilesField = value
                Me.RaisePropertyChanged("ScannedFiles")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property AssignedTo() As Boolean
            Get
                Return Me.assignedToField
            End Get
            Set
                Me.assignedToField = value
                Me.RaisePropertyChanged("AssignedTo")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property Comments() As Boolean
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
                Me.RaisePropertyChanged("Comments")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property Link2Online() As Boolean
            Get
                Return Me.link2OnlineField
            End Get
            Set
                Me.link2OnlineField = value
                Me.RaisePropertyChanged("Link2Online")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=16)>  _
        Public Property ResultDescription() As Boolean
            Get
                Return Me.resultDescriptionField
            End Get
            Set
                Me.resultDescriptionField = value
                Me.RaisePropertyChanged("ResultDescription")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=17)>  _
        Public Property OnlyExecutiveSummary() As Boolean
            Get
                Return Me.onlyExecutiveSummaryField
            End Get
            Set
                Me.onlyExecutiveSummaryField = value
                Me.RaisePropertyChanged("OnlyExecutiveSummary")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=18)>  _
        Public Property ResultsPerQueryLimit() As Integer
            Get
                Return Me.resultsPerQueryLimitField
            End Get
            Set
                Me.resultsPerQueryLimitField = value
                Me.RaisePropertyChanged("ResultsPerQueryLimit")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=19)>  _
        Public Property VulnerabilityDescription() As CxReportVulnerabilityDescription
            Get
                Return Me.vulnerabilityDescriptionField
            End Get
            Set
                Me.vulnerabilityDescriptionField = value
                Me.RaisePropertyChanged("VulnerabilityDescription")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=20)>  _
        Public Property SnippetsMode() As CxReportSnippetsMode
            Get
                Return Me.snippetsModeField
            End Get
            Set
                Me.snippetsModeField = value
                Me.RaisePropertyChanged("SnippetsMode")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxReportVulnerabilityDescription
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Embeded
        
        '''<remarks/>
        Online
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxReportSnippetsMode
        
        '''<remarks/>
        None
        
        '''<remarks/>
        SourceAndDestination
        
        '''<remarks/>
        Full
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResultDisplayOptions
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private assignedToField As Boolean
        
        Private commentsField As Boolean
        
        Private link2OnlineField As Boolean
        
        Private resultDescriptionField As Boolean
        
        Private snippetsModeField As CxWSSnippetsModeDisplayOptions
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property AssignedTo() As Boolean
            Get
                Return Me.assignedToField
            End Get
            Set
                Me.assignedToField = value
                Me.RaisePropertyChanged("AssignedTo")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Comments() As Boolean
            Get
                Return Me.commentsField
            End Get
            Set
                Me.commentsField = value
                Me.RaisePropertyChanged("Comments")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Link2Online() As Boolean
            Get
                Return Me.link2OnlineField
            End Get
            Set
                Me.link2OnlineField = value
                Me.RaisePropertyChanged("Link2Online")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property ResultDescription() As Boolean
            Get
                Return Me.resultDescriptionField
            End Get
            Set
                Me.resultDescriptionField = value
                Me.RaisePropertyChanged("ResultDescription")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property SnippetsMode() As CxWSSnippetsModeDisplayOptions
            Get
                Return Me.snippetsModeField
            End Get
            Set
                Me.snippetsModeField = value
                Me.RaisePropertyChanged("SnippetsMode")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSSnippetsModeDisplayOptions
        
        '''<remarks/>
        None
        
        '''<remarks/>
        SourceAndDestination
        
        '''<remarks/>
        Full
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSGeneralDisplayOptions
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private onlyExecutiveSummaryField As Boolean
        
        Private tableOfContentsField As Boolean
        
        Private executiveSummaryField As Boolean
        
        Private displayCategoriesField As Boolean
        
        Private displayLanguageHashNumberField As Boolean
        
        Private scannedQueriesField As Boolean
        
        Private scannedFilesField As Boolean
        
        Private vulnerabilitiesDescriptionField As CxWSVulnerabilitiesDisplayOptions
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property OnlyExecutiveSummary() As Boolean
            Get
                Return Me.onlyExecutiveSummaryField
            End Get
            Set
                Me.onlyExecutiveSummaryField = value
                Me.RaisePropertyChanged("OnlyExecutiveSummary")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property TableOfContents() As Boolean
            Get
                Return Me.tableOfContentsField
            End Get
            Set
                Me.tableOfContentsField = value
                Me.RaisePropertyChanged("TableOfContents")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ExecutiveSummary() As Boolean
            Get
                Return Me.executiveSummaryField
            End Get
            Set
                Me.executiveSummaryField = value
                Me.RaisePropertyChanged("ExecutiveSummary")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property DisplayCategories() As Boolean
            Get
                Return Me.displayCategoriesField
            End Get
            Set
                Me.displayCategoriesField = value
                Me.RaisePropertyChanged("DisplayCategories")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property DisplayLanguageHashNumber() As Boolean
            Get
                Return Me.displayLanguageHashNumberField
            End Get
            Set
                Me.displayLanguageHashNumberField = value
                Me.RaisePropertyChanged("DisplayLanguageHashNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property ScannedQueries() As Boolean
            Get
                Return Me.scannedQueriesField
            End Get
            Set
                Me.scannedQueriesField = value
                Me.RaisePropertyChanged("ScannedQueries")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property ScannedFiles() As Boolean
            Get
                Return Me.scannedFilesField
            End Get
            Set
                Me.scannedFilesField = value
                Me.RaisePropertyChanged("ScannedFiles")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property VulnerabilitiesDescription() As CxWSVulnerabilitiesDisplayOptions
            Get
                Return Me.vulnerabilitiesDescriptionField
            End Get
            Set
                Me.vulnerabilitiesDescriptionField = value
                Me.RaisePropertyChanged("VulnerabilitiesDescription")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSVulnerabilitiesDisplayOptions
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Attached2Appendix
        
        '''<remarks/>
        Linked2Online
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSHeaderDisplayOptions
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private link2OnlineResultsField As Boolean
        
        Private teamField As Boolean
        
        Private checkmarxVersionField As Boolean
        
        Private scanCommentsField As Boolean
        
        Private scanTypeField As Boolean
        
        Private sourceOriginField As Boolean
        
        Private scanDensityField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Link2OnlineResults() As Boolean
            Get
                Return Me.link2OnlineResultsField
            End Get
            Set
                Me.link2OnlineResultsField = value
                Me.RaisePropertyChanged("Link2OnlineResults")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Team() As Boolean
            Get
                Return Me.teamField
            End Get
            Set
                Me.teamField = value
                Me.RaisePropertyChanged("Team")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property CheckmarxVersion() As Boolean
            Get
                Return Me.checkmarxVersionField
            End Get
            Set
                Me.checkmarxVersionField = value
                Me.RaisePropertyChanged("CheckmarxVersion")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property ScanComments() As Boolean
            Get
                Return Me.scanCommentsField
            End Get
            Set
                Me.scanCommentsField = value
                Me.RaisePropertyChanged("ScanComments")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property ScanType() As Boolean
            Get
                Return Me.scanTypeField
            End Get
            Set
                Me.scanTypeField = value
                Me.RaisePropertyChanged("ScanType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property SourceOrigin() As Boolean
            Get
                Return Me.sourceOriginField
            End Get
            Set
                Me.sourceOriginField = value
                Me.RaisePropertyChanged("SourceOrigin")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property ScanDensity() As Boolean
            Get
                Return Me.scanDensityField
            End Get
            Set
                Me.scanDensityField = value
                Me.RaisePropertyChanged("ScanDensity")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResultsPerVulnerabilityFilter
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private allField As Boolean
        
        Private maximimumField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property All() As Boolean
            Get
                Return Me.allField
            End Get
            Set
                Me.allField = value
                Me.RaisePropertyChanged("All")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Maximimum() As Integer
            Get
                Return Me.maximimumField
            End Get
            Set
                Me.maximimumField = value
                Me.RaisePropertyChanged("Maximimum")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResultsAssignedToFilter
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private allField As Boolean
        
        Private iDsField() As Long
        
        Private usernamesField() As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property All() As Boolean
            Get
                Return Me.allField
            End Get
            Set
                Me.allField = value
                Me.RaisePropertyChanged("All")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property IDs() As Long()
            Get
                Return Me.iDsField
            End Get
            Set
                Me.iDsField = value
                Me.RaisePropertyChanged("IDs")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=2)>  _
        Public Property Usernames() As String()
            Get
                Return Me.usernamesField
            End Get
            Set
                Me.usernamesField = value
                Me.RaisePropertyChanged("Usernames")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSDisplayCategoriesFilter
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private allField As Boolean
        
        Private iDsField() As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property All() As Boolean
            Get
                Return Me.allField
            End Get
            Set
                Me.allField = value
                Me.RaisePropertyChanged("All")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property IDs() As Long()
            Get
                Return Me.iDsField
            End Get
            Set
                Me.iDsField = value
                Me.RaisePropertyChanged("IDs")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResultsStateFilter
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private allField As Boolean
        
        Private iDsField() As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property All() As Boolean
            Get
                Return Me.allField
            End Get
            Set
                Me.allField = value
                Me.RaisePropertyChanged("All")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property IDs() As Long()
            Get
                Return Me.iDsField
            End Get
            Set
                Me.iDsField = value
                Me.RaisePropertyChanged("IDs")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResultsSeverityFilter
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private allField As Boolean
        
        Private highField As Boolean
        
        Private mediumField As Boolean
        
        Private lowField As Boolean
        
        Private infoField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property All() As Boolean
            Get
                Return Me.allField
            End Get
            Set
                Me.allField = value
                Me.RaisePropertyChanged("All")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property High() As Boolean
            Get
                Return Me.highField
            End Get
            Set
                Me.highField = value
                Me.RaisePropertyChanged("High")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Medium() As Boolean
            Get
                Return Me.mediumField
            End Get
            Set
                Me.mediumField = value
                Me.RaisePropertyChanged("Medium")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Low() As Boolean
            Get
                Return Me.lowField
            End Get
            Set
                Me.lowField = value
                Me.RaisePropertyChanged("Low")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Info() As Boolean
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
                Me.RaisePropertyChanged("Info")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSQueriesFilter
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private allField As Boolean
        
        Private iDsField() As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property All() As Boolean
            Get
                Return Me.allField
            End Get
            Set
                Me.allField = value
                Me.RaisePropertyChanged("All")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property IDs() As Long()
            Get
                Return Me.iDsField
            End Get
            Set
                Me.iDsField = value
                Me.RaisePropertyChanged("IDs")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSReportDisplayData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private queriesField As CxWSQueriesFilter
        
        Private resultsSeverityField As CxWSResultsSeverityFilter
        
        Private resultsStateField As CxWSResultsStateFilter
        
        Private displayCategoriesField As CxWSDisplayCategoriesFilter
        
        Private resultsAssigedToField As CxWSResultsAssignedToFilter
        
        Private resultsPerVulnerabilityField As CxWSResultsPerVulnerabilityFilter
        
        Private headerOptionsField As CxWSHeaderDisplayOptions
        
        Private generalOptionField As CxWSGeneralDisplayOptions
        
        Private resultsDisplayOptionField As CxWSResultDisplayOptions
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Queries() As CxWSQueriesFilter
            Get
                Return Me.queriesField
            End Get
            Set
                Me.queriesField = value
                Me.RaisePropertyChanged("Queries")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ResultsSeverity() As CxWSResultsSeverityFilter
            Get
                Return Me.resultsSeverityField
            End Get
            Set
                Me.resultsSeverityField = value
                Me.RaisePropertyChanged("ResultsSeverity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ResultsState() As CxWSResultsStateFilter
            Get
                Return Me.resultsStateField
            End Get
            Set
                Me.resultsStateField = value
                Me.RaisePropertyChanged("ResultsState")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property DisplayCategories() As CxWSDisplayCategoriesFilter
            Get
                Return Me.displayCategoriesField
            End Get
            Set
                Me.displayCategoriesField = value
                Me.RaisePropertyChanged("DisplayCategories")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property ResultsAssigedTo() As CxWSResultsAssignedToFilter
            Get
                Return Me.resultsAssigedToField
            End Get
            Set
                Me.resultsAssigedToField = value
                Me.RaisePropertyChanged("ResultsAssigedTo")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property ResultsPerVulnerability() As CxWSResultsPerVulnerabilityFilter
            Get
                Return Me.resultsPerVulnerabilityField
            End Get
            Set
                Me.resultsPerVulnerabilityField = value
                Me.RaisePropertyChanged("ResultsPerVulnerability")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property HeaderOptions() As CxWSHeaderDisplayOptions
            Get
                Return Me.headerOptionsField
            End Get
            Set
                Me.headerOptionsField = value
                Me.RaisePropertyChanged("HeaderOptions")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property GeneralOption() As CxWSGeneralDisplayOptions
            Get
                Return Me.generalOptionField
            End Get
            Set
                Me.generalOptionField = value
                Me.RaisePropertyChanged("GeneralOption")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property ResultsDisplayOption() As CxWSResultDisplayOptions
            Get
                Return Me.resultsDisplayOptionField
            End Get
            Set
                Me.resultsDisplayOptionField = value
                Me.RaisePropertyChanged("ResultsDisplayOption")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSFilteredReportRequest)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSReportRequest
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private typeField As CxWSReportType
        
        Private scanIDField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Type() As CxWSReportType
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
                Me.RaisePropertyChanged("Type")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ScanID() As Long
            Get
                Return Me.scanIDField
            End Get
            Set
                Me.scanIDField = value
                Me.RaisePropertyChanged("ScanID")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSReportType
        
        '''<remarks/>
        PDF
        
        '''<remarks/>
        RTF
        
        '''<remarks/>
        CSV
        
        '''<remarks/>
        XML
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSFilteredReportRequest
        Inherits CxWSReportRequest
        
        Private displayDataField As CxWSReportDisplayData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property DisplayData() As CxWSReportDisplayData
            Get
                Return Me.displayDataField
            End Get
            Set
                Me.displayDataField = value
                Me.RaisePropertyChanged("DisplayData")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSTransportedQuery
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private queryIdField As Long
        
        Private nameField As String
        
        Private packageIdField As Long
        
        Private cweField As Long
        
        Private isExecutableField As Boolean
        
        Private severityField As Integer
        
        Private languageNameField As String
        
        Private packageTypeNameField As String
        
        Private groupNameField As String
        
        Private sourceField As String
        
        Private engineMetadataField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property QueryId() As Long
            Get
                Return Me.queryIdField
            End Get
            Set
                Me.queryIdField = value
                Me.RaisePropertyChanged("QueryId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property PackageId() As Long
            Get
                Return Me.packageIdField
            End Get
            Set
                Me.packageIdField = value
                Me.RaisePropertyChanged("PackageId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Cwe() As Long
            Get
                Return Me.cweField
            End Get
            Set
                Me.cweField = value
                Me.RaisePropertyChanged("Cwe")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property IsExecutable() As Boolean
            Get
                Return Me.isExecutableField
            End Get
            Set
                Me.isExecutableField = value
                Me.RaisePropertyChanged("IsExecutable")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Severity() As Integer
            Get
                Return Me.severityField
            End Get
            Set
                Me.severityField = value
                Me.RaisePropertyChanged("Severity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property LanguageName() As String
            Get
                Return Me.languageNameField
            End Get
            Set
                Me.languageNameField = value
                Me.RaisePropertyChanged("LanguageName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property PackageTypeName() As String
            Get
                Return Me.packageTypeNameField
            End Get
            Set
                Me.packageTypeNameField = value
                Me.RaisePropertyChanged("PackageTypeName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property GroupName() As String
            Get
                Return Me.groupNameField
            End Get
            Set
                Me.groupNameField = value
                Me.RaisePropertyChanged("GroupName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property Source() As String
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
                Me.RaisePropertyChanged("Source")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property EngineMetadata() As String
            Get
                Return Me.engineMetadataField
            End Get
            Set
                Me.engineMetadataField = value
                Me.RaisePropertyChanged("EngineMetadata")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CliScanArgs
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private prjSettingsField As ProjectSettings
        
        Private srcCodeSettingsField As SourceCodeSettings
        
        Private isPrivateScanField As Boolean
        
        Private isIncrementalField As Boolean
        
        Private commentField As String
        
        Private ignoreScanWithUnchangedCodeField As Boolean
        
        Private clientOriginField As CxClientType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PrjSettings() As ProjectSettings
            Get
                Return Me.prjSettingsField
            End Get
            Set
                Me.prjSettingsField = value
                Me.RaisePropertyChanged("PrjSettings")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property SrcCodeSettings() As SourceCodeSettings
            Get
                Return Me.srcCodeSettingsField
            End Get
            Set
                Me.srcCodeSettingsField = value
                Me.RaisePropertyChanged("SrcCodeSettings")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property IsPrivateScan() As Boolean
            Get
                Return Me.isPrivateScanField
            End Get
            Set
                Me.isPrivateScanField = value
                Me.RaisePropertyChanged("IsPrivateScan")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property IsIncremental() As Boolean
            Get
                Return Me.isIncrementalField
            End Get
            Set
                Me.isIncrementalField = value
                Me.RaisePropertyChanged("IsIncremental")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
                Me.RaisePropertyChanged("Comment")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property IgnoreScanWithUnchangedCode() As Boolean
            Get
                Return Me.ignoreScanWithUnchangedCodeField
            End Get
            Set
                Me.ignoreScanWithUnchangedCodeField = value
                Me.RaisePropertyChanged("IgnoreScanWithUnchangedCode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property ClientOrigin() As CxClientType
            Get
                Return Me.clientOriginField
            End Get
            Set
                Me.clientOriginField = value
                Me.RaisePropertyChanged("ClientOrigin")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxClientType
        
        '''<remarks/>
        None
        
        '''<remarks/>
        WebPortal
        
        '''<remarks/>
        CLI
        
        '''<remarks/>
        Eclipse
        
        '''<remarks/>
        VS
        
        '''<remarks/>
        InteliJ
        
        '''<remarks/>
        Audit
        
        '''<remarks/>
        SDK
        
        '''<remarks/>
        Jenkins
        
        '''<remarks/>
        TFSBuild
        
        '''<remarks/>
        Importer
        
        '''<remarks/>
        Other
        
        '''<remarks/>
        Sonar
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxEngineServer
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private uriField As String
        
        Private maxScansField As Integer
        
        Private serverNameField As String
        
        Private maxScanLocField As Integer
        
        Private minScanLocField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property uri() As String
            Get
                Return Me.uriField
            End Get
            Set
                Me.uriField = value
                Me.RaisePropertyChanged("uri")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property maxScans() As Integer
            Get
                Return Me.maxScansField
            End Get
            Set
                Me.maxScansField = value
                Me.RaisePropertyChanged("maxScans")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property serverName() As String
            Get
                Return Me.serverNameField
            End Get
            Set
                Me.serverNameField = value
                Me.RaisePropertyChanged("serverName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property maxScanLoc() As Integer
            Get
                Return Me.maxScanLocField
            End Get
            Set
                Me.maxScanLocField = value
                Me.RaisePropertyChanged("maxScanLoc")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property minScanLoc() As Integer
            Get
                Return Me.minScanLocField
            End Get
            Set
                Me.minScanLocField = value
                Me.RaisePropertyChanged("minScanLoc")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class EmailForSalesData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private nameField As String
        
        Private emailField As String
        
        Private companyField As String
        
        Private phoneField As String
        
        Private emailBodyField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
                Me.RaisePropertyChanged("Email")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
                Me.RaisePropertyChanged("Company")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
                Me.RaisePropertyChanged("Phone")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property EmailBody() As String
            Get
                Return Me.emailBodyField
            End Get
            Set
                Me.emailBodyField = value
                Me.RaisePropertyChanged("EmailBody")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class SaasPackage
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private nameField As String
        
        Private usersField As Long
        
        Private languagesField As Integer
        
        Private lOCField As Long
        
        Private presetsNumberField As Integer
        
        Private presetsIdsField() As Long
        
        Private freeField As Boolean
        
        Private sourceControlEnabledField As Boolean
        
        Private createPDFEnabledField As Boolean
        
        Private onlineViewerEnabledField As Boolean
        
        Private pluginsEnabledField As Boolean
        
        Private systemField As Boolean
        
        Private scansToDisplayField As Integer
        
        Private is_DeprecatedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Users() As Long
            Get
                Return Me.usersField
            End Get
            Set
                Me.usersField = value
                Me.RaisePropertyChanged("Users")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Languages() As Integer
            Get
                Return Me.languagesField
            End Get
            Set
                Me.languagesField = value
                Me.RaisePropertyChanged("Languages")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property LOC() As Long
            Get
                Return Me.lOCField
            End Get
            Set
                Me.lOCField = value
                Me.RaisePropertyChanged("LOC")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property PresetsNumber() As Integer
            Get
                Return Me.presetsNumberField
            End Get
            Set
                Me.presetsNumberField = value
                Me.RaisePropertyChanged("PresetsNumber")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=6)>  _
        Public Property PresetsIds() As Long()
            Get
                Return Me.presetsIdsField
            End Get
            Set
                Me.presetsIdsField = value
                Me.RaisePropertyChanged("PresetsIds")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property Free() As Boolean
            Get
                Return Me.freeField
            End Get
            Set
                Me.freeField = value
                Me.RaisePropertyChanged("Free")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property SourceControlEnabled() As Boolean
            Get
                Return Me.sourceControlEnabledField
            End Get
            Set
                Me.sourceControlEnabledField = value
                Me.RaisePropertyChanged("SourceControlEnabled")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property CreatePDFEnabled() As Boolean
            Get
                Return Me.createPDFEnabledField
            End Get
            Set
                Me.createPDFEnabledField = value
                Me.RaisePropertyChanged("CreatePDFEnabled")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property OnlineViewerEnabled() As Boolean
            Get
                Return Me.onlineViewerEnabledField
            End Get
            Set
                Me.onlineViewerEnabledField = value
                Me.RaisePropertyChanged("OnlineViewerEnabled")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property PluginsEnabled() As Boolean
            Get
                Return Me.pluginsEnabledField
            End Get
            Set
                Me.pluginsEnabledField = value
                Me.RaisePropertyChanged("PluginsEnabled")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property System() As Boolean
            Get
                Return Me.systemField
            End Get
            Set
                Me.systemField = value
                Me.RaisePropertyChanged("System")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property ScansToDisplay() As Integer
            Get
                Return Me.scansToDisplayField
            End Get
            Set
                Me.scansToDisplayField = value
                Me.RaisePropertyChanged("ScansToDisplay")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property Is_Deprecated() As Boolean
            Get
                Return Me.is_DeprecatedField
            End Get
            Set
                Me.is_DeprecatedField = value
                Me.RaisePropertyChanged("Is_Deprecated")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class SaasPendingUser
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private passwordField As String
        
        Private userNameField As String
        
        Private phoneField As String
        
        Private companyNameField As String
        
        Private industryField As String
        
        Private activationTokenField As String
        
        Private languagesField As Long
        
        Private packageIdField As Long
        
        Private createdDateField As CxDateTime
        
        Private isActivatedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
                Me.RaisePropertyChanged("FirstName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
                Me.RaisePropertyChanged("LastName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
                Me.RaisePropertyChanged("Password")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
                Me.RaisePropertyChanged("UserName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
                Me.RaisePropertyChanged("Phone")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property CompanyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
                Me.RaisePropertyChanged("CompanyName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property Industry() As String
            Get
                Return Me.industryField
            End Get
            Set
                Me.industryField = value
                Me.RaisePropertyChanged("Industry")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property ActivationToken() As String
            Get
                Return Me.activationTokenField
            End Get
            Set
                Me.activationTokenField = value
                Me.RaisePropertyChanged("ActivationToken")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property Languages() As Long
            Get
                Return Me.languagesField
            End Get
            Set
                Me.languagesField = value
                Me.RaisePropertyChanged("Languages")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property PackageId() As Long
            Get
                Return Me.packageIdField
            End Get
            Set
                Me.packageIdField = value
                Me.RaisePropertyChanged("PackageId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property CreatedDate() As CxDateTime
            Get
                Return Me.createdDateField
            End Get
            Set
                Me.createdDateField = value
                Me.RaisePropertyChanged("CreatedDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property IsActivated() As Boolean
            Get
                Return Me.isActivatedField
            End Get
            Set
                Me.isActivatedField = value
                Me.RaisePropertyChanged("IsActivated")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxPivotLayout
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private nameField As String
        
        Private ownerField As Long
        
        Private serializedDataField As String
        
        Private chartTypeField As String
        
        Private isSystemField As Boolean
        
        Private owner_TeamField As String
        
        Private isPublicField As Boolean
        
        Private viewIdField As Long
        
        Private teamsField() As String
        
        Private criteriaField() As PivotClientBaseParam
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Owner() As Long
            Get
                Return Me.ownerField
            End Get
            Set
                Me.ownerField = value
                Me.RaisePropertyChanged("Owner")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property SerializedData() As String
            Get
                Return Me.serializedDataField
            End Get
            Set
                Me.serializedDataField = value
                Me.RaisePropertyChanged("SerializedData")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property ChartType() As String
            Get
                Return Me.chartTypeField
            End Get
            Set
                Me.chartTypeField = value
                Me.RaisePropertyChanged("ChartType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property IsSystem() As Boolean
            Get
                Return Me.isSystemField
            End Get
            Set
                Me.isSystemField = value
                Me.RaisePropertyChanged("IsSystem")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property Owner_Team() As String
            Get
                Return Me.owner_TeamField
            End Get
            Set
                Me.owner_TeamField = value
                Me.RaisePropertyChanged("Owner_Team")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property IsPublic() As Boolean
            Get
                Return Me.isPublicField
            End Get
            Set
                Me.isPublicField = value
                Me.RaisePropertyChanged("IsPublic")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property ViewId() As Long
            Get
                Return Me.viewIdField
            End Get
            Set
                Me.viewIdField = value
                Me.RaisePropertyChanged("ViewId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=9)>  _
        Public Property Teams() As String()
            Get
                Return Me.teamsField
            End Get
            Set
                Me.teamsField = value
                Me.RaisePropertyChanged("Teams")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=10)>  _
        Public Property Criteria() As PivotClientBaseParam()
            Get
                Return Me.criteriaField
            End Get
            Set
                Me.criteriaField = value
                Me.RaisePropertyChanged("Criteria")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(PivotClientDateRangeParam)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PivotClientExploitabilityParam)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public MustInherit Class PivotClientBaseParam
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class PivotClientDateRangeParam
        Inherits PivotClientBaseParam
        
        Private rangeTypeField As PivotClientDateRanges
        
        Private dateFromField As CxDateTime
        
        Private dateToField As CxDateTime
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property RangeType() As PivotClientDateRanges
            Get
                Return Me.rangeTypeField
            End Get
            Set
                Me.rangeTypeField = value
                Me.RaisePropertyChanged("RangeType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property DateFrom() As CxDateTime
            Get
                Return Me.dateFromField
            End Get
            Set
                Me.dateFromField = value
                Me.RaisePropertyChanged("DateFrom")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property DateTo() As CxDateTime
            Get
                Return Me.dateToField
            End Get
            Set
                Me.dateToField = value
                Me.RaisePropertyChanged("DateTo")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum PivotClientDateRanges
        
        '''<remarks/>
        ALL
        
        '''<remarks/>
        PAST_DAY
        
        '''<remarks/>
        PAST_WEEK
        
        '''<remarks/>
        PAST_MONTH
        
        '''<remarks/>
        PAST_3_MONTH
        
        '''<remarks/>
        PAST_YEAR
        
        '''<remarks/>
        CUSTOM
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class PivotClientExploitabilityParam
        Inherits PivotClientBaseParam
        
        Private includeNotExploitableField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property IncludeNotExploitable() As Boolean
            Get
                Return Me.includeNotExploitableField
            End Get
            Set
                Me.includeNotExploitableField = value
                Me.RaisePropertyChanged("IncludeNotExploitable")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxPivotDataRequest
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private viewNameField As PivotViewClientType
        
        Private criteriaField() As PivotClientBaseParam
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ViewName() As PivotViewClientType
            Get
                Return Me.viewNameField
            End Get
            Set
                Me.viewNameField = value
                Me.RaisePropertyChanged("ViewName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property Criteria() As PivotClientBaseParam()
            Get
                Return Me.criteriaField
            End Get
            Set
                Me.criteriaField = value
                Me.RaisePropertyChanged("Criteria")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum PivotViewClientType
        
        '''<remarks/>
        AllProjectScans
        
        '''<remarks/>
        LastMonthProjectScans
        
        '''<remarks/>
        ProjectsLastScan
        
        '''<remarks/>
        LastWeekOWASPTop10
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxPivotRow
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private dataField() As Object
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Data() As Object()
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
                Me.RaisePropertyChanged("Data")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxPivotColumn
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private nameField As String
        
        Private dataTypeNameField As String
        
        Private displayNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property DataTypeName() As String
            Get
                Return Me.dataTypeNameField
            End Get
            Set
                Me.dataTypeNameField = value
                Me.RaisePropertyChanged("DataTypeName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
                Me.RaisePropertyChanged("DisplayName")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxPivotTable
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private columnsField() As CxPivotColumn
        
        Private rowsField() As CxPivotRow
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Columns() As CxPivotColumn()
            Get
                Return Me.columnsField
            End Get
            Set
                Me.columnsField = value
                Me.RaisePropertyChanged("Columns")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property Rows() As CxPivotRow()
            Get
                Return Me.rowsField
            End Get
            Set
                Me.rowsField = value
                Me.RaisePropertyChanged("Rows")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class AssignUser
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private userNameField As String
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private emailField As String
        
        Private userPreferedLanguageLCIDField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
                Me.RaisePropertyChanged("UserName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
                Me.RaisePropertyChanged("FirstName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
                Me.RaisePropertyChanged("LastName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
                Me.RaisePropertyChanged("Email")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property UserPreferedLanguageLCID() As Integer
            Get
                Return Me.userPreferedLanguageLCIDField
            End Get
            Set
                Me.userPreferedLanguageLCIDField = value
                Me.RaisePropertyChanged("UserPreferedLanguageLCID")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSEnableCRUDAction
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private typeField As CxWSCrudEnum
        
        Private enableField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Type() As CxWSCrudEnum
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
                Me.RaisePropertyChanged("Type")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Enable() As Boolean
            Get
                Return Me.enableField
            End Get
            Set
                Me.enableField = value
                Me.RaisePropertyChanged("Enable")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSCrudEnum
        
        '''<remarks/>
        Create
        
        '''<remarks/>
        Delete
        
        '''<remarks/>
        Update
        
        '''<remarks/>
        View
        
        '''<remarks/>
        Run
        
        '''<remarks/>
        Investigate
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSItemAndCRUD
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private typeField As CxWSItemTypeEnum
        
        Private cRUDActionListField() As CxWSEnableCRUDAction
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Type() As CxWSItemTypeEnum
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
                Me.RaisePropertyChanged("Type")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property CRUDActionList() As CxWSEnableCRUDAction()
            Get
                Return Me.cRUDActionListField
            End Get
            Set
                Me.cRUDActionListField = value
                Me.RaisePropertyChanged("CRUDActionList")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSItemTypeEnum
        
        '''<remarks/>
        Project
        
        '''<remarks/>
        Task
        
        '''<remarks/>
        Scan
        
        '''<remarks/>
        Preset
        
        '''<remarks/>
        Configuration
        
        '''<remarks/>
        Users
        
        '''<remarks/>
        Roles
        
        '''<remarks/>
        Other
        
        '''<remarks/>
        SystemSettings
        
        '''<remarks/>
        Ignore_Path
        
        '''<remarks/>
        ResultComment
        
        '''<remarks/>
        ResultSeverity
        
        '''<remarks/>
        ResultStatus
        
        '''<remarks/>
        AuditUser
    End Enum
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSRoleWithUserPrivileges)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class Role
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private nameField As String
        
        Private idField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSRoleWithUserPrivileges
        Inherits Role
        
        Private itemsCRUDField() As CxWSItemAndCRUD
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property ItemsCRUD() As CxWSItemAndCRUD()
            Get
                Return Me.itemsCRUDField
            End Get
            Set
                Me.itemsCRUDField = value
                Me.RaisePropertyChanged("ItemsCRUD")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(UserData)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class WebClientUser
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private userPreferedLanguageLCIDField As Integer
        
        Private passwordField As String
        
        Private jobTitleField As String
        
        Private emailField As String
        
        Private userNameField As String
        
        Private uPNField As String
        
        Private phoneField As String
        
        Private cellPhoneField As String
        
        Private skypeField As String
        
        Private companyIDField As String
        
        Private companyNameField As String
        
        Private willExpireAfterDaysField As String
        
        Private countryField As String
        
        Private dateCreatedField As Date
        
        Private auditUserField As Boolean
        
        Private groupListField() As Group
        
        Private lastLoginDateField As Date
        
        Private limitAccessByIPAddressField As Boolean
        
        Private allowedIPsField() As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
                Me.RaisePropertyChanged("FirstName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
                Me.RaisePropertyChanged("LastName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property UserPreferedLanguageLCID() As Integer
            Get
                Return Me.userPreferedLanguageLCIDField
            End Get
            Set
                Me.userPreferedLanguageLCIDField = value
                Me.RaisePropertyChanged("UserPreferedLanguageLCID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
                Me.RaisePropertyChanged("Password")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property JobTitle() As String
            Get
                Return Me.jobTitleField
            End Get
            Set
                Me.jobTitleField = value
                Me.RaisePropertyChanged("JobTitle")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
                Me.RaisePropertyChanged("Email")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
                Me.RaisePropertyChanged("UserName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property UPN() As String
            Get
                Return Me.uPNField
            End Get
            Set
                Me.uPNField = value
                Me.RaisePropertyChanged("UPN")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property Phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
                Me.RaisePropertyChanged("Phone")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property CellPhone() As String
            Get
                Return Me.cellPhoneField
            End Get
            Set
                Me.cellPhoneField = value
                Me.RaisePropertyChanged("CellPhone")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property Skype() As String
            Get
                Return Me.skypeField
            End Get
            Set
                Me.skypeField = value
                Me.RaisePropertyChanged("Skype")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property CompanyID() As String
            Get
                Return Me.companyIDField
            End Get
            Set
                Me.companyIDField = value
                Me.RaisePropertyChanged("CompanyID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property CompanyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
                Me.RaisePropertyChanged("CompanyName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property willExpireAfterDays() As String
            Get
                Return Me.willExpireAfterDaysField
            End Get
            Set
                Me.willExpireAfterDaysField = value
                Me.RaisePropertyChanged("willExpireAfterDays")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
                Me.RaisePropertyChanged("country")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=16)>  _
        Public Property DateCreated() As Date
            Get
                Return Me.dateCreatedField
            End Get
            Set
                Me.dateCreatedField = value
                Me.RaisePropertyChanged("DateCreated")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=17)>  _
        Public Property AuditUser() As Boolean
            Get
                Return Me.auditUserField
            End Get
            Set
                Me.auditUserField = value
                Me.RaisePropertyChanged("AuditUser")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=18)>  _
        Public Property GroupList() As Group()
            Get
                Return Me.groupListField
            End Get
            Set
                Me.groupListField = value
                Me.RaisePropertyChanged("GroupList")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=19)>  _
        Public Property LastLoginDate() As Date
            Get
                Return Me.lastLoginDateField
            End Get
            Set
                Me.lastLoginDateField = value
                Me.RaisePropertyChanged("LastLoginDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=20)>  _
        Public Property LimitAccessByIPAddress() As Boolean
            Get
                Return Me.limitAccessByIPAddressField
            End Get
            Set
                Me.limitAccessByIPAddressField = value
                Me.RaisePropertyChanged("LimitAccessByIPAddress")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=21)>  _
        Public Property AllowedIPs() As String()
            Get
                Return Me.allowedIPsField
            End Get
            Set
                Me.allowedIPsField = value
                Me.RaisePropertyChanged("AllowedIPs")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class UserData
        Inherits WebClientUser
        
        Private isActiveField As Boolean
        
        Private roleDataField As Role
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property IsActive() As Boolean
            Get
                Return Me.isActiveField
            End Get
            Set
                Me.isActiveField = value
                Me.RaisePropertyChanged("IsActive")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property RoleData() As Role
            Get
                Return Me.roleDataField
            End Get
            Set
                Me.roleDataField = value
                Me.RaisePropertyChanged("RoleData")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSCustomField
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSEdge
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private startNodeField As CxWSNode
        
        Private endNodeField As CxWSNode
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property StartNode() As CxWSNode
            Get
                Return Me.startNodeField
            End Get
            Set
                Me.startNodeField = value
                Me.RaisePropertyChanged("StartNode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property EndNode() As CxWSNode
            Get
                Return Me.endNodeField
            End Get
            Set
                Me.endNodeField = value
                Me.RaisePropertyChanged("EndNode")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSNode
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private nodeIdField As Long
        
        Private dOM_IdField As Long
        
        Private stateField As Integer
        
        Private pathIdsField() As Long
        
        Private nameField As String
        
        Private fullNameField As String
        
        Private fileNameField As String
        
        Private isBFLField As Boolean
        
        Private columnField As Integer
        
        Private lineField As Integer
        
        Private lengthField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property NodeId() As Long
            Get
                Return Me.nodeIdField
            End Get
            Set
                Me.nodeIdField = value
                Me.RaisePropertyChanged("NodeId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property DOM_Id() As Long
            Get
                Return Me.dOM_IdField
            End Get
            Set
                Me.dOM_IdField = value
                Me.RaisePropertyChanged("DOM_Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property State() As Integer
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
                Me.RaisePropertyChanged("State")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=3)>  _
        Public Property PathIds() As Long()
            Get
                Return Me.pathIdsField
            End Get
            Set
                Me.pathIdsField = value
                Me.RaisePropertyChanged("PathIds")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property FullName() As String
            Get
                Return Me.fullNameField
            End Get
            Set
                Me.fullNameField = value
                Me.RaisePropertyChanged("FullName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property FileName() As String
            Get
                Return Me.fileNameField
            End Get
            Set
                Me.fileNameField = value
                Me.RaisePropertyChanged("FileName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property isBFL() As Boolean
            Get
                Return Me.isBFLField
            End Get
            Set
                Me.isBFLField = value
                Me.RaisePropertyChanged("isBFL")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property Column() As Integer
            Get
                Return Me.columnField
            End Get
            Set
                Me.columnField = value
                Me.RaisePropertyChanged("Column")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property Line() As Integer
            Get
                Return Me.lineField
            End Get
            Set
                Me.lineField = value
                Me.RaisePropertyChanged("Line")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property Length() As Integer
            Get
                Return Me.lengthField
            End Get
            Set
                Me.lengthField = value
                Me.RaisePropertyChanged("Length")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSSingleResultCompareData)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSSingleResultData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private queryIdField As Long
        
        Private pathIdField As Long
        
        Private sourceFolderField As String
        
        Private sourceFileField As String
        
        Private sourceLineField As Long
        
        Private sourceObjectField As String
        
        Private destFolderField As String
        
        Private destFileField As String
        
        Private destLineField As Long
        
        Private numberOfNodesField As Integer
        
        Private destObjectField As String
        
        Private commentField As String
        
        Private stateField As Integer
        
        Private severityField As Integer
        
        Private assignedUserField As String
        
        Private confidenceLevelField As System.Nullable(Of Integer)
        
        Private resultStatusField As CompareStatusType
        
        Private issueTicketIDField As String
        
        Private queryVersionCodeField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property QueryId() As Long
            Get
                Return Me.queryIdField
            End Get
            Set
                Me.queryIdField = value
                Me.RaisePropertyChanged("QueryId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property PathId() As Long
            Get
                Return Me.pathIdField
            End Get
            Set
                Me.pathIdField = value
                Me.RaisePropertyChanged("PathId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property SourceFolder() As String
            Get
                Return Me.sourceFolderField
            End Get
            Set
                Me.sourceFolderField = value
                Me.RaisePropertyChanged("SourceFolder")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property SourceFile() As String
            Get
                Return Me.sourceFileField
            End Get
            Set
                Me.sourceFileField = value
                Me.RaisePropertyChanged("SourceFile")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property SourceLine() As Long
            Get
                Return Me.sourceLineField
            End Get
            Set
                Me.sourceLineField = value
                Me.RaisePropertyChanged("SourceLine")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property SourceObject() As String
            Get
                Return Me.sourceObjectField
            End Get
            Set
                Me.sourceObjectField = value
                Me.RaisePropertyChanged("SourceObject")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property DestFolder() As String
            Get
                Return Me.destFolderField
            End Get
            Set
                Me.destFolderField = value
                Me.RaisePropertyChanged("DestFolder")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property DestFile() As String
            Get
                Return Me.destFileField
            End Get
            Set
                Me.destFileField = value
                Me.RaisePropertyChanged("DestFile")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property DestLine() As Long
            Get
                Return Me.destLineField
            End Get
            Set
                Me.destLineField = value
                Me.RaisePropertyChanged("DestLine")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property NumberOfNodes() As Integer
            Get
                Return Me.numberOfNodesField
            End Get
            Set
                Me.numberOfNodesField = value
                Me.RaisePropertyChanged("NumberOfNodes")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property DestObject() As String
            Get
                Return Me.destObjectField
            End Get
            Set
                Me.destObjectField = value
                Me.RaisePropertyChanged("DestObject")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
                Me.RaisePropertyChanged("Comment")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property State() As Integer
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
                Me.RaisePropertyChanged("State")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property Severity() As Integer
            Get
                Return Me.severityField
            End Get
            Set
                Me.severityField = value
                Me.RaisePropertyChanged("Severity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property AssignedUser() As String
            Get
                Return Me.assignedUserField
            End Get
            Set
                Me.assignedUserField = value
                Me.RaisePropertyChanged("AssignedUser")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=15)>  _
        Public Property ConfidenceLevel() As System.Nullable(Of Integer)
            Get
                Return Me.confidenceLevelField
            End Get
            Set
                Me.confidenceLevelField = value
                Me.RaisePropertyChanged("ConfidenceLevel")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=16)>  _
        Public Property ResultStatus() As CompareStatusType
            Get
                Return Me.resultStatusField
            End Get
            Set
                Me.resultStatusField = value
                Me.RaisePropertyChanged("ResultStatus")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=17)>  _
        Public Property IssueTicketID() As String
            Get
                Return Me.issueTicketIDField
            End Get
            Set
                Me.issueTicketIDField = value
                Me.RaisePropertyChanged("IssueTicketID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=18)>  _
        Public Property QueryVersionCode() As Long
            Get
                Return Me.queryVersionCodeField
            End Get
            Set
                Me.queryVersionCodeField = value
                Me.RaisePropertyChanged("QueryVersionCode")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="CxDataTypes.xsd")>  _
    Public Enum CompareStatusType
        
        '''<remarks/>
        Fixed
        
        '''<remarks/>
        Reoccured
        
        '''<remarks/>
        [New]
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSSingleResultCompareData
        Inherits CxWSSingleResultData
        
        Private scanIdField As Long
        
        Private comparedToScanIdField As Long
        
        Private comparedToScanPathIdField As Long
        
        Private queryNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ScanId() As Long
            Get
                Return Me.scanIdField
            End Get
            Set
                Me.scanIdField = value
                Me.RaisePropertyChanged("ScanId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ComparedToScanId() As Long
            Get
                Return Me.comparedToScanIdField
            End Get
            Set
                Me.comparedToScanIdField = value
                Me.RaisePropertyChanged("ComparedToScanId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ComparedToScanPathId() As Long
            Get
                Return Me.comparedToScanPathIdField
            End Get
            Set
                Me.comparedToScanPathIdField = value
                Me.RaisePropertyChanged("ComparedToScanPathId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property QueryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
                Me.RaisePropertyChanged("QueryName")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSQueryVulnerabilityData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private categoriesField() As CxQueryCategory
        
        Private queryIdField As Long
        
        Private queryNameField As String
        
        Private groupIdField As Long
        
        Private groupNameField As String
        
        Private severityField As Integer
        
        Private cWEField As Long
        
        Private amountOfResultsField As Integer
        
        Private languageNameField As String
        
        Private queryVersionCodeField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Categories() As CxQueryCategory()
            Get
                Return Me.categoriesField
            End Get
            Set
                Me.categoriesField = value
                Me.RaisePropertyChanged("Categories")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property QueryId() As Long
            Get
                Return Me.queryIdField
            End Get
            Set
                Me.queryIdField = value
                Me.RaisePropertyChanged("QueryId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property QueryName() As String
            Get
                Return Me.queryNameField
            End Get
            Set
                Me.queryNameField = value
                Me.RaisePropertyChanged("QueryName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property GroupId() As Long
            Get
                Return Me.groupIdField
            End Get
            Set
                Me.groupIdField = value
                Me.RaisePropertyChanged("GroupId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property GroupName() As String
            Get
                Return Me.groupNameField
            End Get
            Set
                Me.groupNameField = value
                Me.RaisePropertyChanged("GroupName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Severity() As Integer
            Get
                Return Me.severityField
            End Get
            Set
                Me.severityField = value
                Me.RaisePropertyChanged("Severity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property CWE() As Long
            Get
                Return Me.cWEField
            End Get
            Set
                Me.cWEField = value
                Me.RaisePropertyChanged("CWE")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property AmountOfResults() As Integer
            Get
                Return Me.amountOfResultsField
            End Get
            Set
                Me.amountOfResultsField = value
                Me.RaisePropertyChanged("AmountOfResults")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property LanguageName() As String
            Get
                Return Me.languageNameField
            End Get
            Set
                Me.languageNameField = value
                Me.RaisePropertyChanged("LanguageName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property QueryVersionCode() As Long
            Get
                Return Me.queryVersionCodeField
            End Get
            Set
                Me.queryVersionCodeField = value
                Me.RaisePropertyChanged("QueryVersionCode")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxQueryCategory
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private categoryNameField As String
        
        Private categoryTypeField As CxCategoryType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property CategoryName() As String
            Get
                Return Me.categoryNameField
            End Get
            Set
                Me.categoryNameField = value
                Me.RaisePropertyChanged("CategoryName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property CategoryType() As CxCategoryType
            Get
                Return Me.categoryTypeField
            End Get
            Set
                Me.categoryTypeField = value
                Me.RaisePropertyChanged("CategoryType")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxCategoryType
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private nameField As String
        
        Private orderField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Order() As Integer
            Get
                Return Me.orderField
            End Get
            Set
                Me.orderField = value
                Me.RaisePropertyChanged("Order")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSQueryVersionDetails
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private queryPathField As String
        
        Private querySourceField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property QueryPath() As String
            Get
                Return Me.queryPathField
            End Get
            Set
                Me.queryPathField = value
                Me.RaisePropertyChanged("QueryPath")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property QuerySource() As String
            Get
                Return Me.querySourceField
            End Get
            Set
                Me.querySourceField = value
                Me.RaisePropertyChanged("QuerySource")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxPresetDetails
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private queryIdsField() As Long
        
        Private idField As Long
        
        Private nameField As String
        
        Private owningteamField As String
        
        Private isPublicField As Boolean
        
        Private ownerField As String
        
        Private isUserAllowToUpdateField As Boolean
        
        Private isUserAllowToDeleteField As Boolean
        
        Private isDuplicateField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property queryIds() As Long()
            Get
                Return Me.queryIdsField
            End Get
            Set
                Me.queryIdsField = value
                Me.RaisePropertyChanged("queryIds")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property owningteam() As String
            Get
                Return Me.owningteamField
            End Get
            Set
                Me.owningteamField = value
                Me.RaisePropertyChanged("owningteam")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property isPublic() As Boolean
            Get
                Return Me.isPublicField
            End Get
            Set
                Me.isPublicField = value
                Me.RaisePropertyChanged("isPublic")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property owner() As String
            Get
                Return Me.ownerField
            End Get
            Set
                Me.ownerField = value
                Me.RaisePropertyChanged("owner")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property isUserAllowToUpdate() As Boolean
            Get
                Return Me.isUserAllowToUpdateField
            End Get
            Set
                Me.isUserAllowToUpdateField = value
                Me.RaisePropertyChanged("isUserAllowToUpdate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property isUserAllowToDelete() As Boolean
            Get
                Return Me.isUserAllowToDeleteField
            End Get
            Set
                Me.isUserAllowToDeleteField = value
                Me.RaisePropertyChanged("isUserAllowToDelete")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property IsDuplicate() As Boolean
            Get
                Return Me.isDuplicateField
            End Get
            Set
                Me.isDuplicateField = value
                Me.RaisePropertyChanged("IsDuplicate")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSQuery
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private nameField As String
        
        Private queryIdField As Long
        
        Private sourceField As String
        
        Private cweField As Long
        
        Private isExecutableField As Boolean
        
        Private isEncryptedField As Boolean
        
        Private severityField As Integer
        
        Private packageIdField As Long
        
        Private statusField As QueryStatus
        
        Private typeField As CxWSQueryType
        
        Private categoriesField() As CxQueryCategory
        
        Private cxDescriptionIDField As Integer
        
        Private queryVersionCodeField As Long
        
        Private engineMetadataField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property QueryId() As Long
            Get
                Return Me.queryIdField
            End Get
            Set
                Me.queryIdField = value
                Me.RaisePropertyChanged("QueryId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Source() As String
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
                Me.RaisePropertyChanged("Source")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Cwe() As Long
            Get
                Return Me.cweField
            End Get
            Set
                Me.cweField = value
                Me.RaisePropertyChanged("Cwe")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property IsExecutable() As Boolean
            Get
                Return Me.isExecutableField
            End Get
            Set
                Me.isExecutableField = value
                Me.RaisePropertyChanged("IsExecutable")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property IsEncrypted() As Boolean
            Get
                Return Me.isEncryptedField
            End Get
            Set
                Me.isEncryptedField = value
                Me.RaisePropertyChanged("IsEncrypted")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property Severity() As Integer
            Get
                Return Me.severityField
            End Get
            Set
                Me.severityField = value
                Me.RaisePropertyChanged("Severity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property PackageId() As Long
            Get
                Return Me.packageIdField
            End Get
            Set
                Me.packageIdField = value
                Me.RaisePropertyChanged("PackageId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property Status() As QueryStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
                Me.RaisePropertyChanged("Status")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property Type() As CxWSQueryType
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
                Me.RaisePropertyChanged("Type")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=10)>  _
        Public Property Categories() As CxQueryCategory()
            Get
                Return Me.categoriesField
            End Get
            Set
                Me.categoriesField = value
                Me.RaisePropertyChanged("Categories")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property CxDescriptionID() As Integer
            Get
                Return Me.cxDescriptionIDField
            End Get
            Set
                Me.cxDescriptionIDField = value
                Me.RaisePropertyChanged("CxDescriptionID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property QueryVersionCode() As Long
            Get
                Return Me.queryVersionCodeField
            End Get
            Set
                Me.queryVersionCodeField = value
                Me.RaisePropertyChanged("QueryVersionCode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property EngineMetadata() As String
            Get
                Return Me.engineMetadataField
            End Get
            Set
                Me.engineMetadataField = value
                Me.RaisePropertyChanged("EngineMetadata")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum QueryStatus
        
        '''<remarks/>
        Original
        
        '''<remarks/>
        [New]
        
        '''<remarks/>
        Edited
        
        '''<remarks/>
        Deleted
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSQueryType
        
        '''<remarks/>
        Draft
        
        '''<remarks/>
        Regular
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSQueryGroup
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private nameField As String
        
        Private impactsField() As Integer
        
        Private packageIdField As Long
        
        Private queriesField() As CxWSQuery
        
        Private isReadOnlyField As Boolean
        
        Private isEncryptedField As Boolean
        
        Private descriptionField As String
        
        Private languageField As Integer
        
        Private languageNameField As String
        
        Private packageTypeNameField As String
        
        Private projectIdField As Long
        
        Private packageTypeField As CxWSPackageTypeEnum
        
        Private packageFullNameField As String
        
        Private owningTeamField As System.Guid
        
        Private statusField As QueryStatus
        
        Private languageStateHashField As String
        
        Private languageStateDateField As Date
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property Impacts() As Integer()
            Get
                Return Me.impactsField
            End Get
            Set
                Me.impactsField = value
                Me.RaisePropertyChanged("Impacts")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property PackageId() As Long
            Get
                Return Me.packageIdField
            End Get
            Set
                Me.packageIdField = value
                Me.RaisePropertyChanged("PackageId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=3)>  _
        Public Property Queries() As CxWSQuery()
            Get
                Return Me.queriesField
            End Get
            Set
                Me.queriesField = value
                Me.RaisePropertyChanged("Queries")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property IsReadOnly() As Boolean
            Get
                Return Me.isReadOnlyField
            End Get
            Set
                Me.isReadOnlyField = value
                Me.RaisePropertyChanged("IsReadOnly")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property IsEncrypted() As Boolean
            Get
                Return Me.isEncryptedField
            End Get
            Set
                Me.isEncryptedField = value
                Me.RaisePropertyChanged("IsEncrypted")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
                Me.RaisePropertyChanged("Description")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property Language() As Integer
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
                Me.RaisePropertyChanged("Language")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property LanguageName() As String
            Get
                Return Me.languageNameField
            End Get
            Set
                Me.languageNameField = value
                Me.RaisePropertyChanged("LanguageName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property PackageTypeName() As String
            Get
                Return Me.packageTypeNameField
            End Get
            Set
                Me.packageTypeNameField = value
                Me.RaisePropertyChanged("PackageTypeName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property ProjectId() As Long
            Get
                Return Me.projectIdField
            End Get
            Set
                Me.projectIdField = value
                Me.RaisePropertyChanged("ProjectId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property PackageType() As CxWSPackageTypeEnum
            Get
                Return Me.packageTypeField
            End Get
            Set
                Me.packageTypeField = value
                Me.RaisePropertyChanged("PackageType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property PackageFullName() As String
            Get
                Return Me.packageFullNameField
            End Get
            Set
                Me.packageFullNameField = value
                Me.RaisePropertyChanged("PackageFullName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property OwningTeam() As System.Guid
            Get
                Return Me.owningTeamField
            End Get
            Set
                Me.owningTeamField = value
                Me.RaisePropertyChanged("OwningTeam")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property Status() As QueryStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
                Me.RaisePropertyChanged("Status")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property LanguageStateHash() As String
            Get
                Return Me.languageStateHashField
            End Get
            Set
                Me.languageStateHashField = value
                Me.RaisePropertyChanged("LanguageStateHash")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=16)>  _
        Public Property LanguageStateDate() As Date
            Get
                Return Me.languageStateDateField
            End Get
            Set
                Me.languageStateDateField = value
                Me.RaisePropertyChanged("LanguageStateDate")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSPackageTypeEnum
        
        '''<remarks/>
        Cx
        
        '''<remarks/>
        Corporate
        
        '''<remarks/>
        Project
        
        '''<remarks/>
        Team
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class Preset
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private presetNameField As String
        
        Private idField As Long
        
        Private owningUserField As String
        
        Private isUserAllowToUpdateField As Boolean
        
        Private isUserAllowToDeleteField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PresetName() As String
            Get
                Return Me.presetNameField
            End Get
            Set
                Me.presetNameField = value
                Me.RaisePropertyChanged("PresetName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property owningUser() As String
            Get
                Return Me.owningUserField
            End Get
            Set
                Me.owningUserField = value
                Me.RaisePropertyChanged("owningUser")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property isUserAllowToUpdate() As Boolean
            Get
                Return Me.isUserAllowToUpdateField
            End Get
            Set
                Me.isUserAllowToUpdateField = value
                Me.RaisePropertyChanged("isUserAllowToUpdate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property isUserAllowToDelete() As Boolean
            Get
                Return Me.isUserAllowToDeleteField
            End Get
            Set
                Me.isUserAllowToDeleteField = value
                Me.RaisePropertyChanged("isUserAllowToDelete")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class InstallationSetting
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private nameField As String
        
        Private idField As String
        
        Private dNSNameField As String
        
        Private ipField As String
        
        Private stateField As String
        
        Private versionField As String
        
        Private hotfixField As String
        
        Private instllationPathField As String
        
        Private isInstalledField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property DNSName() As String
            Get
                Return Me.dNSNameField
            End Get
            Set
                Me.dNSNameField = value
                Me.RaisePropertyChanged("DNSName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property IP() As String
            Get
                Return Me.ipField
            End Get
            Set
                Me.ipField = value
                Me.RaisePropertyChanged("IP")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
                Me.RaisePropertyChanged("State")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Version() As String
            Get
                Return Me.versionField
            End Get
            Set
                Me.versionField = value
                Me.RaisePropertyChanged("Version")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property Hotfix() As String
            Get
                Return Me.hotfixField
            End Get
            Set
                Me.hotfixField = value
                Me.RaisePropertyChanged("Hotfix")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property InstllationPath() As String
            Get
                Return Me.instllationPathField
            End Get
            Set
                Me.instllationPathField = value
                Me.RaisePropertyChanged("InstllationPath")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property IsInstalled() As Boolean
            Get
                Return Me.isInstalledField
            End Get
            Set
                Me.isInstalledField = value
                Me.RaisePropertyChanged("IsInstalled")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxPredefinedCommand
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private nameField As String
        
        Private commandField As String
        
        Private commandTypeField As CxPredefinedCommandType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Command() As String
            Get
                Return Me.commandField
            End Get
            Set
                Me.commandField = value
                Me.RaisePropertyChanged("Command")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property CommandType() As CxPredefinedCommandType
            Get
                Return Me.commandTypeField
            End Get
            Set
                Me.commandTypeField = value
                Me.RaisePropertyChanged("CommandType")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxPredefinedCommandType
        
        '''<remarks/>
        SourceControlCommand
        
        '''<remarks/>
        PostScan
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class SystemSettings
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private reportFolderField As String
        
        Private resultFolderField As String
        
        Private executablesFolderField As String
        
        Private sMTPHostField As String
        
        Private sMTPPortField As Integer
        
        Private eMailFromAddressField As String
        
        Private sMTPUserNameField As String
        
        Private sMTPPasswordField As String
        
        Private sMTPUseDefaultCredentialsField As Boolean
        
        Private smtpOverSslField As Boolean
        
        Private sMTPEncryptionField As String
        
        Private maxScansField As Integer
        
        Private completedScanShowTimeInMinField As Integer
        
        Private commandsField() As CxPredefinedCommand
        
        Private webServerField As String
        
        Private defaultLanguageField As Integer
        
        Private allowAutoSignInField As Boolean
        
        Private defaultGitHubEventThresholdField As Integer
        
        Private notifyLicenseExpirationField As Boolean
        
        Private gitExePathField As String
        
        Private perforceExePathField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ReportFolder() As String
            Get
                Return Me.reportFolderField
            End Get
            Set
                Me.reportFolderField = value
                Me.RaisePropertyChanged("ReportFolder")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ResultFolder() As String
            Get
                Return Me.resultFolderField
            End Get
            Set
                Me.resultFolderField = value
                Me.RaisePropertyChanged("ResultFolder")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ExecutablesFolder() As String
            Get
                Return Me.executablesFolderField
            End Get
            Set
                Me.executablesFolderField = value
                Me.RaisePropertyChanged("ExecutablesFolder")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property SMTPHost() As String
            Get
                Return Me.sMTPHostField
            End Get
            Set
                Me.sMTPHostField = value
                Me.RaisePropertyChanged("SMTPHost")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property SMTPPort() As Integer
            Get
                Return Me.sMTPPortField
            End Get
            Set
                Me.sMTPPortField = value
                Me.RaisePropertyChanged("SMTPPort")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property EMailFromAddress() As String
            Get
                Return Me.eMailFromAddressField
            End Get
            Set
                Me.eMailFromAddressField = value
                Me.RaisePropertyChanged("EMailFromAddress")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property SMTPUserName() As String
            Get
                Return Me.sMTPUserNameField
            End Get
            Set
                Me.sMTPUserNameField = value
                Me.RaisePropertyChanged("SMTPUserName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property SMTPPassword() As String
            Get
                Return Me.sMTPPasswordField
            End Get
            Set
                Me.sMTPPasswordField = value
                Me.RaisePropertyChanged("SMTPPassword")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property SMTPUseDefaultCredentials() As Boolean
            Get
                Return Me.sMTPUseDefaultCredentialsField
            End Get
            Set
                Me.sMTPUseDefaultCredentialsField = value
                Me.RaisePropertyChanged("SMTPUseDefaultCredentials")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property SmtpOverSsl() As Boolean
            Get
                Return Me.smtpOverSslField
            End Get
            Set
                Me.smtpOverSslField = value
                Me.RaisePropertyChanged("SmtpOverSsl")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property SMTPEncryption() As String
            Get
                Return Me.sMTPEncryptionField
            End Get
            Set
                Me.sMTPEncryptionField = value
                Me.RaisePropertyChanged("SMTPEncryption")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property MaxScans() As Integer
            Get
                Return Me.maxScansField
            End Get
            Set
                Me.maxScansField = value
                Me.RaisePropertyChanged("MaxScans")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property CompletedScanShowTimeInMin() As Integer
            Get
                Return Me.completedScanShowTimeInMinField
            End Get
            Set
                Me.completedScanShowTimeInMinField = value
                Me.RaisePropertyChanged("CompletedScanShowTimeInMin")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=13)>  _
        Public Property commands() As CxPredefinedCommand()
            Get
                Return Me.commandsField
            End Get
            Set
                Me.commandsField = value
                Me.RaisePropertyChanged("commands")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property WebServer() As String
            Get
                Return Me.webServerField
            End Get
            Set
                Me.webServerField = value
                Me.RaisePropertyChanged("WebServer")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property DefaultLanguage() As Integer
            Get
                Return Me.defaultLanguageField
            End Get
            Set
                Me.defaultLanguageField = value
                Me.RaisePropertyChanged("DefaultLanguage")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=16)>  _
        Public Property AllowAutoSignIn() As Boolean
            Get
                Return Me.allowAutoSignInField
            End Get
            Set
                Me.allowAutoSignInField = value
                Me.RaisePropertyChanged("AllowAutoSignIn")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=17)>  _
        Public Property DefaultGitHubEventThreshold() As Integer
            Get
                Return Me.defaultGitHubEventThresholdField
            End Get
            Set
                Me.defaultGitHubEventThresholdField = value
                Me.RaisePropertyChanged("DefaultGitHubEventThreshold")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=18)>  _
        Public Property NotifyLicenseExpiration() As Boolean
            Get
                Return Me.notifyLicenseExpirationField
            End Get
            Set
                Me.notifyLicenseExpirationField = value
                Me.RaisePropertyChanged("NotifyLicenseExpiration")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=19)>  _
        Public Property GitExePath() As String
            Get
                Return Me.gitExePathField
            End Get
            Set
                Me.gitExePathField = value
                Me.RaisePropertyChanged("GitExePath")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=20)>  _
        Public Property PerforceExePath() As String
            Get
                Return Me.perforceExePathField
            End Get
            Set
                Me.perforceExePathField = value
                Me.RaisePropertyChanged("PerforceExePath")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class SystemLanguage
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private languageLCIDField As Integer
        
        Private isDefaultField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property languageLCID() As Integer
            Get
                Return Me.languageLCIDField
            End Get
            Set
                Me.languageLCIDField = value
                Me.RaisePropertyChanged("languageLCID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property isDefault() As Boolean
            Get
                Return Me.isDefaultField
            End Get
            Set
                Me.isDefaultField = value
                Me.RaisePropertyChanged("isDefault")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class SupportedLanguage
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private languageField As String
        
        Private isSupportedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property language() As String
            Get
                Return Me.languageField
            End Get
            Set
                Me.languageField = value
                Me.RaisePropertyChanged("language")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property isSupported() As Boolean
            Get
                Return Me.isSupportedField
            End Get
            Set
                Me.isSupportedField = value
                Me.RaisePropertyChanged("isSupported")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxPermission
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As Long
        
        Private viewPreScanActionsField As Boolean
        
        Private viewPostScanActionsField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ViewPreScanActions() As Boolean
            Get
                Return Me.viewPreScanActionsField
            End Get
            Set
                Me.viewPreScanActionsField = value
                Me.RaisePropertyChanged("ViewPreScanActions")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ViewPostScanActions() As Boolean
            Get
                Return Me.viewPostScanActionsField
            End Get
            Set
                Me.viewPostScanActionsField = value
                Me.RaisePropertyChanged("ViewPostScanActions")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSLdapGroup
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private dnField As String
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property DN() As String
            Get
                Return Me.dnField
            End Get
            Set
                Me.dnField = value
                Me.RaisePropertyChanged("DN")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSLdapGroupMapping
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private ldapServerIdField As Integer
        
        Private ldapGroupField As CxWSLdapGroup
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property LdapServerId() As Integer
            Get
                Return Me.ldapServerIdField
            End Get
            Set
                Me.ldapServerIdField = value
                Me.RaisePropertyChanged("LdapServerId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property LdapGroup() As CxWSLdapGroup
            Get
                Return Me.ldapGroupField
            End Get
            Set
                Me.ldapGroupField = value
                Me.RaisePropertyChanged("LdapGroup")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class TeamData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private teamField As Group
        
        Private companyField As Group
        
        Private serviceProviderField As Group
        
        Private ldapGroupMappingsField() As CxWSLdapGroupMapping
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Team() As Group
            Get
                Return Me.teamField
            End Get
            Set
                Me.teamField = value
                Me.RaisePropertyChanged("Team")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Company() As Group
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
                Me.RaisePropertyChanged("Company")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ServiceProvider() As Group
            Get
                Return Me.serviceProviderField
            End Get
            Set
                Me.serviceProviderField = value
                Me.RaisePropertyChanged("ServiceProvider")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=3)>  _
        Public Property LdapGroupMappings() As CxWSLdapGroupMapping()
            Get
                Return Me.ldapGroupMappingsField
            End Get
            Set
                Me.ldapGroupMappingsField = value
                Me.RaisePropertyChanged("LdapGroupMappings")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseDomainUserList
        Inherits CxWSBasicRepsonse
        
        Private userListField() As CxDomainUser
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property UserList() As CxDomainUser()
            Get
                Return Me.userListField
            End Get
            Set
                Me.userListField = value
                Me.RaisePropertyChanged("UserList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseUserDirectories
        Inherits CxWSBasicRepsonse
        
        Private domainsField() As CxWSActiveDirectoryDomainDetails
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Domains() As CxWSActiveDirectoryDomainDetails()
            Get
                Return Me.domainsField
            End Get
            Set
                Me.domainsField = value
                Me.RaisePropertyChanged("Domains")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseHierarchyGroupNodes
        Inherits CxWSBasicRepsonse
        
        Private hierarchyGroupNodesField() As HierarchyGroupNode
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property HierarchyGroupNodes() As HierarchyGroupNode()
            Get
                Return Me.hierarchyGroupNodesField
            End Get
            Set
                Me.hierarchyGroupNodesField = value
                Me.RaisePropertyChanged("HierarchyGroupNodes")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseSingleUserData
        Inherits CxWSBasicRepsonse
        
        Private userDataField As UserData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property UserData() As UserData
            Get
                Return Me.userDataField
            End Get
            Set
                Me.userDataField = value
                Me.RaisePropertyChanged("UserData")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseProfileData
        Inherits CxWSBasicRepsonse
        
        Private profileDataField As ProfileData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ProfileData() As ProfileData
            Get
                Return Me.profileDataField
            End Get
            Set
                Me.profileDataField = value
                Me.RaisePropertyChanged("ProfileData")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponsePendingUsersList
        Inherits CxWSBasicRepsonse
        
        Private pendingUsersListField() As WebClientPendingUser
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property pendingUsersList() As WebClientPendingUser()
            Get
                Return Me.pendingUsersListField
            End Get
            Set
                Me.pendingUsersListField = value
                Me.RaisePropertyChanged("pendingUsersList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseResultStateList
        Inherits CxWSBasicRepsonse
        
        Private resultStateListField() As ResultState
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property ResultStateList() As ResultState()
            Get
                Return Me.resultStateListField
            End Get
            Set
                Me.resultStateListField = value
                Me.RaisePropertyChanged("ResultStateList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseSourcesContent
        Inherits CxWSBasicRepsonse
        
        Private cxWSResponseSourcesContentField() As CxWSResponseSourceContent
        
        Private encodeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property cxWSResponseSourcesContent() As CxWSResponseSourceContent()
            Get
                Return Me.cxWSResponseSourcesContentField
            End Get
            Set
                Me.cxWSResponseSourcesContentField = value
                Me.RaisePropertyChanged("cxWSResponseSourcesContent")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Encode() As String
            Get
                Return Me.encodeField
            End Get
            Set
                Me.encodeField = value
                Me.RaisePropertyChanged("Encode")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseSourceContent
        Inherits CxWSBasicRepsonse
        
        Private sourceField As String
        
        Private encodeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Source() As String
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
                Me.RaisePropertyChanged("Source")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Encode() As String
            Get
                Return Me.encodeField
            End Get
            Set
                Me.encodeField = value
                Me.RaisePropertyChanged("Encode")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseResultDescription
        Inherits CxWSBasicRepsonse
        
        Private resultDescriptionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ResultDescription() As String
            Get
                Return Me.resultDescriptionField
            End Get
            Set
                Me.resultDescriptionField = value
                Me.RaisePropertyChanged("ResultDescription")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseQueryDescription
        Inherits CxWSBasicRepsonse
        
        Private queryDescriptionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property QueryDescription() As String
            Get
                Return Me.queryDescriptionField
            End Get
            Set
                Me.queryDescriptionField = value
                Me.RaisePropertyChanged("QueryDescription")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseDeleteScans
        Inherits CxWSBasicRepsonse
        
        Private isConfirmationField As Boolean
        
        Private flagsField As DeleteFlags
        
        Private undeletedScansField() As UndeletedObject
        
        Private numOfDeletedScansField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property IsConfirmation() As Boolean
            Get
                Return Me.isConfirmationField
            End Get
            Set
                Me.isConfirmationField = value
                Me.RaisePropertyChanged("IsConfirmation")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Flags() As DeleteFlags
            Get
                Return Me.flagsField
            End Get
            Set
                Me.flagsField = value
                Me.RaisePropertyChanged("Flags")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=2)>  _
        Public Property UndeletedScans() As UndeletedObject()
            Get
                Return Me.undeletedScansField
            End Get
            Set
                Me.undeletedScansField = value
                Me.RaisePropertyChanged("UndeletedScans")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property NumOfDeletedScans() As Integer
            Get
                Return Me.numOfDeletedScansField
            End Get
            Set
                Me.numOfDeletedScansField = value
                Me.RaisePropertyChanged("NumOfDeletedScans")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseScanLog
        Inherits CxWSBasicRepsonse
        
        Private scanLogField() As Byte
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", Order:=0)>  _
        Public Property ScanLog() As Byte()
            Get
                Return Me.scanLogField
            End Get
            Set
                Me.scanLogField = value
                Me.RaisePropertyChanged("ScanLog")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponceScanCompareResults
        Inherits CxWSBasicRepsonse
        
        Private resultsField() As CxWSSingleResultCompareData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Results() As CxWSSingleResultCompareData()
            Get
                Return Me.resultsField
            End Get
            Set
                Me.resultsField = value
                Me.RaisePropertyChanged("Results")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseScanCompareSummary
        Inherits CxWSBasicRepsonse
        
        Private totalField As CxWsScanCompareCount
        
        Private highField As CxWsScanCompareCount
        
        Private mediumField As CxWsScanCompareCount
        
        Private lowField As CxWsScanCompareCount
        
        Private infoField As CxWsScanCompareCount
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Total() As CxWsScanCompareCount
            Get
                Return Me.totalField
            End Get
            Set
                Me.totalField = value
                Me.RaisePropertyChanged("Total")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property High() As CxWsScanCompareCount
            Get
                Return Me.highField
            End Get
            Set
                Me.highField = value
                Me.RaisePropertyChanged("High")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Medium() As CxWsScanCompareCount
            Get
                Return Me.mediumField
            End Get
            Set
                Me.mediumField = value
                Me.RaisePropertyChanged("Medium")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Low() As CxWsScanCompareCount
            Get
                Return Me.lowField
            End Get
            Set
                Me.lowField = value
                Me.RaisePropertyChanged("Low")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Info() As CxWsScanCompareCount
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
                Me.RaisePropertyChanged("Info")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseScanSummaryExtended)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseScanSummary
        Inherits CxWSBasicRepsonse
        
        Private startedField As CxDateTime
        
        Private finishedField As CxDateTime
        
        Private scanRiskField As Integer
        
        Private presetField As String
        
        Private pathField As String
        
        Private commentField As String
        
        Private lOCField As Long
        
        Private filesCountField As Long
        
        Private highField As Integer
        
        Private mediumField As Integer
        
        Private lowField As Integer
        
        Private infoField As Integer
        
        Private scanRiskSeverityField As Integer
        
        Private scanRiskQuantityField As Integer
        
        Private isIncrementalField As Boolean
        
        Private scanTypeField As ScanType
        
        Private scanLanguageStateCollectionField() As CxWSQueryLanguageState
        
        Private engineStartField As CxDateTime
        
        Private engineFinishField As CxDateTime
        
        Private scanQueuedField As CxDateTime
        
        Private totalScanTimeField As Long
        
        Private statisticsCalculationDateField As CxDateTime
        
        Private projectNameField As String
        
        Private teamNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Started() As CxDateTime
            Get
                Return Me.startedField
            End Get
            Set
                Me.startedField = value
                Me.RaisePropertyChanged("Started")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Finished() As CxDateTime
            Get
                Return Me.finishedField
            End Get
            Set
                Me.finishedField = value
                Me.RaisePropertyChanged("Finished")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property ScanRisk() As Integer
            Get
                Return Me.scanRiskField
            End Get
            Set
                Me.scanRiskField = value
                Me.RaisePropertyChanged("ScanRisk")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Preset() As String
            Get
                Return Me.presetField
            End Get
            Set
                Me.presetField = value
                Me.RaisePropertyChanged("Preset")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Path() As String
            Get
                Return Me.pathField
            End Get
            Set
                Me.pathField = value
                Me.RaisePropertyChanged("Path")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
                Me.RaisePropertyChanged("Comment")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property LOC() As Long
            Get
                Return Me.lOCField
            End Get
            Set
                Me.lOCField = value
                Me.RaisePropertyChanged("LOC")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property FilesCount() As Long
            Get
                Return Me.filesCountField
            End Get
            Set
                Me.filesCountField = value
                Me.RaisePropertyChanged("FilesCount")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property High() As Integer
            Get
                Return Me.highField
            End Get
            Set
                Me.highField = value
                Me.RaisePropertyChanged("High")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property Medium() As Integer
            Get
                Return Me.mediumField
            End Get
            Set
                Me.mediumField = value
                Me.RaisePropertyChanged("Medium")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property Low() As Integer
            Get
                Return Me.lowField
            End Get
            Set
                Me.lowField = value
                Me.RaisePropertyChanged("Low")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property Info() As Integer
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
                Me.RaisePropertyChanged("Info")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property ScanRiskSeverity() As Integer
            Get
                Return Me.scanRiskSeverityField
            End Get
            Set
                Me.scanRiskSeverityField = value
                Me.RaisePropertyChanged("ScanRiskSeverity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property ScanRiskQuantity() As Integer
            Get
                Return Me.scanRiskQuantityField
            End Get
            Set
                Me.scanRiskQuantityField = value
                Me.RaisePropertyChanged("ScanRiskQuantity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property IsIncremental() As Boolean
            Get
                Return Me.isIncrementalField
            End Get
            Set
                Me.isIncrementalField = value
                Me.RaisePropertyChanged("IsIncremental")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property ScanType() As ScanType
            Get
                Return Me.scanTypeField
            End Get
            Set
                Me.scanTypeField = value
                Me.RaisePropertyChanged("ScanType")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=16)>  _
        Public Property ScanLanguageStateCollection() As CxWSQueryLanguageState()
            Get
                Return Me.scanLanguageStateCollectionField
            End Get
            Set
                Me.scanLanguageStateCollectionField = value
                Me.RaisePropertyChanged("ScanLanguageStateCollection")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=17)>  _
        Public Property EngineStart() As CxDateTime
            Get
                Return Me.engineStartField
            End Get
            Set
                Me.engineStartField = value
                Me.RaisePropertyChanged("EngineStart")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=18)>  _
        Public Property EngineFinish() As CxDateTime
            Get
                Return Me.engineFinishField
            End Get
            Set
                Me.engineFinishField = value
                Me.RaisePropertyChanged("EngineFinish")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=19)>  _
        Public Property ScanQueued() As CxDateTime
            Get
                Return Me.scanQueuedField
            End Get
            Set
                Me.scanQueuedField = value
                Me.RaisePropertyChanged("ScanQueued")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=20)>  _
        Public Property TotalScanTime() As Long
            Get
                Return Me.totalScanTimeField
            End Get
            Set
                Me.totalScanTimeField = value
                Me.RaisePropertyChanged("TotalScanTime")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=21)>  _
        Public Property StatisticsCalculationDate() As CxDateTime
            Get
                Return Me.statisticsCalculationDateField
            End Get
            Set
                Me.statisticsCalculationDateField = value
                Me.RaisePropertyChanged("StatisticsCalculationDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=22)>  _
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
                Me.RaisePropertyChanged("ProjectName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=23)>  _
        Public Property TeamName() As String
            Get
                Return Me.teamNameField
            End Get
            Set
                Me.teamNameField = value
                Me.RaisePropertyChanged("TeamName")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseScanSummaryExtended
        Inherits CxWSResponseScanSummary
        
        Private scanCompletedStatusField As ScanCompletedStatus
        
        Private partialSASTScansField() As PartialSASTScansDTO
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ScanCompletedStatus() As ScanCompletedStatus
            Get
                Return Me.scanCompletedStatusField
            End Get
            Set
                Me.scanCompletedStatusField = value
                Me.RaisePropertyChanged("ScanCompletedStatus")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property PartialSASTScans() As PartialSASTScansDTO()
            Get
                Return Me.partialSASTScansField
            End Get
            Set
                Me.partialSASTScansField = value
                Me.RaisePropertyChanged("PartialSASTScans")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseScansDisplayExtendedData
        Inherits CxWSBasicRepsonse
        
        Private pageCountField As Long
        
        Private scanListField() As ScanDisplayDataExtended
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PageCount() As Long
            Get
                Return Me.pageCountField
            End Get
            Set
                Me.pageCountField = value
                Me.RaisePropertyChanged("PageCount")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property ScanList() As ScanDisplayDataExtended()
            Get
                Return Me.scanListField
            End Get
            Set
                Me.scanListField = value
                Me.RaisePropertyChanged("ScanList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseScanProperties
        Inherits CxWSBasicRepsonse
        
        Private top5VulnesField() As Vulerability
        
        Private scanRiskParamsField As ScanRiskLevel
        
        Private commentField As String
        
        Private statisticsCalculationDateField As CxDateTime
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Top5Vulnes() As Vulerability()
            Get
                Return Me.top5VulnesField
            End Get
            Set
                Me.top5VulnesField = value
                Me.RaisePropertyChanged("Top5Vulnes")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ScanRiskParams() As ScanRiskLevel
            Get
                Return Me.scanRiskParamsField
            End Get
            Set
                Me.scanRiskParamsField = value
                Me.RaisePropertyChanged("ScanRiskParams")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property Comment() As String
            Get
                Return Me.commentField
            End Get
            Set
                Me.commentField = value
                Me.RaisePropertyChanged("Comment")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property StatisticsCalculationDate() As CxDateTime
            Get
                Return Me.statisticsCalculationDateField
            End Get
            Set
                Me.statisticsCalculationDateField = value
                Me.RaisePropertyChanged("StatisticsCalculationDate")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseScansDisplayData
        Inherits CxWSBasicRepsonse
        
        Private scanListField() As ScanDisplayData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property ScanList() As ScanDisplayData()
            Get
                Return Me.scanListField
            End Get
            Set
                Me.scanListField = value
                Me.RaisePropertyChanged("ScanList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseDeleteProjects
        Inherits CxWSBasicRepsonse
        
        Private isConfirmationField As Boolean
        
        Private flagsField As DeleteFlags
        
        Private undeletedProjectsField() As UndeletedObject
        
        Private numOfDeletedProjectsField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property IsConfirmation() As Boolean
            Get
                Return Me.isConfirmationField
            End Get
            Set
                Me.isConfirmationField = value
                Me.RaisePropertyChanged("IsConfirmation")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Flags() As DeleteFlags
            Get
                Return Me.flagsField
            End Get
            Set
                Me.flagsField = value
                Me.RaisePropertyChanged("Flags")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=2)>  _
        Public Property UndeletedProjects() As UndeletedObject()
            Get
                Return Me.undeletedProjectsField
            End Get
            Set
                Me.undeletedProjectsField = value
                Me.RaisePropertyChanged("UndeletedProjects")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property NumOfDeletedProjects() As Integer
            Get
                Return Me.numOfDeletedProjectsField
            End Get
            Set
                Me.numOfDeletedProjectsField = value
                Me.RaisePropertyChanged("NumOfDeletedProjects")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseResultStateUpdate
        Inherits CxWSBasicRepsonse
        
        Private pathInfluenceExistsField As Boolean
        
        Private updatedResultStateField As Boolean
        
        Private influencedPathsDetailsField() As CxWSResultPathDisplayDetails
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PathInfluenceExists() As Boolean
            Get
                Return Me.pathInfluenceExistsField
            End Get
            Set
                Me.pathInfluenceExistsField = value
                Me.RaisePropertyChanged("PathInfluenceExists")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property UpdatedResultState() As Boolean
            Get
                Return Me.updatedResultStateField
            End Get
            Set
                Me.updatedResultStateField = value
                Me.RaisePropertyChanged("UpdatedResultState")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=2)>  _
        Public Property InfluencedPathsDetails() As CxWSResultPathDisplayDetails()
            Get
                Return Me.influencedPathsDetailsField
            End Get
            Set
                Me.influencedPathsDetailsField = value
                Me.RaisePropertyChanged("InfluencedPathsDetails")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponsProjectChartData
        Inherits CxWSBasicRepsonse
        
        Private scansRiskLevelListField() As ProjectScansRiskLevel
        
        Private scanResultSummaryListField() As ProjectScansResultSummary
        
        Private lastStatisticsCalcDateField As CxDateTime
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property ScansRiskLevelList() As ProjectScansRiskLevel()
            Get
                Return Me.scansRiskLevelListField
            End Get
            Set
                Me.scansRiskLevelListField = value
                Me.RaisePropertyChanged("ScansRiskLevelList")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property ScanResultSummaryList() As ProjectScansResultSummary()
            Get
                Return Me.scanResultSummaryListField
            End Get
            Set
                Me.scanResultSummaryListField = value
                Me.RaisePropertyChanged("ScanResultSummaryList")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property LastStatisticsCalcDate() As CxDateTime
            Get
                Return Me.lastStatisticsCalcDateField
            End Get
            Set
                Me.lastStatisticsCalcDateField = value
                Me.RaisePropertyChanged("LastStatisticsCalcDate")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponsProjectProperties
        Inherits CxWSBasicRepsonse
        
        Private projectConfigField As CxWSResponseProjectConfig
        
        Private projectChartDataField As CxWSResponsProjectChartData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ProjectConfig() As CxWSResponseProjectConfig
            Get
                Return Me.projectConfigField
            End Get
            Set
                Me.projectConfigField = value
                Me.RaisePropertyChanged("ProjectConfig")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ProjectChartData() As CxWSResponsProjectChartData
            Get
                Return Me.projectChartDataField
            End Get
            Set
                Me.projectChartDataField = value
                Me.RaisePropertyChanged("ProjectChartData")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseProjectConfig
        Inherits CxWSBasicRepsonse
        
        Private projectConfigField As ProjectConfiguration
        
        Private permissionField As UserPermission
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ProjectConfig() As ProjectConfiguration
            Get
                Return Me.projectConfigField
            End Get
            Set
                Me.projectConfigField = value
                Me.RaisePropertyChanged("ProjectConfig")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Permission() As UserPermission
            Get
                Return Me.permissionField
            End Get
            Set
                Me.permissionField = value
                Me.RaisePropertyChanged("Permission")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseProjectsDisplayData
        Inherits CxWSBasicRepsonse
        
        Private projectListField() As ProjectDisplayData
        
        Private pageCountField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property projectList() As ProjectDisplayData()
            Get
                Return Me.projectListField
            End Get
            Set
                Me.projectListField = value
                Me.RaisePropertyChanged("projectList")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property PageCount() As Long
            Get
                Return Me.pageCountField
            End Get
            Set
                Me.pageCountField = value
                Me.RaisePropertyChanged("PageCount")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseProjectsData
        Inherits CxWSBasicRepsonse
        
        Private projectsListField() As CxProjectData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property ProjectsList() As CxProjectData()
            Get
                Return Me.projectsListField
            End Get
            Set
                Me.projectsListField = value
                Me.RaisePropertyChanged("ProjectsList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseQueueRunID
        Inherits CxWSBasicRepsonse
        
        Private runIdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property RunId() As String
            Get
                Return Me.runIdField
            End Get
            Set
                Me.runIdField = value
                Me.RaisePropertyChanged("RunId")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseExtendedScanStatusArray
        Inherits CxWSBasicRepsonse
        
        Private statusArrField() As CxWSResponseExtendedScanStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property statusArr() As CxWSResponseExtendedScanStatus()
            Get
                Return Me.statusArrField
            End Get
            Set
                Me.statusArrField = value
                Me.RaisePropertyChanged("statusArr")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseExtendedScanStatus
        Inherits CxWSResponseScanStatus
        
        Private isIncrementalField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property IsIncremental() As Boolean
            Get
                Return Me.isIncrementalField
            End Get
            Set
                Me.isIncrementalField = value
                Me.RaisePropertyChanged("IsIncremental")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseExtendedScanStatus)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseScanStatus
        Inherits CxWSBasicRepsonse
        
        Private currentStageField As Integer
        
        Private queuePositionField As Integer
        
        Private totalPercentField As Integer
        
        Private currentStagePercentField As Integer
        
        Private ownerField As String
        
        Private stageNameField As String
        
        Private stageMessageField As String
        
        Private stepMessageField As String
        
        Private stepDetailsField As String
        
        Private resultIdField As Long
        
        Private scanIdField As Long
        
        Private projectIdField As Long
        
        Private taskIdField As Long
        
        Private taskNameField As String
        
        Private projectNameField As String
        
        Private runIdField As String
        
        Private sourceIdField As String
        
        Private lOCField As Long
        
        Private timeScheduledField As CxDateTime
        
        Private elapsedTimeField As CxDateTime
        
        Private timeFinishedField As CxDateTime
        
        Private timeBeginWorkingField As CxDateTime
        
        Private currentStatusField As CurrentStatusEnum
        
        Private serverNameField As String
        
        Private originField As String
        
        Private isPublicField As Boolean
        
        Private partialResultsField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property CurrentStage() As Integer
            Get
                Return Me.currentStageField
            End Get
            Set
                Me.currentStageField = value
                Me.RaisePropertyChanged("CurrentStage")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property QueuePosition() As Integer
            Get
                Return Me.queuePositionField
            End Get
            Set
                Me.queuePositionField = value
                Me.RaisePropertyChanged("QueuePosition")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property TotalPercent() As Integer
            Get
                Return Me.totalPercentField
            End Get
            Set
                Me.totalPercentField = value
                Me.RaisePropertyChanged("TotalPercent")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property CurrentStagePercent() As Integer
            Get
                Return Me.currentStagePercentField
            End Get
            Set
                Me.currentStagePercentField = value
                Me.RaisePropertyChanged("CurrentStagePercent")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property Owner() As String
            Get
                Return Me.ownerField
            End Get
            Set
                Me.ownerField = value
                Me.RaisePropertyChanged("Owner")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property StageName() As String
            Get
                Return Me.stageNameField
            End Get
            Set
                Me.stageNameField = value
                Me.RaisePropertyChanged("StageName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property StageMessage() As String
            Get
                Return Me.stageMessageField
            End Get
            Set
                Me.stageMessageField = value
                Me.RaisePropertyChanged("StageMessage")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property StepMessage() As String
            Get
                Return Me.stepMessageField
            End Get
            Set
                Me.stepMessageField = value
                Me.RaisePropertyChanged("StepMessage")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property StepDetails() As String
            Get
                Return Me.stepDetailsField
            End Get
            Set
                Me.stepDetailsField = value
                Me.RaisePropertyChanged("StepDetails")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property ResultId() As Long
            Get
                Return Me.resultIdField
            End Get
            Set
                Me.resultIdField = value
                Me.RaisePropertyChanged("ResultId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property ScanId() As Long
            Get
                Return Me.scanIdField
            End Get
            Set
                Me.scanIdField = value
                Me.RaisePropertyChanged("ScanId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property ProjectId() As Long
            Get
                Return Me.projectIdField
            End Get
            Set
                Me.projectIdField = value
                Me.RaisePropertyChanged("ProjectId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property TaskId() As Long
            Get
                Return Me.taskIdField
            End Get
            Set
                Me.taskIdField = value
                Me.RaisePropertyChanged("TaskId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property TaskName() As String
            Get
                Return Me.taskNameField
            End Get
            Set
                Me.taskNameField = value
                Me.RaisePropertyChanged("TaskName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
                Me.RaisePropertyChanged("ProjectName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property RunId() As String
            Get
                Return Me.runIdField
            End Get
            Set
                Me.runIdField = value
                Me.RaisePropertyChanged("RunId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=16)>  _
        Public Property SourceId() As String
            Get
                Return Me.sourceIdField
            End Get
            Set
                Me.sourceIdField = value
                Me.RaisePropertyChanged("SourceId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=17)>  _
        Public Property LOC() As Long
            Get
                Return Me.lOCField
            End Get
            Set
                Me.lOCField = value
                Me.RaisePropertyChanged("LOC")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=18)>  _
        Public Property TimeScheduled() As CxDateTime
            Get
                Return Me.timeScheduledField
            End Get
            Set
                Me.timeScheduledField = value
                Me.RaisePropertyChanged("TimeScheduled")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=19)>  _
        Public Property ElapsedTime() As CxDateTime
            Get
                Return Me.elapsedTimeField
            End Get
            Set
                Me.elapsedTimeField = value
                Me.RaisePropertyChanged("ElapsedTime")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=20)>  _
        Public Property TimeFinished() As CxDateTime
            Get
                Return Me.timeFinishedField
            End Get
            Set
                Me.timeFinishedField = value
                Me.RaisePropertyChanged("TimeFinished")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=21)>  _
        Public Property TimeBeginWorking() As CxDateTime
            Get
                Return Me.timeBeginWorkingField
            End Get
            Set
                Me.timeBeginWorkingField = value
                Me.RaisePropertyChanged("TimeBeginWorking")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=22)>  _
        Public Property CurrentStatus() As CurrentStatusEnum
            Get
                Return Me.currentStatusField
            End Get
            Set
                Me.currentStatusField = value
                Me.RaisePropertyChanged("CurrentStatus")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=23)>  _
        Public Property ServerName() As String
            Get
                Return Me.serverNameField
            End Get
            Set
                Me.serverNameField = value
                Me.RaisePropertyChanged("ServerName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=24)>  _
        Public Property Origin() As String
            Get
                Return Me.originField
            End Get
            Set
                Me.originField = value
                Me.RaisePropertyChanged("Origin")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=25)>  _
        Public Property IsPublic() As Boolean
            Get
                Return Me.isPublicField
            End Get
            Set
                Me.isPublicField = value
                Me.RaisePropertyChanged("IsPublic")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=26)>  _
        Public Property PartialResults() As Boolean
            Get
                Return Me.partialResultsField
            End Get
            Set
                Me.partialResultsField = value
                Me.RaisePropertyChanged("PartialResults")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CurrentStatusEnum
        
        '''<remarks/>
        Queued
        
        '''<remarks/>
        Working
        
        '''<remarks/>
        Finished
        
        '''<remarks/>
        Failed
        
        '''<remarks/>
        Canceled
        
        '''<remarks/>
        Deleted
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        Unzipping
        
        '''<remarks/>
        WaitingToProcess
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseCountLines
        Inherits CxWSBasicRepsonse
        
        Private numOfLinesField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property NumOfLines() As Integer
            Get
                Return Me.numOfLinesField
            End Get
            Set
                Me.numOfLinesField = value
                Me.RaisePropertyChanged("NumOfLines")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseSourceActionList
        Inherits CxWSBasicRepsonse
        
        Private actionListField() As Action
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property ActionList() As Action()
            Get
                Return Me.actionListField
            End Get
            Set
                Me.actionListField = value
                Me.RaisePropertyChanged("ActionList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseFileSystemLayer
        Inherits CxWSBasicRepsonse
        
        Private folderListField() As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property FolderList() As String()
            Get
                Return Me.folderListField
            End Get
            Set
                Me.folderListField = value
                Me.RaisePropertyChanged("FolderList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseConfigSetList
        Inherits CxWSBasicRepsonse
        
        Private configSetListField() As ConfigurationSet
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property ConfigSetList() As ConfigurationSet()
            Get
                Return Me.configSetListField
            End Get
            Set
                Me.configSetListField = value
                Me.RaisePropertyChanged("ConfigSetList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseGroupList
        Inherits CxWSBasicRepsonse
        
        Private groupListField() As Group
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property GroupList() As Group()
            Get
                Return Me.groupListField
            End Get
            Set
                Me.groupListField = value
                Me.RaisePropertyChanged("GroupList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseCache
        Inherits CxWSBasicRepsonse
        
        Private cacheField() As Byte
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", Order:=0)>  _
        Public Property Cache() As Byte()
            Get
                Return Me.cacheField
            End Get
            Set
                Me.cacheField = value
                Me.RaisePropertyChanged("Cache")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CXWSResponseResultSummary
        Inherits CxWSBasicRepsonse
        
        Private summaryListField() As CxWSResultSummary
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property SummaryList() As CxWSResultSummary()
            Get
                Return Me.summaryListField
            End Get
            Set
                Me.summaryListField = value
                Me.RaisePropertyChanged("SummaryList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseResultCollection
        Inherits CxWSBasicRepsonse
        
        Private resultCollectionField As AuditResultsCollection
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ResultCollection() As AuditResultsCollection
            Get
                Return Me.resultCollectionField
            End Get
            Set
                Me.resultCollectionField = value
                Me.RaisePropertyChanged("ResultCollection")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseSourceContainer
        Inherits CxWSBasicRepsonse
        
        Private sourceCodeContainerField As LocalCodeContainer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property sourceCodeContainer() As LocalCodeContainer
            Get
                Return Me.sourceCodeContainerField
            End Get
            Set
                Me.sourceCodeContainerField = value
                Me.RaisePropertyChanged("sourceCodeContainer")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseSourceID
        Inherits CxWSBasicRepsonse
        
        Private projectIDField As Long
        
        Private sourceIDField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ProjectID() As Long
            Get
                Return Me.projectIDField
            End Get
            Set
                Me.projectIDField = value
                Me.RaisePropertyChanged("ProjectID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property SourceID() As String
            Get
                Return Me.sourceIDField
            End Get
            Set
                Me.sourceIDField = value
                Me.RaisePropertyChanged("SourceID")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseProjectsScansList
        Inherits CxWSBasicRepsonse
        
        Private projectsField() As CxWSResponseBasicProjectData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property projects() As CxWSResponseBasicProjectData()
            Get
                Return Me.projectsField
            End Get
            Set
                Me.projectsField = value
                Me.RaisePropertyChanged("projects")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseLicenseExpirationDateDetails
        Inherits CxWSBasicRepsonse
        
        Private licenseExpirationDateField As String
        
        Private shouldDisplayExpirationDateField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property LicenseExpirationDate() As String
            Get
                Return Me.licenseExpirationDateField
            End Get
            Set
                Me.licenseExpirationDateField = value
                Me.RaisePropertyChanged("LicenseExpirationDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property ShouldDisplayExpirationDate() As Boolean
            Get
                Return Me.shouldDisplayExpirationDateField
            End Get
            Set
                Me.shouldDisplayExpirationDateField = value
                Me.RaisePropertyChanged("ShouldDisplayExpirationDate")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSDataRetentionRequestResponse
        Inherits CxWSBasicRepsonse
        
        Private dataRetentionRequestField As CxWSDataRetentionRequest
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property DataRetentionRequest() As CxWSDataRetentionRequest
            Get
                Return Me.dataRetentionRequestField
            End Get
            Set
                Me.dataRetentionRequestField = value
                Me.RaisePropertyChanged("DataRetentionRequest")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSDataRetentionStatusResponse
        Inherits CxWSBasicRepsonse
        
        Private statusField As CxDataRetentionStatus
        
        Private currentProgressField As System.Nullable(Of Integer)
        
        Private totalProgressField As System.Nullable(Of Integer)
        
        Private stageErrorField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Status() As CxDataRetentionStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
                Me.RaisePropertyChanged("Status")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=1)>  _
        Public Property CurrentProgress() As System.Nullable(Of Integer)
            Get
                Return Me.currentProgressField
            End Get
            Set
                Me.currentProgressField = value
                Me.RaisePropertyChanged("CurrentProgress")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=2)>  _
        Public Property TotalProgress() As System.Nullable(Of Integer)
            Get
                Return Me.totalProgressField
            End Get
            Set
                Me.totalProgressField = value
                Me.RaisePropertyChanged("TotalProgress")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property StageError() As String
            Get
                Return Me.stageErrorField
            End Get
            Set
                Me.stageErrorField = value
                Me.RaisePropertyChanged("StageError")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseTeamLdapGroupMappingData
        Inherits CxWSBasicRepsonse
        
        Private teamIdField As String
        
        Private ldapGroupsField() As CxWSLdapGroupMapping
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property TeamId() As String
            Get
                Return Me.teamIdField
            End Get
            Set
                Me.teamIdField = value
                Me.RaisePropertyChanged("TeamId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property LdapGroups() As CxWSLdapGroupMapping()
            Get
                Return Me.ldapGroupsField
            End Get
            Set
                Me.ldapGroupsField = value
                Me.RaisePropertyChanged("LdapGroups")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseLDAPServerGroups
        Inherits CxWSBasicRepsonse
        
        Private groupsField() As CxWSLdapGroup
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Groups() As CxWSLdapGroup()
            Get
                Return Me.groupsField
            End Get
            Set
                Me.groupsField = value
                Me.RaisePropertyChanged("Groups")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseIdNamePairList
        Inherits CxWSBasicRepsonse
        
        Private itemsField() As CxWSIdNamePair
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Items() As CxWSIdNamePair()
            Get
                Return Me.itemsField
            End Get
            Set
                Me.itemsField = value
                Me.RaisePropertyChanged("Items")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseLDAPServersConfiguration
        Inherits CxWSBasicRepsonse
        
        Private serverConfigsField() As CxWSLdapServerConfiguration
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property serverConfigs() As CxWSLdapServerConfiguration()
            Get
                Return Me.serverConfigsField
            End Get
            Set
                Me.serverConfigsField = value
                Me.RaisePropertyChanged("serverConfigs")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseJSONData
        Inherits CxWSBasicRepsonse
        
        Private jSONDataField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property JSONData() As String
            Get
                Return Me.jSONDataField
            End Get
            Set
                Me.jSONDataField = value
                Me.RaisePropertyChanged("JSONData")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseFailedScansDisplayData
        Inherits CxWSBasicRepsonse
        
        Private failedScansListField() As FailedScansDisplayData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property FailedScansList() As FailedScansDisplayData()
            Get
                Return Me.failedScansListField
            End Get
            Set
                Me.failedScansListField = value
                Me.RaisePropertyChanged("FailedScansList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseProjectScannedDisplayData
        Inherits CxWSBasicRepsonse
        
        Private projectScannedListField() As ProjectScannedDisplayData
        
        Private numberRowsField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property ProjectScannedList() As ProjectScannedDisplayData()
            Get
                Return Me.projectScannedListField
            End Get
            Set
                Me.projectScannedListField = value
                Me.RaisePropertyChanged("ProjectScannedList")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property NumberRows() As Long
            Get
                Return Me.numberRowsField
            End Get
            Set
                Me.numberRowsField = value
                Me.RaisePropertyChanged("NumberRows")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxTeamPathsResponseResponse
        Inherits CxWSBasicRepsonse
        
        Private sourceTeamFullPathField As String
        
        Private destinationTeamFullPathField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property sourceTeamFullPath() As String
            Get
                Return Me.sourceTeamFullPathField
            End Get
            Set
                Me.sourceTeamFullPathField = value
                Me.RaisePropertyChanged("sourceTeamFullPath")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property destinationTeamFullPath() As String
            Get
                Return Me.destinationTeamFullPathField
            End Get
            Set
                Me.destinationTeamFullPathField = value
                Me.RaisePropertyChanged("destinationTeamFullPath")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSCxMoveTeamResponse
        Inherits CxWSBasicRepsonse
        
        Private messageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
                Me.RaisePropertyChanged("Message")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSCxVersionResponse
        Inherits CxWSBasicRepsonse
        
        Private versionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Version() As String
            Get
                Return Me.versionField
            End Get
            Set
                Me.versionField = value
                Me.RaisePropertyChanged("Version")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemRetrieveResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemSaveResponse)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSIssueTrackingSystemMetaResponse)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingSystemResponse
        Inherits CxWSBasicRepsonse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingSystemRetrieveResponse
        Inherits CxWSIssueTrackingSystemResponse
        
        Private trackingSystemsField() As CxWSIssueTrackingSystem
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property TrackingSystems() As CxWSIssueTrackingSystem()
            Get
                Return Me.trackingSystemsField
            End Get
            Set
                Me.trackingSystemsField = value
                Me.RaisePropertyChanged("TrackingSystems")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingSystemSaveResponse
        Inherits CxWSIssueTrackingSystemResponse
        
        Private trackingSystemField As CxWSIssueTrackingSystem
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property TrackingSystem() As CxWSIssueTrackingSystem
            Get
                Return Me.trackingSystemField
            End Get
            Set
                Me.trackingSystemField = value
                Me.RaisePropertyChanged("TrackingSystem")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSIssueTrackingSystemMetaResponse
        Inherits CxWSIssueTrackingSystemResponse
        
        Private metaDataField As CxWSIssueTrackingSystemMeta
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property MetaData() As CxWSIssueTrackingSystemMeta
            Get
                Return Me.metaDataField
            End Get
            Set
                Me.metaDataField = value
                Me.RaisePropertyChanged("MetaData")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSUserPreferencesResponse
        Inherits CxWSBasicRepsonse
        
        Private preferencesField() As CxUserPreferences
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Preferences() As CxUserPreferences()
            Get
                Return Me.preferencesField
            End Get
            Set
                Me.preferencesField = value
                Me.RaisePropertyChanged("Preferences")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseScanResults
        Inherits CxWSBasicRepsonse
        
        Private scanResultsField() As Byte
        
        Private containsAllResultsField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", Order:=0)>  _
        Public Property ScanResults() As Byte()
            Get
                Return Me.scanResultsField
            End Get
            Set
                Me.scanResultsField = value
                Me.RaisePropertyChanged("ScanResults")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property containsAllResults() As Boolean
            Get
                Return Me.containsAllResultsField
            End Get
            Set
                Me.containsAllResultsField = value
                Me.RaisePropertyChanged("containsAllResults")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSProjectBranchingStatusResponse)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSReportStatusResponse
        Inherits CxWSBasicRepsonse
        
        Private isReadyField As Boolean
        
        Private isFailedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property IsReady() As Boolean
            Get
                Return Me.isReadyField
            End Get
            Set
                Me.isReadyField = value
                Me.RaisePropertyChanged("IsReady")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property IsFailed() As Boolean
            Get
                Return Me.isFailedField
            End Get
            Set
                Me.isFailedField = value
                Me.RaisePropertyChanged("IsFailed")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSProjectBranchingStatusResponse
        Inherits CxWSReportStatusResponse
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSCreateReportResponse
        Inherits CxWSBasicRepsonse
        
        Private idField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ID() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("ID")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseExistsingTransportedPresetQueries)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseTransportedQueries
        Inherits CxWSBasicRepsonse
        
        Private queriesField() As CxWSTransportedQuery
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Queries() As CxWSTransportedQuery()
            Get
                Return Me.queriesField
            End Get
            Set
                Me.queriesField = value
                Me.RaisePropertyChanged("Queries")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseExistsingTransportedPresetQueries
        Inherits CxWSResponseTransportedQueries
        
        Private presetNameExistsField As Boolean
        
        Private presetNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PresetNameExists() As Boolean
            Get
                Return Me.presetNameExistsField
            End Get
            Set
                Me.presetNameExistsField = value
                Me.RaisePropertyChanged("PresetNameExists")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property PresetName() As String
            Get
                Return Me.presetNameField
            End Get
            Set
                Me.presetNameField = value
                Me.RaisePropertyChanged("PresetName")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSImportQueriesRepsonse
        Inherits CxWSBasicRepsonse
        
        Private requestIdField As Long
        
        Private importQueryStatusField As ImportQueryStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property requestId() As Long
            Get
                Return Me.requestIdField
            End Get
            Set
                Me.requestIdField = value
                Me.RaisePropertyChanged("requestId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property importQueryStatus() As ImportQueryStatus
            Get
                Return Me.importQueryStatusField
            End Get
            Set
                Me.importQueryStatusField = value
                Me.RaisePropertyChanged("importQueryStatus")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum ImportQueryStatus
        
        '''<remarks/>
        [New]
        
        '''<remarks/>
        OnProgress
        
        '''<remarks/>
        Failed
        
        '''<remarks/>
        Succeeded
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponsePreset
        Inherits CxWSBasicRepsonse
        
        Private presetField() As Byte
        
        Private overridenCorpQueryNamesField() As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", Order:=0)>  _
        Public Property Preset() As Byte()
            Get
                Return Me.presetField
            End Get
            Set
                Me.presetField = value
                Me.RaisePropertyChanged("Preset")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property OverridenCorpQueryNames() As String()
            Get
                Return Me.overridenCorpQueryNamesField
            End Get
            Set
                Me.overridenCorpQueryNamesField = value
                Me.RaisePropertyChanged("OverridenCorpQueryNames")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseQueries
        Inherits CxWSBasicRepsonse
        
        Private queriesField() As Byte
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", Order:=0)>  _
        Public Property Queries() As Byte()
            Get
                Return Me.queriesField
            End Get
            Set
                Me.queriesField = value
                Me.RaisePropertyChanged("Queries")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseRunID
        Inherits CxWSBasicRepsonse
        
        Private projectIDField As Long
        
        Private runIdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ProjectID() As Long
            Get
                Return Me.projectIDField
            End Get
            Set
                Me.projectIDField = value
                Me.RaisePropertyChanged("ProjectID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property RunId() As String
            Get
                Return Me.runIdField
            End Get
            Set
                Me.runIdField = value
                Me.RaisePropertyChanged("RunId")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseEngineServerId
        Inherits CxWSBasicRepsonse
        
        Private idField As Long
        
        Private isContinuousRangeField As Boolean
        
        Private continuousRangeWarningMessageField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property isContinuousRange() As Boolean
            Get
                Return Me.isContinuousRangeField
            End Get
            Set
                Me.isContinuousRangeField = value
                Me.RaisePropertyChanged("isContinuousRange")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property continuousRangeWarningMessage() As String
            Get
                Return Me.continuousRangeWarningMessageField
            End Get
            Set
                Me.continuousRangeWarningMessageField = value
                Me.RaisePropertyChanged("continuousRangeWarningMessage")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseEngineServers
        Inherits CxWSBasicRepsonse
        
        Private listField() As CxEngineServer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property list() As CxEngineServer()
            Get
                Return Me.listField
            End Get
            Set
                Me.listField = value
                Me.RaisePropertyChanged("list")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseSaasPackage
        Inherits CxWSBasicRepsonse
        
        Private packagesField() As SaasPackage
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property packages() As SaasPackage()
            Get
                Return Me.packagesField
            End Get
            Set
                Me.packagesField = value
                Me.RaisePropertyChanged("packages")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseLoginData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSaasLoginData)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseSessionID
        Inherits CxWSBasicRepsonse
        
        Private sessionIdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property SessionId() As String
            Get
                Return Me.sessionIdField
            End Get
            Set
                Me.sessionIdField = value
                Me.RaisePropertyChanged("SessionId")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSaasLoginData)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseLoginData
        Inherits CxWSResponseSessionID
        
        Private familyNameField As String
        
        Private firstNameField As String
        
        Private userNameField As String
        
        Private emailField As String
        
        Private userIDField As Long
        
        Private userPreferedLanguageLCIDField As Integer
        
        Private isAllowedToCreateProjectField As Boolean
        
        Private isAllowedToChangeProjectField As Boolean
        
        Private isAllowedToManageUsersField As Boolean
        
        Private isAllowedToViewCompaniesField As Boolean
        
        Private isAllowedToManageCompaniesField As Boolean
        
        Private isAllowedToManageServerField As Boolean
        
        Private isAllowedToViewInstallationDataField As Boolean
        
        Private isAllowedToViewSpField As Boolean
        
        Private isAllowedToManageSpField As Boolean
        
        Private isScannerField As Boolean
        
        Private isAuditorField As Boolean
        
        Private isAllowedToManagePresetsField As Boolean
        
        Private isAllowedToManagePredefinedCommandField As Boolean
        
        Private isAllowedToManagePostScanActionField As Boolean
        
        Private isAllowedToModifyResultDetailsField As Boolean
        
        Private enableIncrementalScanField As Boolean
        
        Private showSaaSPackageNotificationAndErrorsField As Boolean
        
        Private showSaaSPackageDetailsField As Boolean
        
        Private isAdviseChangePasswordField As Boolean
        
        Private isAllowedToManageITSServersField As Boolean
        
        Private allowedToChangeNotExploitableField As Boolean
        
        Private isAllowedToDeleteScansField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property FamilyName() As String
            Get
                Return Me.familyNameField
            End Get
            Set
                Me.familyNameField = value
                Me.RaisePropertyChanged("FamilyName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
                Me.RaisePropertyChanged("FirstName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
                Me.RaisePropertyChanged("UserName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
                Me.RaisePropertyChanged("Email")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property UserID() As Long
            Get
                Return Me.userIDField
            End Get
            Set
                Me.userIDField = value
                Me.RaisePropertyChanged("UserID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property UserPreferedLanguageLCID() As Integer
            Get
                Return Me.userPreferedLanguageLCIDField
            End Get
            Set
                Me.userPreferedLanguageLCIDField = value
                Me.RaisePropertyChanged("UserPreferedLanguageLCID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property IsAllowedToCreateProject() As Boolean
            Get
                Return Me.isAllowedToCreateProjectField
            End Get
            Set
                Me.isAllowedToCreateProjectField = value
                Me.RaisePropertyChanged("IsAllowedToCreateProject")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property IsAllowedToChangeProject() As Boolean
            Get
                Return Me.isAllowedToChangeProjectField
            End Get
            Set
                Me.isAllowedToChangeProjectField = value
                Me.RaisePropertyChanged("IsAllowedToChangeProject")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property IsAllowedToManageUsers() As Boolean
            Get
                Return Me.isAllowedToManageUsersField
            End Get
            Set
                Me.isAllowedToManageUsersField = value
                Me.RaisePropertyChanged("IsAllowedToManageUsers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property IsAllowedToViewCompanies() As Boolean
            Get
                Return Me.isAllowedToViewCompaniesField
            End Get
            Set
                Me.isAllowedToViewCompaniesField = value
                Me.RaisePropertyChanged("IsAllowedToViewCompanies")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property IsAllowedToManageCompanies() As Boolean
            Get
                Return Me.isAllowedToManageCompaniesField
            End Get
            Set
                Me.isAllowedToManageCompaniesField = value
                Me.RaisePropertyChanged("IsAllowedToManageCompanies")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property IsAllowedToManageServer() As Boolean
            Get
                Return Me.isAllowedToManageServerField
            End Get
            Set
                Me.isAllowedToManageServerField = value
                Me.RaisePropertyChanged("IsAllowedToManageServer")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property IsAllowedToViewInstallationData() As Boolean
            Get
                Return Me.isAllowedToViewInstallationDataField
            End Get
            Set
                Me.isAllowedToViewInstallationDataField = value
                Me.RaisePropertyChanged("IsAllowedToViewInstallationData")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property IsAllowedToViewSp() As Boolean
            Get
                Return Me.isAllowedToViewSpField
            End Get
            Set
                Me.isAllowedToViewSpField = value
                Me.RaisePropertyChanged("IsAllowedToViewSp")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=14)>  _
        Public Property IsAllowedToManageSp() As Boolean
            Get
                Return Me.isAllowedToManageSpField
            End Get
            Set
                Me.isAllowedToManageSpField = value
                Me.RaisePropertyChanged("IsAllowedToManageSp")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=15)>  _
        Public Property IsScanner() As Boolean
            Get
                Return Me.isScannerField
            End Get
            Set
                Me.isScannerField = value
                Me.RaisePropertyChanged("IsScanner")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=16)>  _
        Public Property IsAuditor() As Boolean
            Get
                Return Me.isAuditorField
            End Get
            Set
                Me.isAuditorField = value
                Me.RaisePropertyChanged("IsAuditor")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=17)>  _
        Public Property IsAllowedToManagePresets() As Boolean
            Get
                Return Me.isAllowedToManagePresetsField
            End Get
            Set
                Me.isAllowedToManagePresetsField = value
                Me.RaisePropertyChanged("IsAllowedToManagePresets")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=18)>  _
        Public Property isAllowedToManagePredefinedCommand() As Boolean
            Get
                Return Me.isAllowedToManagePredefinedCommandField
            End Get
            Set
                Me.isAllowedToManagePredefinedCommandField = value
                Me.RaisePropertyChanged("isAllowedToManagePredefinedCommand")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=19)>  _
        Public Property IsAllowedToManagePostScanAction() As Boolean
            Get
                Return Me.isAllowedToManagePostScanActionField
            End Get
            Set
                Me.isAllowedToManagePostScanActionField = value
                Me.RaisePropertyChanged("IsAllowedToManagePostScanAction")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=20)>  _
        Public Property IsAllowedToModifyResultDetails() As Boolean
            Get
                Return Me.isAllowedToModifyResultDetailsField
            End Get
            Set
                Me.isAllowedToModifyResultDetailsField = value
                Me.RaisePropertyChanged("IsAllowedToModifyResultDetails")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=21)>  _
        Public Property EnableIncrementalScan() As Boolean
            Get
                Return Me.enableIncrementalScanField
            End Get
            Set
                Me.enableIncrementalScanField = value
                Me.RaisePropertyChanged("EnableIncrementalScan")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=22)>  _
        Public Property ShowSaaSPackageNotificationAndErrors() As Boolean
            Get
                Return Me.showSaaSPackageNotificationAndErrorsField
            End Get
            Set
                Me.showSaaSPackageNotificationAndErrorsField = value
                Me.RaisePropertyChanged("ShowSaaSPackageNotificationAndErrors")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=23)>  _
        Public Property ShowSaaSPackageDetails() As Boolean
            Get
                Return Me.showSaaSPackageDetailsField
            End Get
            Set
                Me.showSaaSPackageDetailsField = value
                Me.RaisePropertyChanged("ShowSaaSPackageDetails")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=24)>  _
        Public Property IsAdviseChangePassword() As Boolean
            Get
                Return Me.isAdviseChangePasswordField
            End Get
            Set
                Me.isAdviseChangePasswordField = value
                Me.RaisePropertyChanged("IsAdviseChangePassword")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=25)>  _
        Public Property IsAllowedToManageITSServers() As Boolean
            Get
                Return Me.isAllowedToManageITSServersField
            End Get
            Set
                Me.isAllowedToManageITSServersField = value
                Me.RaisePropertyChanged("IsAllowedToManageITSServers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=26)>  _
        Public Property AllowedToChangeNotExploitable() As Boolean
            Get
                Return Me.allowedToChangeNotExploitableField
            End Get
            Set
                Me.allowedToChangeNotExploitableField = value
                Me.RaisePropertyChanged("AllowedToChangeNotExploitable")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=27)>  _
        Public Property IsAllowedToDeleteScans() As Boolean
            Get
                Return Me.isAllowedToDeleteScansField
            End Get
            Set
                Me.isAllowedToDeleteScansField = value
                Me.RaisePropertyChanged("IsAllowedToDeleteScans")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseSaasLoginData
        Inherits CxWSResponseLoginData
        
        Private isAllowedToUseSourceControlField As Boolean
        
        Private isAllowedToCreatePDFField As Boolean
        
        Private isAllowedToUseOnlineViewerField As Boolean
        
        Private isAllowedToUsePluginsField As Boolean
        
        Private isAllowedToViewResultStateField As Boolean
        
        Private isAllowedToEditResultStateField As Boolean
        
        Private isAllowedToViewResultSeverityField As Boolean
        
        Private isAllowedToEditResultSeverityField As Boolean
        
        Private isAllowedToViewAssignToField As Boolean
        
        Private isAllowedToEditAssignToField As Boolean
        
        Private isAllowedToViewCommentsField As Boolean
        
        Private isAllowedToEditCommentsField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property IsAllowedToUseSourceControl() As Boolean
            Get
                Return Me.isAllowedToUseSourceControlField
            End Get
            Set
                Me.isAllowedToUseSourceControlField = value
                Me.RaisePropertyChanged("IsAllowedToUseSourceControl")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property isAllowedToCreatePDF() As Boolean
            Get
                Return Me.isAllowedToCreatePDFField
            End Get
            Set
                Me.isAllowedToCreatePDFField = value
                Me.RaisePropertyChanged("isAllowedToCreatePDF")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property IsAllowedToUseOnlineViewer() As Boolean
            Get
                Return Me.isAllowedToUseOnlineViewerField
            End Get
            Set
                Me.isAllowedToUseOnlineViewerField = value
                Me.RaisePropertyChanged("IsAllowedToUseOnlineViewer")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property IsAllowedToUsePlugins() As Boolean
            Get
                Return Me.isAllowedToUsePluginsField
            End Get
            Set
                Me.isAllowedToUsePluginsField = value
                Me.RaisePropertyChanged("IsAllowedToUsePlugins")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property IsAllowedToViewResultState() As Boolean
            Get
                Return Me.isAllowedToViewResultStateField
            End Get
            Set
                Me.isAllowedToViewResultStateField = value
                Me.RaisePropertyChanged("IsAllowedToViewResultState")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property IsAllowedToEditResultState() As Boolean
            Get
                Return Me.isAllowedToEditResultStateField
            End Get
            Set
                Me.isAllowedToEditResultStateField = value
                Me.RaisePropertyChanged("IsAllowedToEditResultState")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property IsAllowedToViewResultSeverity() As Boolean
            Get
                Return Me.isAllowedToViewResultSeverityField
            End Get
            Set
                Me.isAllowedToViewResultSeverityField = value
                Me.RaisePropertyChanged("IsAllowedToViewResultSeverity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property IsAllowedToEditResultSeverity() As Boolean
            Get
                Return Me.isAllowedToEditResultSeverityField
            End Get
            Set
                Me.isAllowedToEditResultSeverityField = value
                Me.RaisePropertyChanged("IsAllowedToEditResultSeverity")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property IsAllowedToViewAssignTo() As Boolean
            Get
                Return Me.isAllowedToViewAssignToField
            End Get
            Set
                Me.isAllowedToViewAssignToField = value
                Me.RaisePropertyChanged("IsAllowedToViewAssignTo")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property IsAllowedToEditAssignTo() As Boolean
            Get
                Return Me.isAllowedToEditAssignToField
            End Get
            Set
                Me.isAllowedToEditAssignToField = value
                Me.RaisePropertyChanged("IsAllowedToEditAssignTo")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property IsAllowedToViewComments() As Boolean
            Get
                Return Me.isAllowedToViewCommentsField
            End Get
            Set
                Me.isAllowedToViewCommentsField = value
                Me.RaisePropertyChanged("IsAllowedToViewComments")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property IsAllowedToEditComments() As Boolean
            Get
                Return Me.isAllowedToEditCommentsField
            End Get
            Set
                Me.isAllowedToEditCommentsField = value
                Me.RaisePropertyChanged("IsAllowedToEditComments")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseShortQueryDescription
        Inherits CxWSBasicRepsonse
        
        Private queryIdField As Long
        
        Private cweIdField As Long
        
        Private queryDescriptionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property QueryId() As Long
            Get
                Return Me.queryIdField
            End Get
            Set
                Me.queryIdField = value
                Me.RaisePropertyChanged("QueryId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property CweId() As Long
            Get
                Return Me.cweIdField
            End Get
            Set
                Me.cweIdField = value
                Me.RaisePropertyChanged("CweId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property QueryDescription() As String
            Get
                Return Me.queryDescriptionField
            End Get
            Set
                Me.queryDescriptionField = value
                Me.RaisePropertyChanged("QueryDescription")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponsePivotLayouts
        Inherits CxWSBasicRepsonse
        
        Private layoutsField() As CxPivotLayout
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Layouts() As CxPivotLayout()
            Get
                Return Me.layoutsField
            End Get
            Set
                Me.layoutsField = value
                Me.RaisePropertyChanged("Layouts")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponsePivotTable
        Inherits CxWSBasicRepsonse
        
        Private pivotTableField As CxPivotTable
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property PivotTable() As CxPivotTable
            Get
                Return Me.pivotTableField
            End Get
            Set
                Me.pivotTableField = value
                Me.RaisePropertyChanged("PivotTable")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseBool
        Inherits CxWSBasicRepsonse
        
        Private resultField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property result() As Boolean
            Get
                Return Me.resultField
            End Get
            Set
                Me.resultField = value
                Me.RaisePropertyChanged("result")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseAssignUsers
        Inherits CxWSBasicRepsonse
        
        Private assignUsersField() As AssignUser
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property AssignUsers() As AssignUser()
            Get
                Return Me.assignUsersField
            End Get
            Set
                Me.assignUsersField = value
                Me.RaisePropertyChanged("AssignUsers")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseUserData
        Inherits CxWSBasicRepsonse
        
        Private userDataListField() As UserData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property UserDataList() As UserData()
            Get
                Return Me.userDataListField
            End Get
            Set
                Me.userDataListField = value
                Me.RaisePropertyChanged("UserDataList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseNameList
        Inherits CxWSBasicRepsonse
        
        Private nameListField() As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property NameList() As String()
            Get
                Return Me.nameListField
            End Get
            Set
                Me.nameListField = value
                Me.RaisePropertyChanged("NameList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponsePredefinedCommands
        Inherits CxWSBasicRepsonse
        
        Private commandsField() As CxPredefinedCommand
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property commands() As CxPredefinedCommand()
            Get
                Return Me.commandsField
            End Get
            Set
                Me.commandsField = value
                Me.RaisePropertyChanged("commands")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseCustomFieldValues
        Inherits CxWSBasicRepsonse
        
        Private valuesField() As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Values() As String()
            Get
                Return Me.valuesField
            End Get
            Set
                Me.valuesField = value
                Me.RaisePropertyChanged("Values")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseCustomFields
        Inherits CxWSBasicRepsonse
        
        Private fieldsArrayField() As CxWSCustomField
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property fieldsArray() As CxWSCustomField()
            Get
                Return Me.fieldsArrayField
            End Get
            Set
                Me.fieldsArrayField = value
                Me.RaisePropertyChanged("fieldsArray")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseResultGraph
        Inherits CxWSBasicRepsonse
        
        Private nodesField() As CxWSNode
        
        Private edgesField() As CxWSEdge
        
        Private partialField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Nodes() As CxWSNode()
            Get
                Return Me.nodesField
            End Get
            Set
                Me.nodesField = value
                Me.RaisePropertyChanged("Nodes")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property Edges() As CxWSEdge()
            Get
                Return Me.edgesField
            End Get
            Set
                Me.edgesField = value
                Me.RaisePropertyChanged("Edges")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property [Partial]() As Boolean
            Get
                Return Me.partialField
            End Get
            Set
                Me.partialField = value
                Me.RaisePropertyChanged("Partial")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseResultPaths
        Inherits CxWSBasicRepsonse
        
        Private pathsField() As CxWSResultPath
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Paths() As CxWSResultPath()
            Get
                Return Me.pathsField
            End Get
            Set
                Me.pathsField = value
                Me.RaisePropertyChanged("Paths")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponceFileNames
        Inherits CxWSBasicRepsonse
        
        Private fileNamesField() As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property fileNames() As String()
            Get
                Return Me.fileNamesField
            End Get
            Set
                Me.fileNamesField = value
                Me.RaisePropertyChanged("fileNames")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponceResultPath
        Inherits CxWSBasicRepsonse
        
        Private pathField As CxWSResultPath
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Path() As CxWSResultPath
            Get
                Return Me.pathField
            End Get
            Set
                Me.pathField = value
                Me.RaisePropertyChanged("Path")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponceScanResults
        Inherits CxWSBasicRepsonse
        
        Private resultsField() As CxWSSingleResultData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Results() As CxWSSingleResultData()
            Get
                Return Me.resultsField
            End Get
            Set
                Me.resultsField = value
                Me.RaisePropertyChanged("Results")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponceQuerisForScan
        Inherits CxWSBasicRepsonse
        
        Private queriesField() As CxWSQueryVulnerabilityData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property Queries() As CxWSQueryVulnerabilityData()
            Get
                Return Me.queriesField
            End Get
            Set
                Me.queriesField = value
                Me.RaisePropertyChanged("Queries")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSQueryVersionDetailsResponse
        Inherits CxWSBasicRepsonse
        
        Private queryDetailsField As CxWSQueryVersionDetails
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property QueryDetails() As CxWSQueryVersionDetails
            Get
                Return Me.queryDetailsField
            End Get
            Set
                Me.queryDetailsField = value
                Me.RaisePropertyChanged("QueryDetails")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseQueriesCategories
        Inherits CxWSBasicRepsonse
        
        Private queriesCategoriesField() As CxQueryCategory
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property QueriesCategories() As CxQueryCategory()
            Get
                Return Me.queriesCategoriesField
            End Get
            Set
                Me.queriesCategoriesField = value
                Me.RaisePropertyChanged("QueriesCategories")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponsePresetDetails
        Inherits CxWSBasicRepsonse
        
        Private presetField As CxPresetDetails
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property preset() As CxPresetDetails
            Get
                Return Me.presetField
            End Get
            Set
                Me.presetField = value
                Me.RaisePropertyChanged("preset")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxQueryCollectionResponse
        Inherits CxWSBasicRepsonse
        
        Private queryGroupsField() As CxWSQueryGroup
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property QueryGroups() As CxWSQueryGroup()
            Get
                Return Me.queryGroupsField
            End Get
            Set
                Me.queryGroupsField = value
                Me.RaisePropertyChanged("QueryGroups")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponsePresetList
        Inherits CxWSBasicRepsonse
        
        Private presetListField() As Preset
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property PresetList() As Preset()
            Get
                Return Me.presetListField
            End Get
            Set
                Me.presetListField = value
                Me.RaisePropertyChanged("PresetList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseInstallationSettings
        Inherits CxWSBasicRepsonse
        
        Private installationSettingsListField() As InstallationSetting
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property InstallationSettingsList() As InstallationSetting()
            Get
                Return Me.installationSettingsListField
            End Get
            Set
                Me.installationSettingsListField = value
                Me.RaisePropertyChanged("InstallationSettingsList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWsResponseSystemSettings
        Inherits CxWSBasicRepsonse
        
        Private sysSettingsField As SystemSettings
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property SysSettings() As SystemSettings
            Get
                Return Me.sysSettingsField
            End Get
            Set
                Me.sysSettingsField = value
                Me.RaisePropertyChanged("SysSettings")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseSystemLanguages
        Inherits CxWSBasicRepsonse
        
        Private listField() As SystemLanguage
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property list() As SystemLanguage()
            Get
                Return Me.listField
            End Get
            Set
                Me.listField = value
                Me.RaisePropertyChanged("list")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseCompaniesLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSPLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseServerManagersLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseServerLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWsResponseCompanyProperties)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseUsersLicenseData
        Inherits CxWSBasicRepsonse
        
        Private maxReviewersField As Integer
        
        Private currentReviewersField As Integer
        
        Private maxScannersField As Integer
        
        Private currentScannersField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property MaxReviewers() As Integer
            Get
                Return Me.maxReviewersField
            End Get
            Set
                Me.maxReviewersField = value
                Me.RaisePropertyChanged("MaxReviewers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property CurrentReviewers() As Integer
            Get
                Return Me.currentReviewersField
            End Get
            Set
                Me.currentReviewersField = value
                Me.RaisePropertyChanged("CurrentReviewers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property MaxScanners() As Integer
            Get
                Return Me.maxScannersField
            End Get
            Set
                Me.maxScannersField = value
                Me.RaisePropertyChanged("MaxScanners")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property CurrentScanners() As Integer
            Get
                Return Me.currentScannersField
            End Get
            Set
                Me.currentScannersField = value
                Me.RaisePropertyChanged("CurrentScanners")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseSPLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseServerManagersLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseServerLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWsResponseCompanyProperties)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseCompaniesLicenseData
        Inherits CxWSResponseUsersLicenseData
        
        Private maxCompanyManagersField As Integer
        
        Private currentCompanyManagersField As Integer
        
        Private maxCompanyManagersWithAuditField As Integer
        
        Private currentCompanyManagersWithAuditField As Integer
        
        Private maxCompaniesField As Integer
        
        Private currentCompaniesField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property MaxCompanyManagers() As Integer
            Get
                Return Me.maxCompanyManagersField
            End Get
            Set
                Me.maxCompanyManagersField = value
                Me.RaisePropertyChanged("MaxCompanyManagers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property CurrentCompanyManagers() As Integer
            Get
                Return Me.currentCompanyManagersField
            End Get
            Set
                Me.currentCompanyManagersField = value
                Me.RaisePropertyChanged("CurrentCompanyManagers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property MaxCompanyManagersWithAudit() As Integer
            Get
                Return Me.maxCompanyManagersWithAuditField
            End Get
            Set
                Me.maxCompanyManagersWithAuditField = value
                Me.RaisePropertyChanged("MaxCompanyManagersWithAudit")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property CurrentCompanyManagersWithAudit() As Integer
            Get
                Return Me.currentCompanyManagersWithAuditField
            End Get
            Set
                Me.currentCompanyManagersWithAuditField = value
                Me.RaisePropertyChanged("CurrentCompanyManagersWithAudit")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property MaxCompanies() As Integer
            Get
                Return Me.maxCompaniesField
            End Get
            Set
                Me.maxCompaniesField = value
                Me.RaisePropertyChanged("MaxCompanies")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property CurrentCompanies() As Integer
            Get
                Return Me.currentCompaniesField
            End Get
            Set
                Me.currentCompaniesField = value
                Me.RaisePropertyChanged("CurrentCompanies")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseServerManagersLicenseData)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseServerLicenseData)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseSPLicenseData
        Inherits CxWSResponseCompaniesLicenseData
        
        Private maxSPManagersField As Integer
        
        Private currentSPManagersField As Integer
        
        Private currentSPsField As Integer
        
        Private maxSPsField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property MaxSPManagers() As Integer
            Get
                Return Me.maxSPManagersField
            End Get
            Set
                Me.maxSPManagersField = value
                Me.RaisePropertyChanged("MaxSPManagers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property CurrentSPManagers() As Integer
            Get
                Return Me.currentSPManagersField
            End Get
            Set
                Me.currentSPManagersField = value
                Me.RaisePropertyChanged("CurrentSPManagers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property CurrentSPs() As Integer
            Get
                Return Me.currentSPsField
            End Get
            Set
                Me.currentSPsField = value
                Me.RaisePropertyChanged("CurrentSPs")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property MaxSPs() As Integer
            Get
                Return Me.maxSPsField
            End Get
            Set
                Me.maxSPsField = value
                Me.RaisePropertyChanged("MaxSPs")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(CxWSResponseServerLicenseData)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseServerManagersLicenseData
        Inherits CxWSResponseSPLicenseData
        
        Private maxServerManagersField As Integer
        
        Private currentServerManagersField As Integer
        
        Private maxServerManagersWithAuditField As Integer
        
        Private currentServerManagersWithAuditField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property MaxServerManagers() As Integer
            Get
                Return Me.maxServerManagersField
            End Get
            Set
                Me.maxServerManagersField = value
                Me.RaisePropertyChanged("MaxServerManagers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property CurrentServerManagers() As Integer
            Get
                Return Me.currentServerManagersField
            End Get
            Set
                Me.currentServerManagersField = value
                Me.RaisePropertyChanged("CurrentServerManagers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property MaxServerManagersWithAudit() As Integer
            Get
                Return Me.maxServerManagersWithAuditField
            End Get
            Set
                Me.maxServerManagersWithAuditField = value
                Me.RaisePropertyChanged("MaxServerManagersWithAudit")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property CurrentServerManagersWithAudit() As Integer
            Get
                Return Me.currentServerManagersWithAuditField
            End Get
            Set
                Me.currentServerManagersWithAuditField = value
                Me.RaisePropertyChanged("CurrentServerManagersWithAudit")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseServerLicenseData
        Inherits CxWSResponseServerManagersLicenseData
        
        Private expirationDateField As String
        
        Private maxConcurrentScansField As String
        
        Private maxLOCField As String
        
        Private hIDField As String
        
        Private supportedLanguagesField() As SupportedLanguage
        
        Private maxUsersField As Integer
        
        Private currentUsersField As Integer
        
        Private maxAuditUsersField As Integer
        
        Private currentAuditUsersField As Integer
        
        Private isOsaEnabledField As Boolean
        
        Private osaExpirationDateField As String
        
        Private editionField As LicenseEdition
        
        Private projectsAllowedField As Long
        
        Private currentProjectsCountField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ExpirationDate() As String
            Get
                Return Me.expirationDateField
            End Get
            Set
                Me.expirationDateField = value
                Me.RaisePropertyChanged("ExpirationDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property MaxConcurrentScans() As String
            Get
                Return Me.maxConcurrentScansField
            End Get
            Set
                Me.maxConcurrentScansField = value
                Me.RaisePropertyChanged("MaxConcurrentScans")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property MaxLOC() As String
            Get
                Return Me.maxLOCField
            End Get
            Set
                Me.maxLOCField = value
                Me.RaisePropertyChanged("MaxLOC")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property HID() As String
            Get
                Return Me.hIDField
            End Get
            Set
                Me.hIDField = value
                Me.RaisePropertyChanged("HID")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=4)>  _
        Public Property SupportedLanguages() As SupportedLanguage()
            Get
                Return Me.supportedLanguagesField
            End Get
            Set
                Me.supportedLanguagesField = value
                Me.RaisePropertyChanged("SupportedLanguages")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property MaxUsers() As Integer
            Get
                Return Me.maxUsersField
            End Get
            Set
                Me.maxUsersField = value
                Me.RaisePropertyChanged("MaxUsers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property CurrentUsers() As Integer
            Get
                Return Me.currentUsersField
            End Get
            Set
                Me.currentUsersField = value
                Me.RaisePropertyChanged("CurrentUsers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=7)>  _
        Public Property MaxAuditUsers() As Integer
            Get
                Return Me.maxAuditUsersField
            End Get
            Set
                Me.maxAuditUsersField = value
                Me.RaisePropertyChanged("MaxAuditUsers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=8)>  _
        Public Property CurrentAuditUsers() As Integer
            Get
                Return Me.currentAuditUsersField
            End Get
            Set
                Me.currentAuditUsersField = value
                Me.RaisePropertyChanged("CurrentAuditUsers")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=9)>  _
        Public Property IsOsaEnabled() As Boolean
            Get
                Return Me.isOsaEnabledField
            End Get
            Set
                Me.isOsaEnabledField = value
                Me.RaisePropertyChanged("IsOsaEnabled")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=10)>  _
        Public Property OsaExpirationDate() As String
            Get
                Return Me.osaExpirationDateField
            End Get
            Set
                Me.osaExpirationDateField = value
                Me.RaisePropertyChanged("OsaExpirationDate")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=11)>  _
        Public Property Edition() As LicenseEdition
            Get
                Return Me.editionField
            End Get
            Set
                Me.editionField = value
                Me.RaisePropertyChanged("Edition")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=12)>  _
        Public Property ProjectsAllowed() As Long
            Get
                Return Me.projectsAllowedField
            End Get
            Set
                Me.projectsAllowedField = value
                Me.RaisePropertyChanged("ProjectsAllowed")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=13)>  _
        Public Property CurrentProjectsCount() As Long
            Get
                Return Me.currentProjectsCountField
            End Get
            Set
                Me.currentProjectsCountField = value
                Me.RaisePropertyChanged("CurrentProjectsCount")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum LicenseEdition
        
        '''<remarks/>
        SDLC
        
        '''<remarks/>
        SecurityGate
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWsResponseCompanyProperties
        Inherits CxWSResponseCompaniesLicenseData
        
        Private companyNameField As String
        
        Private permissionField As CxPermission
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property CompanyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
                Me.RaisePropertyChanged("CompanyName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property permission() As CxPermission
            Get
                Return Me.permissionField
            End Get
            Set
                Me.permissionField = value
                Me.RaisePropertyChanged("permission")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Partial Public Class CxWSResponseTeamData
        Inherits CxWSBasicRepsonse
        
        Private teamDataListField() As TeamData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=0)>  _
        Public Property TeamDataList() As TeamData()
            Get
                Return Me.teamDataListField
            End Get
            Set
                Me.teamDataListField = value
                Me.RaisePropertyChanged("TeamDataList")
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum ResultLabelTypeEnum
        
        '''<remarks/>
        IgnorePath
        
        '''<remarks/>
        Remark
        
        '''<remarks/>
        Severity
        
        '''<remarks/>
        State
        
        '''<remarks/>
        Assign
        
        '''<remarks/>
        IssueTracking
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSGraphTypeEnum
        
        '''<remarks/>
        Full
        
        '''<remarks/>
        KeyPoints
        
        '''<remarks/>
        Ends
        
        '''<remarks/>
        none
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ImportQueries", WrapperNamespace:="http://Checkmarx.com", IsWrapped:=true)>  _
    Partial Public Class ImportQueriesRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=0)>  _
        Public sessionId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public importedFile() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal sessionId As String, ByVal importedFile() As Byte)
            MyBase.New
            Me.sessionId = sessionId
            Me.importedFile = importedFile
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ImportQueriesResponse", WrapperNamespace:="http://Checkmarx.com", IsWrapped:=true)>  _
    Partial Public Class ImportQueriesResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=0)>  _
        Public ImportQueriesResult As CxPortal.CxWSImportQueriesRepsonse
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ImportQueriesResult As CxPortal.CxWSImportQueriesRepsonse)
            MyBase.New
            Me.ImportQueriesResult = ImportQueriesResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetExistingQueries", WrapperNamespace:="http://Checkmarx.com", IsWrapped:=true)>  _
    Partial Public Class GetExistingQueriesRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=0)>  _
        Public sessionId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public importedFile() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal sessionId As String, ByVal importedFile() As Byte)
            MyBase.New
            Me.sessionId = sessionId
            Me.importedFile = importedFile
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetExistingQueriesResponse", WrapperNamespace:="http://Checkmarx.com", IsWrapped:=true)>  _
    Partial Public Class GetExistingQueriesResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=0)>  _
        Public GetExistingQueriesResult As CxPortal.CxWSResponseTransportedQueries
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetExistingQueriesResult As CxPortal.CxWSResponseTransportedQueries)
            MyBase.New
            Me.GetExistingQueriesResult = GetExistingQueriesResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetExistingPresetQueries", WrapperNamespace:="http://Checkmarx.com", IsWrapped:=true)>  _
    Partial Public Class GetExistingPresetQueriesRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=0)>  _
        Public sessionId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public importedFile() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal sessionId As String, ByVal importedFile() As Byte)
            MyBase.New
            Me.sessionId = sessionId
            Me.importedFile = importedFile
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetExistingPresetQueriesResponse", WrapperNamespace:="http://Checkmarx.com", IsWrapped:=true)>  _
    Partial Public Class GetExistingPresetQueriesResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=0)>  _
        Public GetExistingPresetQueriesResult As CxPortal.CxWSResponseExistsingTransportedPresetQueries
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetExistingPresetQueriesResult As CxPortal.CxWSResponseExistsingTransportedPresetQueries)
            MyBase.New
            Me.GetExistingPresetQueriesResult = GetExistingPresetQueriesResult
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ImportPreset", WrapperNamespace:="http://Checkmarx.com", IsWrapped:=true)>  _
    Partial Public Class ImportPresetRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=0)>  _
        Public sessionId As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=1),  _
         System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public importedFile() As Byte
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal sessionId As String, ByVal importedFile() As Byte)
            MyBase.New
            Me.sessionId = sessionId
            Me.importedFile = importedFile
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="ImportPresetResponse", WrapperNamespace:="http://Checkmarx.com", IsWrapped:=true)>  _
    Partial Public Class ImportPresetResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://Checkmarx.com", Order:=0)>  _
        Public ImportPresetResult As CxPortal.CxWSImportQueriesRepsonse
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ImportPresetResult As CxPortal.CxWSImportQueriesRepsonse)
            MyBase.New
            Me.ImportPresetResult = ImportPresetResult
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxWSSearchPatternOption
        
        '''<remarks/>
        None
        
        '''<remarks/>
        StartsWith
        
        '''<remarks/>
        Contains
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://Checkmarx.com")>  _
    Public Enum CxUserTypes
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Domain
        
        '''<remarks/>
        Application
        
        '''<remarks/>
        OpenID
        
        '''<remarks/>
        SSO
        
        '''<remarks/>
        LDAP
        
        '''<remarks/>
        SAML
    End Enum
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface CxPortalWebServiceSoapChannel
        Inherits CxPortal.CxPortalWebServiceSoap, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class CxPortalWebServiceSoapClient
        Inherits System.ServiceModel.ClientBase(Of CxPortal.CxPortalWebServiceSoap)
        Implements CxPortal.CxPortalWebServiceSoap
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function IsValidCompanyName(ByVal sessionID As String, ByVal companyName As String, ByVal serviceProviderID As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.IsValidCompanyName
            Return MyBase.Channel.IsValidCompanyName(sessionID, companyName, serviceProviderID)
        End Function
        
        Public Function IsValidCompanyNameAsync(ByVal sessionID As String, ByVal companyName As String, ByVal serviceProviderID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.IsValidCompanyNameAsync
            Return MyBase.Channel.IsValidCompanyNameAsync(sessionID, companyName, serviceProviderID)
        End Function
        
        Public Function GetCompanyTeams(ByVal sessionID As String, ByVal companyID As String) As CxPortal.CxWSResponseTeamData Implements CxPortal.CxPortalWebServiceSoap.GetCompanyTeams
            Return MyBase.Channel.GetCompanyTeams(sessionID, companyID)
        End Function
        
        Public Function GetCompanyTeamsAsync(ByVal sessionID As String, ByVal companyID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData) Implements CxPortal.CxPortalWebServiceSoap.GetCompanyTeamsAsync
            Return MyBase.Channel.GetCompanyTeamsAsync(sessionID, companyID)
        End Function
        
        Public Function GetServiceProviderTeams(ByVal sessionID As String, ByVal spID As String) As CxPortal.CxWSResponseTeamData Implements CxPortal.CxPortalWebServiceSoap.GetServiceProviderTeams
            Return MyBase.Channel.GetServiceProviderTeams(sessionID, spID)
        End Function
        
        Public Function GetServiceProviderTeamsAsync(ByVal sessionID As String, ByVal spID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData) Implements CxPortal.CxPortalWebServiceSoap.GetServiceProviderTeamsAsync
            Return MyBase.Channel.GetServiceProviderTeamsAsync(sessionID, spID)
        End Function
        
        Public Function GetServiceProviderCompanies(ByVal sessionID As String, ByVal spID As String) As CxPortal.CxWSResponseTeamData Implements CxPortal.CxPortalWebServiceSoap.GetServiceProviderCompanies
            Return MyBase.Channel.GetServiceProviderCompanies(sessionID, spID)
        End Function
        
        Public Function GetServiceProviderCompaniesAsync(ByVal sessionID As String, ByVal spID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData) Implements CxPortal.CxPortalWebServiceSoap.GetServiceProviderCompaniesAsync
            Return MyBase.Channel.GetServiceProviderCompaniesAsync(sessionID, spID)
        End Function
        
        Public Function GetCompanyProperties(ByVal sessionID As String, ByVal companyID As String) As CxPortal.CxWsResponseCompanyProperties Implements CxPortal.CxPortalWebServiceSoap.GetCompanyProperties
            Return MyBase.Channel.GetCompanyProperties(sessionID, companyID)
        End Function
        
        Public Function GetCompanyPropertiesAsync(ByVal sessionID As String, ByVal companyID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWsResponseCompanyProperties) Implements CxPortal.CxPortalWebServiceSoap.GetCompanyPropertiesAsync
            Return MyBase.Channel.GetCompanyPropertiesAsync(sessionID, companyID)
        End Function
        
        Public Function SetUserAsCompanyManager(ByVal sessionID As String, ByVal companyID As String, ByVal userID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SetUserAsCompanyManager
            Return MyBase.Channel.SetUserAsCompanyManager(sessionID, companyID, userID)
        End Function
        
        Public Function SetUserAsCompanyManagerAsync(ByVal sessionID As String, ByVal companyID As String, ByVal userID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SetUserAsCompanyManagerAsync
            Return MyBase.Channel.SetUserAsCompanyManagerAsync(sessionID, companyID, userID)
        End Function
        
        Public Function SetUserAsServiceProviderManager(ByVal sessionID As String, ByVal spID As String, ByVal userID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SetUserAsServiceProviderManager
            Return MyBase.Channel.SetUserAsServiceProviderManager(sessionID, spID, userID)
        End Function
        
        Public Function SetUserAsServiceProviderManagerAsync(ByVal sessionID As String, ByVal spID As String, ByVal userID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SetUserAsServiceProviderManagerAsync
            Return MyBase.Channel.SetUserAsServiceProviderManagerAsync(sessionID, spID, userID)
        End Function
        
        Public Function IsValidServiceProviderName(ByVal sessionID As String, ByVal serviceProviderName As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.IsValidServiceProviderName
            Return MyBase.Channel.IsValidServiceProviderName(sessionID, serviceProviderName)
        End Function
        
        Public Function IsValidServiceProviderNameAsync(ByVal sessionID As String, ByVal serviceProviderName As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.IsValidServiceProviderNameAsync
            Return MyBase.Channel.IsValidServiceProviderNameAsync(sessionID, serviceProviderName)
        End Function
        
        Public Function UpdateCompanyProperties(ByVal sessionID As String, ByVal companyID As String, ByVal companyName As String, ByVal maxReviewers As Integer, ByVal maxScanners As Integer, ByVal maxManagers As Integer) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateCompanyProperties
            Return MyBase.Channel.UpdateCompanyProperties(sessionID, companyID, companyName, maxReviewers, maxScanners, maxManagers)
        End Function
        
        Public Function UpdateCompanyPropertiesAsync(ByVal sessionID As String, ByVal companyID As String, ByVal companyName As String, ByVal maxReviewers As Integer, ByVal maxScanners As Integer, ByVal maxManagers As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateCompanyPropertiesAsync
            Return MyBase.Channel.UpdateCompanyPropertiesAsync(sessionID, companyID, companyName, maxReviewers, maxScanners, maxManagers)
        End Function
        
        Public Function SetSystemSettings(ByVal sessionID As String, ByVal settings As CxPortal.SystemSettings) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SetSystemSettings
            Return MyBase.Channel.SetSystemSettings(sessionID, settings)
        End Function
        
        Public Function SetSystemSettingsAsync(ByVal sessionID As String, ByVal settings As CxPortal.SystemSettings) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SetSystemSettingsAsync
            Return MyBase.Channel.SetSystemSettingsAsync(sessionID, settings)
        End Function
        
        Public Function GetServerLanguageList(ByVal sessionID As String) As CxPortal.CxWSResponseSystemLanguages Implements CxPortal.CxPortalWebServiceSoap.GetServerLanguageList
            Return MyBase.Channel.GetServerLanguageList(sessionID)
        End Function
        
        Public Function GetServerLanguageListAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSystemLanguages) Implements CxPortal.CxPortalWebServiceSoap.GetServerLanguageListAsync
            Return MyBase.Channel.GetServerLanguageListAsync(sessionID)
        End Function
        
        Public Function GetSystemSettings(ByVal sessionID As String) As CxPortal.CxWsResponseSystemSettings Implements CxPortal.CxPortalWebServiceSoap.GetSystemSettings
            Return MyBase.Channel.GetSystemSettings(sessionID)
        End Function
        
        Public Function GetSystemSettingsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWsResponseSystemSettings) Implements CxPortal.CxPortalWebServiceSoap.GetSystemSettingsAsync
            Return MyBase.Channel.GetSystemSettingsAsync(sessionID)
        End Function
        
        Public Function VerifySupportedVersion(ByVal clientType As CxPortal.CxClientType, ByVal clientVersion As String, ByVal APIVersion As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.VerifySupportedVersion
            Return MyBase.Channel.VerifySupportedVersion(clientType, clientVersion, APIVersion)
        End Function
        
        Public Function VerifySupportedVersionAsync(ByVal clientType As CxPortal.CxClientType, ByVal clientVersion As String, ByVal APIVersion As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.VerifySupportedVersionAsync
            Return MyBase.Channel.VerifySupportedVersionAsync(clientType, clientVersion, APIVersion)
        End Function
        
        Public Function GetInstallationSettings(ByVal sessionID As String) As CxPortal.CxWSResponseInstallationSettings Implements CxPortal.CxPortalWebServiceSoap.GetInstallationSettings
            Return MyBase.Channel.GetInstallationSettings(sessionID)
        End Function
        
        Public Function GetInstallationSettingsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseInstallationSettings) Implements CxPortal.CxPortalWebServiceSoap.GetInstallationSettingsAsync
            Return MyBase.Channel.GetInstallationSettingsAsync(sessionID)
        End Function
        
        Public Function GetPresetList(ByVal SessionID As String) As CxPortal.CxWSResponsePresetList Implements CxPortal.CxPortalWebServiceSoap.GetPresetList
            Return MyBase.Channel.GetPresetList(SessionID)
        End Function
        
        Public Function GetPresetListAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePresetList) Implements CxPortal.CxPortalWebServiceSoap.GetPresetListAsync
            Return MyBase.Channel.GetPresetListAsync(SessionID)
        End Function
        
        Public Function GetQueryCollection(ByVal sessionId As String) As CxPortal.CxQueryCollectionResponse Implements CxPortal.CxPortalWebServiceSoap.GetQueryCollection
            Return MyBase.Channel.GetQueryCollection(sessionId)
        End Function
        
        Public Function GetQueryCollectionAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxQueryCollectionResponse) Implements CxPortal.CxPortalWebServiceSoap.GetQueryCollectionAsync
            Return MyBase.Channel.GetQueryCollectionAsync(sessionId)
        End Function
        
        Public Function GetQueryCollectionWithInactive(ByVal sessionId As String) As CxPortal.CxQueryCollectionResponse Implements CxPortal.CxPortalWebServiceSoap.GetQueryCollectionWithInactive
            Return MyBase.Channel.GetQueryCollectionWithInactive(sessionId)
        End Function
        
        Public Function GetQueryCollectionWithInactiveAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxQueryCollectionResponse) Implements CxPortal.CxPortalWebServiceSoap.GetQueryCollectionWithInactiveAsync
            Return MyBase.Channel.GetQueryCollectionWithInactiveAsync(sessionId)
        End Function
        
        Public Function GetPresetDetails(ByVal sessionId As String, ByVal id As Long) As CxPortal.CxWSResponsePresetDetails Implements CxPortal.CxPortalWebServiceSoap.GetPresetDetails
            Return MyBase.Channel.GetPresetDetails(sessionId, id)
        End Function
        
        Public Function GetPresetDetailsAsync(ByVal sessionId As String, ByVal id As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePresetDetails) Implements CxPortal.CxPortalWebServiceSoap.GetPresetDetailsAsync
            Return MyBase.Channel.GetPresetDetailsAsync(sessionId, id)
        End Function
        
        Public Function CreateNewPreset(ByVal sessionId As String, ByVal presrt As CxPortal.CxPresetDetails) As CxPortal.CxWSResponsePresetDetails Implements CxPortal.CxPortalWebServiceSoap.CreateNewPreset
            Return MyBase.Channel.CreateNewPreset(sessionId, presrt)
        End Function
        
        Public Function CreateNewPresetAsync(ByVal sessionId As String, ByVal presrt As CxPortal.CxPresetDetails) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePresetDetails) Implements CxPortal.CxPortalWebServiceSoap.CreateNewPresetAsync
            Return MyBase.Channel.CreateNewPresetAsync(sessionId, presrt)
        End Function
        
        Public Function UpdatePreset(ByVal sessionId As String, ByVal presrt As CxPortal.CxPresetDetails) As CxPortal.CxWSResponsePresetDetails Implements CxPortal.CxPortalWebServiceSoap.UpdatePreset
            Return MyBase.Channel.UpdatePreset(sessionId, presrt)
        End Function
        
        Public Function UpdatePresetAsync(ByVal sessionId As String, ByVal presrt As CxPortal.CxPresetDetails) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePresetDetails) Implements CxPortal.CxPortalWebServiceSoap.UpdatePresetAsync
            Return MyBase.Channel.UpdatePresetAsync(sessionId, presrt)
        End Function
        
        Public Function DeletePreset(ByVal sessionId As String, ByVal id As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.DeletePreset
            Return MyBase.Channel.DeletePreset(sessionId, id)
        End Function
        
        Public Function DeletePresetAsync(ByVal sessionId As String, ByVal id As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.DeletePresetAsync
            Return MyBase.Channel.DeletePresetAsync(sessionId, id)
        End Function
        
        Public Function IsValidPresetName(ByVal sessionID As String, ByVal presetName As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.IsValidPresetName
            Return MyBase.Channel.IsValidPresetName(sessionID, presetName)
        End Function
        
        Public Function IsValidPresetNameAsync(ByVal sessionID As String, ByVal presetName As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.IsValidPresetNameAsync
            Return MyBase.Channel.IsValidPresetNameAsync(sessionID, presetName)
        End Function
        
        Public Function GetQueriesCategories(ByVal sessionId As String) As CxPortal.CxWSResponseQueriesCategories Implements CxPortal.CxPortalWebServiceSoap.GetQueriesCategories
            Return MyBase.Channel.GetQueriesCategories(sessionId)
        End Function
        
        Public Function GetQueriesCategoriesAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueriesCategories) Implements CxPortal.CxPortalWebServiceSoap.GetQueriesCategoriesAsync
            Return MyBase.Channel.GetQueriesCategoriesAsync(sessionId)
        End Function
        
        Public Function GetDetailsForQueryVersionCode(ByVal sessionId As String, ByVal queryVersionCode As Long) As CxPortal.CxWSQueryVersionDetailsResponse Implements CxPortal.CxPortalWebServiceSoap.GetDetailsForQueryVersionCode
            Return MyBase.Channel.GetDetailsForQueryVersionCode(sessionId, queryVersionCode)
        End Function
        
        Public Function GetDetailsForQueryVersionCodeAsync(ByVal sessionId As String, ByVal queryVersionCode As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSQueryVersionDetailsResponse) Implements CxPortal.CxPortalWebServiceSoap.GetDetailsForQueryVersionCodeAsync
            Return MyBase.Channel.GetDetailsForQueryVersionCodeAsync(sessionId, queryVersionCode)
        End Function
        
        Public Function GetQueriesForScan(ByVal sessionID As String, ByVal scanId As Long) As CxPortal.CxWSResponceQuerisForScan Implements CxPortal.CxPortalWebServiceSoap.GetQueriesForScan
            Return MyBase.Channel.GetQueriesForScan(sessionID, scanId)
        End Function
        
        Public Function GetQueriesForScanAsync(ByVal sessionID As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceQuerisForScan) Implements CxPortal.CxPortalWebServiceSoap.GetQueriesForScanAsync
            Return MyBase.Channel.GetQueriesForScanAsync(sessionID, scanId)
        End Function
        
        Public Function GetResultsForQuery(ByVal sessionID As String, ByVal scanId As Long, ByVal queryId As Long) As CxPortal.CxWSResponceScanResults Implements CxPortal.CxPortalWebServiceSoap.GetResultsForQuery
            Return MyBase.Channel.GetResultsForQuery(sessionID, scanId, queryId)
        End Function
        
        Public Function GetResultsForQueryAsync(ByVal sessionID As String, ByVal scanId As Long, ByVal queryId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanResults) Implements CxPortal.CxPortalWebServiceSoap.GetResultsForQueryAsync
            Return MyBase.Channel.GetResultsForQueryAsync(sessionID, scanId, queryId)
        End Function
        
        Public Function GetResultsForQueryQroup(ByVal sessionID As String, ByVal scanId As Long, ByVal queryGroupId As Long) As CxPortal.CxWSResponceScanResults Implements CxPortal.CxPortalWebServiceSoap.GetResultsForQueryQroup
            Return MyBase.Channel.GetResultsForQueryQroup(sessionID, scanId, queryGroupId)
        End Function
        
        Public Function GetResultsForQueryQroupAsync(ByVal sessionID As String, ByVal scanId As Long, ByVal queryGroupId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanResults) Implements CxPortal.CxPortalWebServiceSoap.GetResultsForQueryQroupAsync
            Return MyBase.Channel.GetResultsForQueryQroupAsync(sessionID, scanId, queryGroupId)
        End Function
        
        Public Function GetResultsForScanByLanguage(ByVal sessionID As String, ByVal scanId As Long, ByVal Language As String) As CxPortal.CxWSResponceScanResults Implements CxPortal.CxPortalWebServiceSoap.GetResultsForScanByLanguage
            Return MyBase.Channel.GetResultsForScanByLanguage(sessionID, scanId, Language)
        End Function
        
        Public Function GetResultsForScanByLanguageAsync(ByVal sessionID As String, ByVal scanId As Long, ByVal Language As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanResults) Implements CxPortal.CxPortalWebServiceSoap.GetResultsForScanByLanguageAsync
            Return MyBase.Channel.GetResultsForScanByLanguageAsync(sessionID, scanId, Language)
        End Function
        
        Public Function GetResultsForScan(ByVal sessionID As String, ByVal scanId As Long) As CxPortal.CxWSResponceScanResults Implements CxPortal.CxPortalWebServiceSoap.GetResultsForScan
            Return MyBase.Channel.GetResultsForScan(sessionID, scanId)
        End Function
        
        Public Function GetResultsForScanAsync(ByVal sessionID As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanResults) Implements CxPortal.CxPortalWebServiceSoap.GetResultsForScanAsync
            Return MyBase.Channel.GetResultsForScanAsync(sessionID, scanId)
        End Function
        
        Public Function GetResultPath(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long) As CxPortal.CxWSResponceResultPath Implements CxPortal.CxPortalWebServiceSoap.GetResultPath
            Return MyBase.Channel.GetResultPath(sessionId, scanId, pathId)
        End Function
        
        Public Function GetResultPathAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceResultPath) Implements CxPortal.CxPortalWebServiceSoap.GetResultPathAsync
            Return MyBase.Channel.GetResultPathAsync(sessionId, scanId, pathId)
        End Function
        
        Public Function GetPathCommentsHistory(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long, ByVal labelType As CxPortal.ResultLabelTypeEnum) As CxPortal.CxWSResponceResultPath Implements CxPortal.CxPortalWebServiceSoap.GetPathCommentsHistory
            Return MyBase.Channel.GetPathCommentsHistory(sessionId, scanId, pathId, labelType)
        End Function
        
        Public Function GetPathCommentsHistoryAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long, ByVal labelType As CxPortal.ResultLabelTypeEnum) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceResultPath) Implements CxPortal.CxPortalWebServiceSoap.GetPathCommentsHistoryAsync
            Return MyBase.Channel.GetPathCommentsHistoryAsync(sessionId, scanId, pathId, labelType)
        End Function
        
        Public Function GetFileNamesForPath(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long) As CxPortal.CxWSResponceFileNames Implements CxPortal.CxPortalWebServiceSoap.GetFileNamesForPath
            Return MyBase.Channel.GetFileNamesForPath(sessionId, scanId, pathId)
        End Function
        
        Public Function GetFileNamesForPathAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal pathId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceFileNames) Implements CxPortal.CxPortalWebServiceSoap.GetFileNamesForPathAsync
            Return MyBase.Channel.GetFileNamesForPathAsync(sessionId, scanId, pathId)
        End Function
        
        Public Function GetResultPathsForQuery(ByVal sessionId As String, ByVal scanId As Long, ByVal queryId As Long) As CxPortal.CxWSResponseResultPaths Implements CxPortal.CxPortalWebServiceSoap.GetResultPathsForQuery
            Return MyBase.Channel.GetResultPathsForQuery(sessionId, scanId, queryId)
        End Function
        
        Public Function GetResultPathsForQueryAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal queryId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultPaths) Implements CxPortal.CxPortalWebServiceSoap.GetResultPathsForQueryAsync
            Return MyBase.Channel.GetResultPathsForQueryAsync(sessionId, scanId, queryId)
        End Function
        
        Public Function GetResultGraphForQuery(ByVal sessionId As String, ByVal scanId As Long, ByVal queryId As Long, ByVal maxNodes As Integer, ByVal graphType As CxPortal.CxWSGraphTypeEnum, ByVal includeNotExploitable As Boolean) As CxPortal.CxWSResponseResultGraph Implements CxPortal.CxPortalWebServiceSoap.GetResultGraphForQuery
            Return MyBase.Channel.GetResultGraphForQuery(sessionId, scanId, queryId, maxNodes, graphType, includeNotExploitable)
        End Function
        
        Public Function GetResultGraphForQueryAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal queryId As Long, ByVal maxNodes As Integer, ByVal graphType As CxPortal.CxWSGraphTypeEnum, ByVal includeNotExploitable As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultGraph) Implements CxPortal.CxPortalWebServiceSoap.GetResultGraphForQueryAsync
            Return MyBase.Channel.GetResultGraphForQueryAsync(sessionId, scanId, queryId, maxNodes, graphType, includeNotExploitable)
        End Function
        
        Public Function GetResultsBySeverity(ByVal sessionId As String, ByVal scanId As Long, ByVal Severity As Integer, ByVal Language As String) As CxPortal.CxWSResponceScanResults Implements CxPortal.CxPortalWebServiceSoap.GetResultsBySeverity
            Return MyBase.Channel.GetResultsBySeverity(sessionId, scanId, Severity, Language)
        End Function
        
        Public Function GetResultsBySeverityAsync(ByVal sessionId As String, ByVal scanId As Long, ByVal Severity As Integer, ByVal Language As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanResults) Implements CxPortal.CxPortalWebServiceSoap.GetResultsBySeverityAsync
            Return MyBase.Channel.GetResultsBySeverityAsync(sessionId, scanId, Severity, Language)
        End Function
        
        Public Function GetCustomFields(ByVal sessionID As String) As CxPortal.CxWSResponseCustomFields Implements CxPortal.CxPortalWebServiceSoap.GetCustomFields
            Return MyBase.Channel.GetCustomFields(sessionID)
        End Function
        
        Public Function GetCustomFieldsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseCustomFields) Implements CxPortal.CxPortalWebServiceSoap.GetCustomFieldsAsync
            Return MyBase.Channel.GetCustomFieldsAsync(sessionID)
        End Function
        
        Public Function SaveCustomFields(ByVal sessionID As String, ByVal customFields() As CxPortal.CxWSCustomField) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SaveCustomFields
            Return MyBase.Channel.SaveCustomFields(sessionID, customFields)
        End Function
        
        Public Function SaveCustomFieldsAsync(ByVal sessionID As String, ByVal customFields() As CxPortal.CxWSCustomField) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SaveCustomFieldsAsync
            Return MyBase.Channel.SaveCustomFieldsAsync(sessionID, customFields)
        End Function
        
        Public Function DeleteCustomField(ByVal sessionID As String, ByVal customFieldId As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.DeleteCustomField
            Return MyBase.Channel.DeleteCustomField(sessionID, customFieldId)
        End Function
        
        Public Function DeleteCustomFieldAsync(ByVal sessionID As String, ByVal customFieldId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.DeleteCustomFieldAsync
            Return MyBase.Channel.DeleteCustomFieldAsync(sessionID, customFieldId)
        End Function
        
        Public Function GetCustomFieldValues(ByVal sessionID As String, ByVal customFieldId As Long) As CxPortal.CxWSResponseCustomFieldValues Implements CxPortal.CxPortalWebServiceSoap.GetCustomFieldValues
            Return MyBase.Channel.GetCustomFieldValues(sessionID, customFieldId)
        End Function
        
        Public Function GetCustomFieldValuesAsync(ByVal sessionID As String, ByVal customFieldId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseCustomFieldValues) Implements CxPortal.CxPortalWebServiceSoap.GetCustomFieldValuesAsync
            Return MyBase.Channel.GetCustomFieldValuesAsync(sessionID, customFieldId)
        End Function
        
        Public Function SavePredefinedCommands(ByVal sessionID As String, ByVal predefinedCommands() As CxPortal.CxPredefinedCommand) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SavePredefinedCommands
            Return MyBase.Channel.SavePredefinedCommands(sessionID, predefinedCommands)
        End Function
        
        Public Function SavePredefinedCommandsAsync(ByVal sessionID As String, ByVal predefinedCommands() As CxPortal.CxPredefinedCommand) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SavePredefinedCommandsAsync
            Return MyBase.Channel.SavePredefinedCommandsAsync(sessionID, predefinedCommands)
        End Function
        
        Public Function GetPredefinedCommands(ByVal sessionId As String) As CxPortal.CxWSResponsePredefinedCommands Implements CxPortal.CxPortalWebServiceSoap.GetPredefinedCommands
            Return MyBase.Channel.GetPredefinedCommands(sessionId)
        End Function
        
        Public Function GetPredefinedCommandsAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePredefinedCommands) Implements CxPortal.CxPortalWebServiceSoap.GetPredefinedCommandsAsync
            Return MyBase.Channel.GetPredefinedCommandsAsync(sessionId)
        End Function
        
        Public Function GetExecutableList(ByVal sessionId As String) As CxPortal.CxWSResponseNameList Implements CxPortal.CxPortalWebServiceSoap.GetExecutableList
            Return MyBase.Channel.GetExecutableList(sessionId)
        End Function
        
        Public Function GetExecutableListAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseNameList) Implements CxPortal.CxPortalWebServiceSoap.GetExecutableListAsync
            Return MyBase.Channel.GetExecutableListAsync(sessionId)
        End Function
        
        Public Function UpdatePermission(ByVal sessionID As String, ByVal permission As CxPortal.CxPermission, ByVal teamId As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdatePermission
            Return MyBase.Channel.UpdatePermission(sessionID, permission, teamId)
        End Function
        
        Public Function UpdatePermissionAsync(ByVal sessionID As String, ByVal permission As CxPortal.CxPermission, ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdatePermissionAsync
            Return MyBase.Channel.UpdatePermissionAsync(sessionID, permission, teamId)
        End Function
        
        Public Function GetProjectAssignUsers(ByVal sessionID As String, ByVal projectId As Long) As CxPortal.CxWSResponseUserData Implements CxPortal.CxPortalWebServiceSoap.GetProjectAssignUsers
            Return MyBase.Channel.GetProjectAssignUsers(sessionID, projectId)
        End Function
        
        Public Function GetProjectAssignUsersAsync(ByVal sessionID As String, ByVal projectId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseUserData) Implements CxPortal.CxPortalWebServiceSoap.GetProjectAssignUsersAsync
            Return MyBase.Channel.GetProjectAssignUsersAsync(sessionID, projectId)
        End Function
        
        Public Function GetProjectAssignUsersList(ByVal sessionID As String, ByVal projectId As Long) As CxPortal.CxWSResponseAssignUsers Implements CxPortal.CxPortalWebServiceSoap.GetProjectAssignUsersList
            Return MyBase.Channel.GetProjectAssignUsersList(sessionID, projectId)
        End Function
        
        Public Function GetProjectAssignUsersListAsync(ByVal sessionID As String, ByVal projectId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseAssignUsers) Implements CxPortal.CxPortalWebServiceSoap.GetProjectAssignUsersListAsync
            Return MyBase.Channel.GetProjectAssignUsersListAsync(sessionID, projectId)
        End Function
        
        Public Function IsAllowAutoSignIn() As CxPortal.CxWSResponseBool Implements CxPortal.CxPortalWebServiceSoap.IsAllowAutoSignIn
            Return MyBase.Channel.IsAllowAutoSignIn
        End Function
        
        Public Function IsAllowAutoSignInAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBool) Implements CxPortal.CxPortalWebServiceSoap.IsAllowAutoSignInAsync
            Return MyBase.Channel.IsAllowAutoSignInAsync
        End Function
        
        Public Function SaveSubsetResults(ByVal sessionId As String, ByVal projectId As Long, ByVal ScanId As Long, ByVal pathIds() As Long, ByVal comments As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SaveSubsetResults
            Return MyBase.Channel.SaveSubsetResults(sessionId, projectId, ScanId, pathIds, comments)
        End Function
        
        Public Function SaveSubsetResultsAsync(ByVal sessionId As String, ByVal projectId As Long, ByVal ScanId As Long, ByVal pathIds() As Long, ByVal comments As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SaveSubsetResultsAsync
            Return MyBase.Channel.SaveSubsetResultsAsync(sessionId, projectId, ScanId, pathIds, comments)
        End Function
        
        Public Function GetPivotData(ByVal SessionID As String, ByVal PivotParams As CxPortal.CxPivotDataRequest) As CxPortal.CxWSResponsePivotTable Implements CxPortal.CxPortalWebServiceSoap.GetPivotData
            Return MyBase.Channel.GetPivotData(SessionID, PivotParams)
        End Function
        
        Public Function GetPivotDataAsync(ByVal SessionID As String, ByVal PivotParams As CxPortal.CxPivotDataRequest) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePivotTable) Implements CxPortal.CxPortalWebServiceSoap.GetPivotDataAsync
            Return MyBase.Channel.GetPivotDataAsync(SessionID, PivotParams)
        End Function
        
        Public Function GetPivotLayouts(ByVal SessionID As String) As CxPortal.CxWSResponsePivotLayouts Implements CxPortal.CxPortalWebServiceSoap.GetPivotLayouts
            Return MyBase.Channel.GetPivotLayouts(SessionID)
        End Function
        
        Public Function GetPivotLayoutsAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePivotLayouts) Implements CxPortal.CxPortalWebServiceSoap.GetPivotLayoutsAsync
            Return MyBase.Channel.GetPivotLayoutsAsync(SessionID)
        End Function
        
        Public Function SavePivotLayout(ByVal SessionID As String, ByVal layout As CxPortal.CxPivotLayout) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SavePivotLayout
            Return MyBase.Channel.SavePivotLayout(SessionID, layout)
        End Function
        
        Public Function SavePivotLayoutAsync(ByVal SessionID As String, ByVal layout As CxPortal.CxPivotLayout) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SavePivotLayoutAsync
            Return MyBase.Channel.SavePivotLayoutAsync(SessionID, layout)
        End Function
        
        Public Function DeletePivotLayout(ByVal SessionID As String, ByVal LayoutID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.DeletePivotLayout
            Return MyBase.Channel.DeletePivotLayout(SessionID, LayoutID)
        End Function
        
        Public Function DeletePivotLayoutAsync(ByVal SessionID As String, ByVal LayoutID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.DeletePivotLayoutAsync
            Return MyBase.Channel.DeletePivotLayoutAsync(SessionID, LayoutID)
        End Function
        
        Public Function GetQueryShortDescription(ByVal sessionId As String, ByVal queryId As Long) As CxPortal.CxWSResponseShortQueryDescription Implements CxPortal.CxPortalWebServiceSoap.GetQueryShortDescription
            Return MyBase.Channel.GetQueryShortDescription(sessionId, queryId)
        End Function
        
        Public Function GetQueryShortDescriptionAsync(ByVal sessionId As String, ByVal queryId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseShortQueryDescription) Implements CxPortal.CxPortalWebServiceSoap.GetQueryShortDescriptionAsync
            Return MyBase.Channel.GetQueryShortDescriptionAsync(sessionId, queryId)
        End Function
        
        Public Function RegisterSaasPendingUser(ByVal pendingUser As CxPortal.SaasPendingUser, ByVal activationPageUrl As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.RegisterSaasPendingUser
            Return MyBase.Channel.RegisterSaasPendingUser(pendingUser, activationPageUrl)
        End Function
        
        Public Function RegisterSaasPendingUserAsync(ByVal pendingUser As CxPortal.SaasPendingUser, ByVal activationPageUrl As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.RegisterSaasPendingUserAsync
            Return MyBase.Channel.RegisterSaasPendingUserAsync(pendingUser, activationPageUrl)
        End Function
        
        Public Function ActivateSaasUser(ByVal userToken As String) As CxPortal.CxWSResponseSaasLoginData Implements CxPortal.CxPortalWebServiceSoap.ActivateSaasUser
            Return MyBase.Channel.ActivateSaasUser(userToken)
        End Function
        
        Public Function ActivateSaasUserAsync(ByVal userToken As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSaasLoginData) Implements CxPortal.CxPortalWebServiceSoap.ActivateSaasUserAsync
            Return MyBase.Channel.ActivateSaasUserAsync(userToken)
        End Function
        
        Public Function GetSaasPackages() As CxPortal.CxWSResponseSaasPackage Implements CxPortal.CxPortalWebServiceSoap.GetSaasPackages
            Return MyBase.Channel.GetSaasPackages
        End Function
        
        Public Function GetSaasPackagesAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSaasPackage) Implements CxPortal.CxPortalWebServiceSoap.GetSaasPackagesAsync
            Return MyBase.Channel.GetSaasPackagesAsync
        End Function
        
        Public Function GetTeamSaaSPackage(ByVal teamId As String) As CxPortal.CxWSResponseSaasPackage Implements CxPortal.CxPortalWebServiceSoap.GetTeamSaaSPackage
            Return MyBase.Channel.GetTeamSaaSPackage(teamId)
        End Function
        
        Public Function GetTeamSaaSPackageAsync(ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSaasPackage) Implements CxPortal.CxPortalWebServiceSoap.GetTeamSaaSPackageAsync
            Return MyBase.Channel.GetTeamSaaSPackageAsync(teamId)
        End Function
        
        Public Function SaasLogin(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer) As CxPortal.CxWSResponseSaasLoginData Implements CxPortal.CxPortalWebServiceSoap.SaasLogin
            Return MyBase.Channel.SaasLogin(applicationCredentials, lcid)
        End Function
        
        Public Function SaasLoginAsync(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSaasLoginData) Implements CxPortal.CxPortalWebServiceSoap.SaasLoginAsync
            Return MyBase.Channel.SaasLoginAsync(applicationCredentials, lcid)
        End Function
        
        Public Function SendEmailForSales(ByVal sessionID As String, ByVal emailData As CxPortal.EmailForSalesData) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SendEmailForSales
            Return MyBase.Channel.SendEmailForSales(sessionID, emailData)
        End Function
        
        Public Function SendEmailForSalesAsync(ByVal sessionID As String, ByVal emailData As CxPortal.EmailForSalesData) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SendEmailForSalesAsync
            Return MyBase.Channel.SendEmailForSalesAsync(sessionID, emailData)
        End Function
        
        Public Function GetEngineServers(ByVal sessionID As String) As CxPortal.CxWSResponseEngineServers Implements CxPortal.CxPortalWebServiceSoap.GetEngineServers
            Return MyBase.Channel.GetEngineServers(sessionID)
        End Function
        
        Public Function GetEngineServersAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseEngineServers) Implements CxPortal.CxPortalWebServiceSoap.GetEngineServersAsync
            Return MyBase.Channel.GetEngineServersAsync(sessionID)
        End Function
        
        Public Function UpdateEngineServer(ByVal sessionID As String, ByVal engine As CxPortal.CxEngineServer) As CxPortal.CxWSResponseEngineServerId Implements CxPortal.CxPortalWebServiceSoap.UpdateEngineServer
            Return MyBase.Channel.UpdateEngineServer(sessionID, engine)
        End Function
        
        Public Function UpdateEngineServerAsync(ByVal sessionID As String, ByVal engine As CxPortal.CxEngineServer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseEngineServerId) Implements CxPortal.CxPortalWebServiceSoap.UpdateEngineServerAsync
            Return MyBase.Channel.UpdateEngineServerAsync(sessionID, engine)
        End Function
        
        Public Function CreateEngineServer(ByVal sessionID As String, ByVal engine As CxPortal.CxEngineServer) As CxPortal.CxWSResponseEngineServerId Implements CxPortal.CxPortalWebServiceSoap.CreateEngineServer
            Return MyBase.Channel.CreateEngineServer(sessionID, engine)
        End Function
        
        Public Function CreateEngineServerAsync(ByVal sessionID As String, ByVal engine As CxPortal.CxEngineServer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseEngineServerId) Implements CxPortal.CxPortalWebServiceSoap.CreateEngineServerAsync
            Return MyBase.Channel.CreateEngineServerAsync(sessionID, engine)
        End Function
        
        Public Function DeleteEngineServer(ByVal sessionID As String, ByVal id As Long) As CxPortal.CxWSResponseEngineServerId Implements CxPortal.CxPortalWebServiceSoap.DeleteEngineServer
            Return MyBase.Channel.DeleteEngineServer(sessionID, id)
        End Function
        
        Public Function DeleteEngineServerAsync(ByVal sessionID As String, ByVal id As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseEngineServerId) Implements CxPortal.CxPortalWebServiceSoap.DeleteEngineServerAsync
            Return MyBase.Channel.DeleteEngineServerAsync(sessionID, id)
        End Function
        
        Public Function Scan(ByVal sessionId As String, ByVal args As CxPortal.CliScanArgs) As CxPortal.CxWSResponseRunID Implements CxPortal.CxPortalWebServiceSoap.Scan
            Return MyBase.Channel.Scan(sessionId, args)
        End Function
        
        Public Function ScanAsync(ByVal sessionId As String, ByVal args As CxPortal.CliScanArgs) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID) Implements CxPortal.CxPortalWebServiceSoap.ScanAsync
            Return MyBase.Channel.ScanAsync(sessionId, args)
        End Function
        
        Public Function ExportQueries(ByVal sessionId As String, ByVal queryIds() As Long) As CxPortal.CxWSResponseQueries Implements CxPortal.CxPortalWebServiceSoap.ExportQueries
            Return MyBase.Channel.ExportQueries(sessionId, queryIds)
        End Function
        
        Public Function ExportQueriesAsync(ByVal sessionId As String, ByVal queryIds() As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueries) Implements CxPortal.CxPortalWebServiceSoap.ExportQueriesAsync
            Return MyBase.Channel.ExportQueriesAsync(sessionId, queryIds)
        End Function
        
        Public Function ExportPreset(ByVal sessionId As String, ByVal presetId As Long) As CxPortal.CxWSResponsePreset Implements CxPortal.CxPortalWebServiceSoap.ExportPreset
            Return MyBase.Channel.ExportPreset(sessionId, presetId)
        End Function
        
        Public Function ExportPresetAsync(ByVal sessionId As String, ByVal presetId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePreset) Implements CxPortal.CxPortalWebServiceSoap.ExportPresetAsync
            Return MyBase.Channel.ExportPresetAsync(sessionId, presetId)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CxPortal_CxPortalWebServiceSoap_ImportQueries(ByVal request As CxPortal.ImportQueriesRequest) As CxPortal.ImportQueriesResponse Implements CxPortal.CxPortalWebServiceSoap.ImportQueries
            Return MyBase.Channel.ImportQueries(request)
        End Function
        
        Public Function ImportQueries(ByVal sessionId As String, ByVal importedFile() As Byte) As CxPortal.CxWSImportQueriesRepsonse
            Dim inValue As CxPortal.ImportQueriesRequest = New CxPortal.ImportQueriesRequest()
            inValue.sessionId = sessionId
            inValue.importedFile = importedFile
            Dim retVal As CxPortal.ImportQueriesResponse = CType(Me,CxPortal.CxPortalWebServiceSoap).ImportQueries(inValue)
            Return retVal.ImportQueriesResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CxPortal_CxPortalWebServiceSoap_ImportQueriesAsync(ByVal request As CxPortal.ImportQueriesRequest) As System.Threading.Tasks.Task(Of CxPortal.ImportQueriesResponse) Implements CxPortal.CxPortalWebServiceSoap.ImportQueriesAsync
            Return MyBase.Channel.ImportQueriesAsync(request)
        End Function
        
        Public Function ImportQueriesAsync(ByVal sessionId As String, ByVal importedFile() As Byte) As System.Threading.Tasks.Task(Of CxPortal.ImportQueriesResponse)
            Dim inValue As CxPortal.ImportQueriesRequest = New CxPortal.ImportQueriesRequest()
            inValue.sessionId = sessionId
            inValue.importedFile = importedFile
            Return CType(Me,CxPortal.CxPortalWebServiceSoap).ImportQueriesAsync(inValue)
        End Function
        
        Public Function GetImportQueriesStatus(ByVal sessionId As String, ByVal requestId As Long) As CxPortal.CxWSImportQueriesRepsonse Implements CxPortal.CxPortalWebServiceSoap.GetImportQueriesStatus
            Return MyBase.Channel.GetImportQueriesStatus(sessionId, requestId)
        End Function
        
        Public Function GetImportQueriesStatusAsync(ByVal sessionId As String, ByVal requestId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSImportQueriesRepsonse) Implements CxPortal.CxPortalWebServiceSoap.GetImportQueriesStatusAsync
            Return MyBase.Channel.GetImportQueriesStatusAsync(sessionId, requestId)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CxPortal_CxPortalWebServiceSoap_GetExistingQueries(ByVal request As CxPortal.GetExistingQueriesRequest) As CxPortal.GetExistingQueriesResponse Implements CxPortal.CxPortalWebServiceSoap.GetExistingQueries
            Return MyBase.Channel.GetExistingQueries(request)
        End Function
        
        Public Function GetExistingQueries(ByVal sessionId As String, ByVal importedFile() As Byte) As CxPortal.CxWSResponseTransportedQueries
            Dim inValue As CxPortal.GetExistingQueriesRequest = New CxPortal.GetExistingQueriesRequest()
            inValue.sessionId = sessionId
            inValue.importedFile = importedFile
            Dim retVal As CxPortal.GetExistingQueriesResponse = CType(Me,CxPortal.CxPortalWebServiceSoap).GetExistingQueries(inValue)
            Return retVal.GetExistingQueriesResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CxPortal_CxPortalWebServiceSoap_GetExistingQueriesAsync(ByVal request As CxPortal.GetExistingQueriesRequest) As System.Threading.Tasks.Task(Of CxPortal.GetExistingQueriesResponse) Implements CxPortal.CxPortalWebServiceSoap.GetExistingQueriesAsync
            Return MyBase.Channel.GetExistingQueriesAsync(request)
        End Function
        
        Public Function GetExistingQueriesAsync(ByVal sessionId As String, ByVal importedFile() As Byte) As System.Threading.Tasks.Task(Of CxPortal.GetExistingQueriesResponse)
            Dim inValue As CxPortal.GetExistingQueriesRequest = New CxPortal.GetExistingQueriesRequest()
            inValue.sessionId = sessionId
            inValue.importedFile = importedFile
            Return CType(Me,CxPortal.CxPortalWebServiceSoap).GetExistingQueriesAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CxPortal_CxPortalWebServiceSoap_GetExistingPresetQueries(ByVal request As CxPortal.GetExistingPresetQueriesRequest) As CxPortal.GetExistingPresetQueriesResponse Implements CxPortal.CxPortalWebServiceSoap.GetExistingPresetQueries
            Return MyBase.Channel.GetExistingPresetQueries(request)
        End Function
        
        Public Function GetExistingPresetQueries(ByVal sessionId As String, ByVal importedFile() As Byte) As CxPortal.CxWSResponseExistsingTransportedPresetQueries
            Dim inValue As CxPortal.GetExistingPresetQueriesRequest = New CxPortal.GetExistingPresetQueriesRequest()
            inValue.sessionId = sessionId
            inValue.importedFile = importedFile
            Dim retVal As CxPortal.GetExistingPresetQueriesResponse = CType(Me,CxPortal.CxPortalWebServiceSoap).GetExistingPresetQueries(inValue)
            Return retVal.GetExistingPresetQueriesResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CxPortal_CxPortalWebServiceSoap_GetExistingPresetQueriesAsync(ByVal request As CxPortal.GetExistingPresetQueriesRequest) As System.Threading.Tasks.Task(Of CxPortal.GetExistingPresetQueriesResponse) Implements CxPortal.CxPortalWebServiceSoap.GetExistingPresetQueriesAsync
            Return MyBase.Channel.GetExistingPresetQueriesAsync(request)
        End Function
        
        Public Function GetExistingPresetQueriesAsync(ByVal sessionId As String, ByVal importedFile() As Byte) As System.Threading.Tasks.Task(Of CxPortal.GetExistingPresetQueriesResponse)
            Dim inValue As CxPortal.GetExistingPresetQueriesRequest = New CxPortal.GetExistingPresetQueriesRequest()
            inValue.sessionId = sessionId
            inValue.importedFile = importedFile
            Return CType(Me,CxPortal.CxPortalWebServiceSoap).GetExistingPresetQueriesAsync(inValue)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CxPortal_CxPortalWebServiceSoap_ImportPreset(ByVal request As CxPortal.ImportPresetRequest) As CxPortal.ImportPresetResponse Implements CxPortal.CxPortalWebServiceSoap.ImportPreset
            Return MyBase.Channel.ImportPreset(request)
        End Function
        
        Public Function ImportPreset(ByVal sessionId As String, ByVal importedFile() As Byte) As CxPortal.CxWSImportQueriesRepsonse
            Dim inValue As CxPortal.ImportPresetRequest = New CxPortal.ImportPresetRequest()
            inValue.sessionId = sessionId
            inValue.importedFile = importedFile
            Dim retVal As CxPortal.ImportPresetResponse = CType(Me,CxPortal.CxPortalWebServiceSoap).ImportPreset(inValue)
            Return retVal.ImportPresetResult
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CxPortal_CxPortalWebServiceSoap_ImportPresetAsync(ByVal request As CxPortal.ImportPresetRequest) As System.Threading.Tasks.Task(Of CxPortal.ImportPresetResponse) Implements CxPortal.CxPortalWebServiceSoap.ImportPresetAsync
            Return MyBase.Channel.ImportPresetAsync(request)
        End Function
        
        Public Function ImportPresetAsync(ByVal sessionId As String, ByVal importedFile() As Byte) As System.Threading.Tasks.Task(Of CxPortal.ImportPresetResponse)
            Dim inValue As CxPortal.ImportPresetRequest = New CxPortal.ImportPresetRequest()
            inValue.sessionId = sessionId
            inValue.importedFile = importedFile
            Return CType(Me,CxPortal.CxPortalWebServiceSoap).ImportPresetAsync(inValue)
        End Function
        
        Public Function CreateScanReport(ByVal SessionID As String, ByVal Report As CxPortal.CxWSFilteredReportRequest) As CxPortal.CxWSCreateReportResponse Implements CxPortal.CxPortalWebServiceSoap.CreateScanReport
            Return MyBase.Channel.CreateScanReport(SessionID, Report)
        End Function
        
        Public Function CreateScanReportAsync(ByVal SessionID As String, ByVal Report As CxPortal.CxWSFilteredReportRequest) As System.Threading.Tasks.Task(Of CxPortal.CxWSCreateReportResponse) Implements CxPortal.CxPortalWebServiceSoap.CreateScanReportAsync
            Return MyBase.Channel.CreateScanReportAsync(SessionID, Report)
        End Function
        
        Public Function GetScanReportStatus(ByVal SessionID As String, ByVal ReportID As Long) As CxPortal.CxWSReportStatusResponse Implements CxPortal.CxPortalWebServiceSoap.GetScanReportStatus
            Return MyBase.Channel.GetScanReportStatus(SessionID, ReportID)
        End Function
        
        Public Function GetScanReportStatusAsync(ByVal SessionID As String, ByVal ReportID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSReportStatusResponse) Implements CxPortal.CxPortalWebServiceSoap.GetScanReportStatusAsync
            Return MyBase.Channel.GetScanReportStatusAsync(SessionID, ReportID)
        End Function
        
        Public Function GetScanReport(ByVal SessionID As String, ByVal ReportID As Long) As CxPortal.CxWSResponseScanResults Implements CxPortal.CxPortalWebServiceSoap.GetScanReport
            Return MyBase.Channel.GetScanReport(SessionID, ReportID)
        End Function
        
        Public Function GetScanReportAsync(ByVal SessionID As String, ByVal ReportID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScanResults) Implements CxPortal.CxPortalWebServiceSoap.GetScanReportAsync
            Return MyBase.Channel.GetScanReportAsync(SessionID, ReportID)
        End Function
        
        Public Function CancelScanReport(ByVal SessionID As String, ByVal ReportID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.CancelScanReport
            Return MyBase.Channel.CancelScanReport(SessionID, ReportID)
        End Function
        
        Public Function CancelScanReportAsync(ByVal SessionID As String, ByVal ReportID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.CancelScanReportAsync
            Return MyBase.Channel.CancelScanReportAsync(SessionID, ReportID)
        End Function
        
        Public Function SaveUserPreferences(ByVal SessionID As String, ByVal Preferences() As CxPortal.CxUserPreferences) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SaveUserPreferences
            Return MyBase.Channel.SaveUserPreferences(SessionID, Preferences)
        End Function
        
        Public Function SaveUserPreferencesAsync(ByVal SessionID As String, ByVal Preferences() As CxPortal.CxUserPreferences) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SaveUserPreferencesAsync
            Return MyBase.Channel.SaveUserPreferencesAsync(SessionID, Preferences)
        End Function
        
        Public Function GetUserPreferences(ByVal SessionID As String) As CxPortal.CxWSUserPreferencesResponse Implements CxPortal.CxPortalWebServiceSoap.GetUserPreferences
            Return MyBase.Channel.GetUserPreferences(SessionID)
        End Function
        
        Public Function GetUserPreferencesAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSUserPreferencesResponse) Implements CxPortal.CxPortalWebServiceSoap.GetUserPreferencesAsync
            Return MyBase.Channel.GetUserPreferencesAsync(SessionID)
        End Function
        
        Public Function IssueTrackingSystemsAPI(ByVal request As CxPortal.CxWSIssueTrackingSystemRequest) As CxPortal.CxWSIssueTrackingSystemResponse Implements CxPortal.CxPortalWebServiceSoap.IssueTrackingSystemsAPI
            Return MyBase.Channel.IssueTrackingSystemsAPI(request)
        End Function
        
        Public Function IssueTrackingSystemsAPIAsync(ByVal request As CxPortal.CxWSIssueTrackingSystemRequest) As System.Threading.Tasks.Task(Of CxPortal.CxWSIssueTrackingSystemResponse) Implements CxPortal.CxPortalWebServiceSoap.IssueTrackingSystemsAPIAsync
            Return MyBase.Channel.IssueTrackingSystemsAPIAsync(request)
        End Function
        
        Public Function GetVersionNumber() As CxPortal.CxWSCxVersionResponse Implements CxPortal.CxPortalWebServiceSoap.GetVersionNumber
            Return MyBase.Channel.GetVersionNumber
        End Function
        
        Public Function GetVersionNumberAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSCxVersionResponse) Implements CxPortal.CxPortalWebServiceSoap.GetVersionNumberAsync
            Return MyBase.Channel.GetVersionNumberAsync
        End Function
        
        Public Function MoveTeam(ByVal sessionID As String, ByVal sourceID As String, ByVal destenationID As String) As CxPortal.CxWSCxMoveTeamResponse Implements CxPortal.CxPortalWebServiceSoap.MoveTeam
            Return MyBase.Channel.MoveTeam(sessionID, sourceID, destenationID)
        End Function
        
        Public Function MoveTeamAsync(ByVal sessionID As String, ByVal sourceID As String, ByVal destenationID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSCxMoveTeamResponse) Implements CxPortal.CxPortalWebServiceSoap.MoveTeamAsync
            Return MyBase.Channel.MoveTeamAsync(sessionID, sourceID, destenationID)
        End Function
        
        Public Function GetTeamFullPaths(ByVal sessionID As String, ByVal sourceTeamID As String, ByVal destinationTeamID As String) As CxPortal.CxTeamPathsResponseResponse Implements CxPortal.CxPortalWebServiceSoap.GetTeamFullPaths
            Return MyBase.Channel.GetTeamFullPaths(sessionID, sourceTeamID, destinationTeamID)
        End Function
        
        Public Function GetTeamFullPathsAsync(ByVal sessionID As String, ByVal sourceTeamID As String, ByVal destinationTeamID As String) As System.Threading.Tasks.Task(Of CxPortal.CxTeamPathsResponseResponse) Implements CxPortal.CxPortalWebServiceSoap.GetTeamFullPathsAsync
            Return MyBase.Channel.GetTeamFullPathsAsync(sessionID, sourceTeamID, destinationTeamID)
        End Function
        
        Public Function GetProjectScannedDisplayData(ByVal sessionID As String) As CxPortal.CxWSResponseProjectScannedDisplayData Implements CxPortal.CxPortalWebServiceSoap.GetProjectScannedDisplayData
            Return MyBase.Channel.GetProjectScannedDisplayData(sessionID)
        End Function
        
        Public Function GetProjectScannedDisplayDataAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProjectScannedDisplayData) Implements CxPortal.CxPortalWebServiceSoap.GetProjectScannedDisplayDataAsync
            Return MyBase.Channel.GetProjectScannedDisplayDataAsync(sessionID)
        End Function
        
        Public Function GetFailedScansDisplayData(ByVal sessionID As String) As CxPortal.CxWSResponseFailedScansDisplayData Implements CxPortal.CxPortalWebServiceSoap.GetFailedScansDisplayData
            Return MyBase.Channel.GetFailedScansDisplayData(sessionID)
        End Function
        
        Public Function GetFailedScansDisplayDataAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseFailedScansDisplayData) Implements CxPortal.CxPortalWebServiceSoap.GetFailedScansDisplayDataAsync
            Return MyBase.Channel.GetFailedScansDisplayDataAsync(sessionID)
        End Function
        
        Public Function GetTabWidgets(ByVal sessionId As String, ByVal tabId As Integer) As CxPortal.CxWSResponseJSONData Implements CxPortal.CxPortalWebServiceSoap.GetTabWidgets
            Return MyBase.Channel.GetTabWidgets(sessionId, tabId)
        End Function
        
        Public Function GetTabWidgetsAsync(ByVal sessionId As String, ByVal tabId As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseJSONData) Implements CxPortal.CxPortalWebServiceSoap.GetTabWidgetsAsync
            Return MyBase.Channel.GetTabWidgetsAsync(sessionId, tabId)
        End Function
        
        Public Function GetWidgetFilters(ByVal sessionId As String, ByVal widgetIds() As Integer) As CxPortal.CxWSResponseJSONData Implements CxPortal.CxPortalWebServiceSoap.GetWidgetFilters
            Return MyBase.Channel.GetWidgetFilters(sessionId, widgetIds)
        End Function
        
        Public Function GetWidgetFiltersAsync(ByVal sessionId As String, ByVal widgetIds() As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseJSONData) Implements CxPortal.CxPortalWebServiceSoap.GetWidgetFiltersAsync
            Return MyBase.Channel.GetWidgetFiltersAsync(sessionId, widgetIds)
        End Function
        
        Public Function GetWidgetData(ByVal sessionId As String, ByVal widgetId As Integer, ByVal parametersAsJSON As String) As CxPortal.CxWSResponseJSONData Implements CxPortal.CxPortalWebServiceSoap.GetWidgetData
            Return MyBase.Channel.GetWidgetData(sessionId, widgetId, parametersAsJSON)
        End Function
        
        Public Function GetWidgetDataAsync(ByVal sessionId As String, ByVal widgetId As Integer, ByVal parametersAsJSON As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseJSONData) Implements CxPortal.CxPortalWebServiceSoap.GetWidgetDataAsync
            Return MyBase.Channel.GetWidgetDataAsync(sessionId, widgetId, parametersAsJSON)
        End Function
        
        Public Function GetLdapServersConfigurations(ByVal sessionId As String) As CxPortal.CxWSResponseLDAPServersConfiguration Implements CxPortal.CxPortalWebServiceSoap.GetLdapServersConfigurations
            Return MyBase.Channel.GetLdapServersConfigurations(sessionId)
        End Function
        
        Public Function GetLdapServersConfigurationsAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLDAPServersConfiguration) Implements CxPortal.CxPortalWebServiceSoap.GetLdapServersConfigurationsAsync
            Return MyBase.Channel.GetLdapServersConfigurationsAsync(sessionId)
        End Function
        
        Public Function SetLdapServersConfigurations(ByVal sessionId As String, ByVal serverConfigurations() As CxPortal.CxWSLdapServerConfiguration) As CxPortal.CxWSResponseLDAPServersConfiguration Implements CxPortal.CxPortalWebServiceSoap.SetLdapServersConfigurations
            Return MyBase.Channel.SetLdapServersConfigurations(sessionId, serverConfigurations)
        End Function
        
        Public Function SetLdapServersConfigurationsAsync(ByVal sessionId As String, ByVal serverConfigurations() As CxPortal.CxWSLdapServerConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLDAPServersConfiguration) Implements CxPortal.CxPortalWebServiceSoap.SetLdapServersConfigurationsAsync
            Return MyBase.Channel.SetLdapServersConfigurationsAsync(sessionId, serverConfigurations)
        End Function
        
        Public Function TestLdapServerConnection(ByVal sessionId As String, ByVal serverConfiguration As CxPortal.CxWSLdapServerConfiguration) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.TestLdapServerConnection
            Return MyBase.Channel.TestLdapServerConnection(sessionId, serverConfiguration)
        End Function
        
        Public Function TestLdapServerConnectionAsync(ByVal sessionId As String, ByVal serverConfiguration As CxPortal.CxWSLdapServerConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.TestLdapServerConnectionAsync
            Return MyBase.Channel.TestLdapServerConnectionAsync(sessionId, serverConfiguration)
        End Function
        
        Public Function GetConfiguredLdapServerNames(ByVal sessionId As String, ByVal onlySyncEnabled As Boolean) As CxPortal.CxWSResponseIdNamePairList Implements CxPortal.CxPortalWebServiceSoap.GetConfiguredLdapServerNames
            Return MyBase.Channel.GetConfiguredLdapServerNames(sessionId, onlySyncEnabled)
        End Function
        
        Public Function GetConfiguredLdapServerNamesAsync(ByVal sessionId As String, ByVal onlySyncEnabled As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseIdNamePairList) Implements CxPortal.CxPortalWebServiceSoap.GetConfiguredLdapServerNamesAsync
            Return MyBase.Channel.GetConfiguredLdapServerNamesAsync(sessionId, onlySyncEnabled)
        End Function
        
        Public Function GetLdapServerGroups(ByVal sessionId As String, ByVal ldapServerId As Integer, ByVal searchPattern As String, ByVal searchPatternOption As CxPortal.CxWSSearchPatternOption) As CxPortal.CxWSResponseLDAPServerGroups Implements CxPortal.CxPortalWebServiceSoap.GetLdapServerGroups
            Return MyBase.Channel.GetLdapServerGroups(sessionId, ldapServerId, searchPattern, searchPatternOption)
        End Function
        
        Public Function GetLdapServerGroupsAsync(ByVal sessionId As String, ByVal ldapServerId As Integer, ByVal searchPattern As String, ByVal searchPatternOption As CxPortal.CxWSSearchPatternOption) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLDAPServerGroups) Implements CxPortal.CxPortalWebServiceSoap.GetLdapServerGroupsAsync
            Return MyBase.Channel.GetLdapServerGroupsAsync(sessionId, ldapServerId, searchPattern, searchPatternOption)
        End Function
        
        Public Function GetTeamLdapGroupsMapping(ByVal sessionId As String, ByVal teamId As String) As CxPortal.CxWSResponseTeamLdapGroupMappingData Implements CxPortal.CxPortalWebServiceSoap.GetTeamLdapGroupsMapping
            Return MyBase.Channel.GetTeamLdapGroupsMapping(sessionId, teamId)
        End Function
        
        Public Function GetTeamLdapGroupsMappingAsync(ByVal sessionId As String, ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamLdapGroupMappingData) Implements CxPortal.CxPortalWebServiceSoap.GetTeamLdapGroupsMappingAsync
            Return MyBase.Channel.GetTeamLdapGroupsMappingAsync(sessionId, teamId)
        End Function
        
        Public Function SetTeamLdapGroupsMapping(ByVal sessionId As String, ByVal teamId As String, ByVal ldapGroups() As CxPortal.CxWSLdapGroupMapping) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SetTeamLdapGroupsMapping
            Return MyBase.Channel.SetTeamLdapGroupsMapping(sessionId, teamId, ldapGroups)
        End Function
        
        Public Function SetTeamLdapGroupsMappingAsync(ByVal sessionId As String, ByVal teamId As String, ByVal ldapGroups() As CxPortal.CxWSLdapGroupMapping) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SetTeamLdapGroupsMappingAsync
            Return MyBase.Channel.SetTeamLdapGroupsMappingAsync(sessionId, teamId, ldapGroups)
        End Function
        
        Public Function ExecuteDataRetention(ByVal SessionID As String, ByVal dataRetentionConfiguration As CxPortal.CxDataRetentionConfiguration) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.ExecuteDataRetention
            Return MyBase.Channel.ExecuteDataRetention(SessionID, dataRetentionConfiguration)
        End Function
        
        Public Function ExecuteDataRetentionAsync(ByVal SessionID As String, ByVal dataRetentionConfiguration As CxPortal.CxDataRetentionConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.ExecuteDataRetentionAsync
            Return MyBase.Channel.ExecuteDataRetentionAsync(SessionID, dataRetentionConfiguration)
        End Function
        
        Public Function GetDataRetentionStatus(ByVal SessionID As String) As CxPortal.CxWSDataRetentionStatusResponse Implements CxPortal.CxPortalWebServiceSoap.GetDataRetentionStatus
            Return MyBase.Channel.GetDataRetentionStatus(SessionID)
        End Function
        
        Public Function GetDataRetentionStatusAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSDataRetentionStatusResponse) Implements CxPortal.CxPortalWebServiceSoap.GetDataRetentionStatusAsync
            Return MyBase.Channel.GetDataRetentionStatusAsync(SessionID)
        End Function
        
        Public Function GetLatestFinishedDataRetentionRequest(ByVal SessionID As String) As CxPortal.CxWSDataRetentionRequestResponse Implements CxPortal.CxPortalWebServiceSoap.GetLatestFinishedDataRetentionRequest
            Return MyBase.Channel.GetLatestFinishedDataRetentionRequest(SessionID)
        End Function
        
        Public Function GetLatestFinishedDataRetentionRequestAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSDataRetentionRequestResponse) Implements CxPortal.CxPortalWebServiceSoap.GetLatestFinishedDataRetentionRequestAsync
            Return MyBase.Channel.GetLatestFinishedDataRetentionRequestAsync(SessionID)
        End Function
        
        Public Function StopDataRetention(ByVal SessionID As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.StopDataRetention
            Return MyBase.Channel.StopDataRetention(SessionID)
        End Function
        
        Public Function StopDataRetentionAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.StopDataRetentionAsync
            Return MyBase.Channel.StopDataRetentionAsync(SessionID)
        End Function
        
        Public Function GetLicenseExpirationDateForAdmin(ByVal sessionID As String) As CxPortal.CxWSResponseLicenseExpirationDateDetails Implements CxPortal.CxPortalWebServiceSoap.GetLicenseExpirationDateForAdmin
            Return MyBase.Channel.GetLicenseExpirationDateForAdmin(sessionID)
        End Function
        
        Public Function GetLicenseExpirationDateForAdminAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLicenseExpirationDateDetails) Implements CxPortal.CxPortalWebServiceSoap.GetLicenseExpirationDateForAdminAsync
            Return MyBase.Channel.GetLicenseExpirationDateForAdminAsync(sessionID)
        End Function
        
        Public Function AddLicenseExpirationNotification(ByVal sessionID As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.AddLicenseExpirationNotification
            Return MyBase.Channel.AddLicenseExpirationNotification(sessionID)
        End Function
        
        Public Function AddLicenseExpirationNotificationAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.AddLicenseExpirationNotificationAsync
            Return MyBase.Channel.AddLicenseExpirationNotificationAsync(sessionID)
        End Function
        
        Public Function CancelLicenseExpirationNotification(ByVal sessionID As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.CancelLicenseExpirationNotification
            Return MyBase.Channel.CancelLicenseExpirationNotification(sessionID)
        End Function
        
        Public Function CancelLicenseExpirationNotificationAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.CancelLicenseExpirationNotificationAsync
            Return MyBase.Channel.CancelLicenseExpirationNotificationAsync(sessionID)
        End Function
        
        Public Function Warmup() As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.Warmup
            Return MyBase.Channel.Warmup
        End Function
        
        Public Function WarmupAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.WarmupAsync
            Return MyBase.Channel.WarmupAsync
        End Function
        
        Public Function GetProjectsWithScans(ByVal sessionId As String) As CxPortal.CxWSResponseProjectsScansList Implements CxPortal.CxPortalWebServiceSoap.GetProjectsWithScans
            Return MyBase.Channel.GetProjectsWithScans(sessionId)
        End Function
        
        Public Function GetProjectsWithScansAsync(ByVal sessionId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProjectsScansList) Implements CxPortal.CxPortalWebServiceSoap.GetProjectsWithScansAsync
            Return MyBase.Channel.GetProjectsWithScansAsync(sessionId)
        End Function
        
        Public Function UploadProjectWithDefaultSettings(ByVal sessionId As String, ByVal projectSettings As CxPortal.ProjectBasicSettings, ByVal localCodeContainer As CxPortal.LocalCodeContainer) As CxPortal.CxWSResponseSourceID Implements CxPortal.CxPortalWebServiceSoap.UploadProjectWithDefaultSettings
            Return MyBase.Channel.UploadProjectWithDefaultSettings(sessionId, projectSettings, localCodeContainer)
        End Function
        
        Public Function UploadProjectWithDefaultSettingsAsync(ByVal sessionId As String, ByVal projectSettings As CxPortal.ProjectBasicSettings, ByVal localCodeContainer As CxPortal.LocalCodeContainer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourceID) Implements CxPortal.CxPortalWebServiceSoap.UploadProjectWithDefaultSettingsAsync
            Return MyBase.Channel.UploadProjectWithDefaultSettingsAsync(sessionId, projectSettings, localCodeContainer)
        End Function
        
        Public Function GetSourceCodeForScan(ByVal sessionID As String, ByVal scanId As Long) As CxPortal.CxWSResponseSourceContainer Implements CxPortal.CxPortalWebServiceSoap.GetSourceCodeForScan
            Return MyBase.Channel.GetSourceCodeForScan(sessionID, scanId)
        End Function
        
        Public Function GetSourceCodeForScanAsync(ByVal sessionID As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourceContainer) Implements CxPortal.CxPortalWebServiceSoap.GetSourceCodeForScanAsync
            Return MyBase.Channel.GetSourceCodeForScanAsync(sessionID, scanId)
        End Function
        
        Public Function GetQueryCollectionForLanguage(ByVal sessionId As String, ByVal projectType As Integer, ByVal projectId As Long) As CxPortal.CxQueryCollectionResponse Implements CxPortal.CxPortalWebServiceSoap.GetQueryCollectionForLanguage
            Return MyBase.Channel.GetQueryCollectionForLanguage(sessionId, projectType, projectId)
        End Function
        
        Public Function GetQueryCollectionForLanguageAsync(ByVal sessionId As String, ByVal projectType As Integer, ByVal projectId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxQueryCollectionResponse) Implements CxPortal.CxPortalWebServiceSoap.GetQueryCollectionForLanguageAsync
            Return MyBase.Channel.GetQueryCollectionForLanguageAsync(sessionId, projectType, projectId)
        End Function
        
        Public Function GetQueryCollectionForLanguageByTeamId(ByVal sessionId As String, ByVal projectType As Integer, ByVal teamId As String) As CxPortal.CxQueryCollectionResponse Implements CxPortal.CxPortalWebServiceSoap.GetQueryCollectionForLanguageByTeamId
            Return MyBase.Channel.GetQueryCollectionForLanguageByTeamId(sessionId, projectType, teamId)
        End Function
        
        Public Function GetQueryCollectionForLanguageByTeamIdAsync(ByVal sessionId As String, ByVal projectType As Integer, ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxQueryCollectionResponse) Implements CxPortal.CxPortalWebServiceSoap.GetQueryCollectionForLanguageByTeamIdAsync
            Return MyBase.Channel.GetQueryCollectionForLanguageByTeamIdAsync(sessionId, projectType, teamId)
        End Function
        
        Public Function UploadQueries(ByVal sessionId As String, ByVal queries() As CxPortal.CxWSQueryGroup) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UploadQueries
            Return MyBase.Channel.UploadQueries(sessionId, queries)
        End Function
        
        Public Function UploadQueriesAsync(ByVal sessionId As String, ByVal queries() As CxPortal.CxWSQueryGroup) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UploadQueriesAsync
            Return MyBase.Channel.UploadQueriesAsync(sessionId, queries)
        End Function
        
        Public Function AddScanResultsToProject(ByVal sessionId As String, ByVal projectId As Long, ByVal sourceId As String, ByVal resultsCollection As CxPortal.AuditResultsCollection, ByVal comment As String) As CxPortal.CxWSResponseBasicScanData Implements CxPortal.CxPortalWebServiceSoap.AddScanResultsToProject
            Return MyBase.Channel.AddScanResultsToProject(sessionId, projectId, sourceId, resultsCollection, comment)
        End Function
        
        Public Function AddScanResultsToProjectAsync(ByVal sessionId As String, ByVal projectId As Long, ByVal sourceId As String, ByVal resultsCollection As CxPortal.AuditResultsCollection, ByVal comment As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBasicScanData) Implements CxPortal.CxPortalWebServiceSoap.AddScanResultsToProjectAsync
            Return MyBase.Channel.AddScanResultsToProjectAsync(sessionId, projectId, sourceId, resultsCollection, comment)
        End Function
        
        Public Function GetResults(ByVal sessionId As String, ByVal scanId As Long) As CxPortal.CxWSResponseResultCollection Implements CxPortal.CxPortalWebServiceSoap.GetResults
            Return MyBase.Channel.GetResults(sessionId, scanId)
        End Function
        
        Public Function GetResultsAsync(ByVal sessionId As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultCollection) Implements CxPortal.CxPortalWebServiceSoap.GetResultsAsync
            Return MyBase.Channel.GetResultsAsync(sessionId, scanId)
        End Function
        
        Public Function GetResultSummary(ByVal sessionId As String, ByVal scanId As Long) As CxPortal.CXWSResponseResultSummary Implements CxPortal.CxPortalWebServiceSoap.GetResultSummary
            Return MyBase.Channel.GetResultSummary(sessionId, scanId)
        End Function
        
        Public Function GetResultSummaryAsync(ByVal sessionId As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CXWSResponseResultSummary) Implements CxPortal.CxPortalWebServiceSoap.GetResultSummaryAsync
            Return MyBase.Channel.GetResultSummaryAsync(sessionId, scanId)
        End Function
        
        Public Function GetCache(ByVal sessionId As String, ByVal scanId As Long) As CxPortal.CxWSResponseCache Implements CxPortal.CxPortalWebServiceSoap.GetCache
            Return MyBase.Channel.GetCache(sessionId, scanId)
        End Function
        
        Public Function GetCacheAsync(ByVal sessionId As String, ByVal scanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseCache) Implements CxPortal.CxPortalWebServiceSoap.GetCacheAsync
            Return MyBase.Channel.GetCacheAsync(sessionId, scanId)
        End Function
        
        Public Function Login(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer) As CxPortal.CxWSResponseLoginData Implements CxPortal.CxPortalWebServiceSoap.Login
            Return MyBase.Channel.Login(applicationCredentials, lcid)
        End Function
        
        Public Function LoginAsync(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData) Implements CxPortal.CxPortalWebServiceSoap.LoginAsync
            Return MyBase.Channel.LoginAsync(applicationCredentials, lcid)
        End Function
        
        Public Function SamlLogin(ByVal token As String, ByVal lcid As Integer) As CxPortal.CxWSResponseLoginData Implements CxPortal.CxPortalWebServiceSoap.SamlLogin
            Return MyBase.Channel.SamlLogin(token, lcid)
        End Function
        
        Public Function SamlLoginAsync(ByVal token As String, ByVal lcid As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData) Implements CxPortal.CxPortalWebServiceSoap.SamlLoginAsync
            Return MyBase.Channel.SamlLoginAsync(token, lcid)
        End Function
        
        Public Function LoginV2(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer, ByVal useExistingSession As Boolean) As CxPortal.CxWSResponseLoginData Implements CxPortal.CxPortalWebServiceSoap.LoginV2
            Return MyBase.Channel.LoginV2(applicationCredentials, lcid, useExistingSession)
        End Function
        
        Public Function LoginV2Async(ByVal applicationCredentials As CxPortal.Credentials, ByVal lcid As Integer, ByVal useExistingSession As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData) Implements CxPortal.CxPortalWebServiceSoap.LoginV2Async
            Return MyBase.Channel.LoginV2Async(applicationCredentials, lcid, useExistingSession)
        End Function
        
        Public Function SsoLogin(ByVal encryptedCredentials As CxPortal.Credentials, ByVal lcid As Integer) As CxPortal.CxWSResponseLoginData Implements CxPortal.CxPortalWebServiceSoap.SsoLogin
            Return MyBase.Channel.SsoLogin(encryptedCredentials, lcid)
        End Function
        
        Public Function SsoLoginAsync(ByVal encryptedCredentials As CxPortal.Credentials, ByVal lcid As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData) Implements CxPortal.CxPortalWebServiceSoap.SsoLoginAsync
            Return MyBase.Channel.SsoLoginAsync(encryptedCredentials, lcid)
        End Function
        
        Public Function SsoLoginV2(ByVal encryptedCredentials As CxPortal.Credentials, ByVal lcid As Integer, ByVal useExistingSession As Boolean) As CxPortal.CxWSResponseLoginData Implements CxPortal.CxPortalWebServiceSoap.SsoLoginV2
            Return MyBase.Channel.SsoLoginV2(encryptedCredentials, lcid, useExistingSession)
        End Function
        
        Public Function SsoLoginV2Async(ByVal encryptedCredentials As CxPortal.Credentials, ByVal lcid As Integer, ByVal useExistingSession As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData) Implements CxPortal.CxPortalWebServiceSoap.SsoLoginV2Async
            Return MyBase.Channel.SsoLoginV2Async(encryptedCredentials, lcid, useExistingSession)
        End Function
        
        Public Function Logout(ByVal sessionID As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.Logout
            Return MyBase.Channel.Logout(sessionID)
        End Function
        
        Public Function LogoutAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.LogoutAsync
            Return MyBase.Channel.LogoutAsync(sessionID)
        End Function
        
        Public Function LoginBySID(ByVal sessionID As String) As CxPortal.CxWSResponseLoginData Implements CxPortal.CxPortalWebServiceSoap.LoginBySID
            Return MyBase.Channel.LoginBySID(sessionID)
        End Function
        
        Public Function LoginBySIDAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseLoginData) Implements CxPortal.CxPortalWebServiceSoap.LoginBySIDAsync
            Return MyBase.Channel.LoginBySIDAsync(sessionID)
        End Function
        
        Public Function IsFirstLogin() As CxPortal.CxWSResponseBool Implements CxPortal.CxPortalWebServiceSoap.IsFirstLogin
            Return MyBase.Channel.IsFirstLogin
        End Function
        
        Public Function IsFirstLoginAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBool) Implements CxPortal.CxPortalWebServiceSoap.IsFirstLoginAsync
            Return MyBase.Channel.IsFirstLoginAsync
        End Function
        
        Public Function FirstLogin(ByVal newUsername As String, ByVal newPassword As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.FirstLogin
            Return MyBase.Channel.FirstLogin(newUsername, newPassword)
        End Function
        
        Public Function FirstLoginAsync(ByVal newUsername As String, ByVal newPassword As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.FirstLoginAsync
            Return MyBase.Channel.FirstLoginAsync(newUsername, newPassword)
        End Function
        
        Public Function GetAssociatedGroupsList(ByVal SessionID As String) As CxPortal.CxWSResponseGroupList Implements CxPortal.CxPortalWebServiceSoap.GetAssociatedGroupsList
            Return MyBase.Channel.GetAssociatedGroupsList(SessionID)
        End Function
        
        Public Function GetAssociatedGroupsListAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseGroupList) Implements CxPortal.CxPortalWebServiceSoap.GetAssociatedGroupsListAsync
            Return MyBase.Channel.GetAssociatedGroupsListAsync(SessionID)
        End Function
        
        Public Function GetConfigurationSetList(ByVal SessionID As String) As CxPortal.CxWSResponseConfigSetList Implements CxPortal.CxPortalWebServiceSoap.GetConfigurationSetList
            Return MyBase.Channel.GetConfigurationSetList(SessionID)
        End Function
        
        Public Function GetConfigurationSetListAsync(ByVal SessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseConfigSetList) Implements CxPortal.CxPortalWebServiceSoap.GetConfigurationSetListAsync
            Return MyBase.Channel.GetConfigurationSetListAsync(SessionID)
        End Function
        
        Public Function IsValidProjectName(ByVal SessionID As String, ByVal ProjectName As String, ByVal GroupId As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.IsValidProjectName
            Return MyBase.Channel.IsValidProjectName(SessionID, ProjectName, GroupId)
        End Function
        
        Public Function IsValidProjectNameAsync(ByVal SessionID As String, ByVal ProjectName As String, ByVal GroupId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.IsValidProjectNameAsync
            Return MyBase.Channel.IsValidProjectNameAsync(SessionID, ProjectName, GroupId)
        End Function
        
        Public Function GetSharedFileSystemLayer(ByVal SessionID As String, ByVal Path As String, ByVal UserCredentials As CxPortal.Credentials) As CxPortal.CxWSResponseFileSystemLayer Implements CxPortal.CxPortalWebServiceSoap.GetSharedFileSystemLayer
            Return MyBase.Channel.GetSharedFileSystemLayer(SessionID, Path, UserCredentials)
        End Function
        
        Public Function GetSharedFileSystemLayerAsync(ByVal SessionID As String, ByVal Path As String, ByVal UserCredentials As CxPortal.Credentials) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseFileSystemLayer) Implements CxPortal.CxPortalWebServiceSoap.GetSharedFileSystemLayerAsync
            Return MyBase.Channel.GetSharedFileSystemLayerAsync(SessionID, Path, UserCredentials)
        End Function
        
        Public Function GetRepositoryFileSystemLayer(ByVal SessionID As String, ByVal Path As String, ByVal SourceControlSettings As CxPortal.SourceControlSettings) As CxPortal.CxWSResponseFileSystemLayer Implements CxPortal.CxPortalWebServiceSoap.GetRepositoryFileSystemLayer
            Return MyBase.Channel.GetRepositoryFileSystemLayer(SessionID, Path, SourceControlSettings)
        End Function
        
        Public Function GetRepositoryFileSystemLayerAsync(ByVal SessionID As String, ByVal Path As String, ByVal SourceControlSettings As CxPortal.SourceControlSettings) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseFileSystemLayer) Implements CxPortal.CxPortalWebServiceSoap.GetRepositoryFileSystemLayerAsync
            Return MyBase.Channel.GetRepositoryFileSystemLayerAsync(SessionID, Path, SourceControlSettings)
        End Function
        
        Public Function GetSourceControlActionList(ByVal SessionID As String, ByVal teamId As String) As CxPortal.CxWSResponseSourceActionList Implements CxPortal.CxPortalWebServiceSoap.GetSourceControlActionList
            Return MyBase.Channel.GetSourceControlActionList(SessionID, teamId)
        End Function
        
        Public Function GetSourceControlActionListAsync(ByVal SessionID As String, ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourceActionList) Implements CxPortal.CxPortalWebServiceSoap.GetSourceControlActionListAsync
            Return MyBase.Channel.GetSourceControlActionListAsync(SessionID, teamId)
        End Function
        
        Public Function GetPostScanActionList(ByVal SessionID As String, ByVal teamId As String) As CxPortal.CxWSResponseSourceActionList Implements CxPortal.CxPortalWebServiceSoap.GetPostScanActionList
            Return MyBase.Channel.GetPostScanActionList(SessionID, teamId)
        End Function
        
        Public Function GetPostScanActionListAsync(ByVal SessionID As String, ByVal teamId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourceActionList) Implements CxPortal.CxPortalWebServiceSoap.GetPostScanActionListAsync
            Return MyBase.Channel.GetPostScanActionListAsync(SessionID, teamId)
        End Function
        
        Public Function CreateNewProject(ByVal SessionID As String, ByVal Project As CxPortal.ProjectConfiguration) As CxPortal.CxWSResponseRunID Implements CxPortal.CxPortalWebServiceSoap.CreateNewProject
            Return MyBase.Channel.CreateNewProject(SessionID, Project)
        End Function
        
        Public Function CreateNewProjectAsync(ByVal SessionID As String, ByVal Project As CxPortal.ProjectConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID) Implements CxPortal.CxPortalWebServiceSoap.CreateNewProjectAsync
            Return MyBase.Channel.CreateNewProjectAsync(SessionID, Project)
        End Function
        
        Public Function CreateAndRunProject(ByVal SessionID As String, ByVal ProjectSettings As CxPortal.ProjectSettings, ByVal LocalCodeContainer As CxPortal.LocalCodeContainer, ByVal visibleToOtherUsers As Boolean) As CxPortal.CxWSResponseRunID Implements CxPortal.CxPortalWebServiceSoap.CreateAndRunProject
            Return MyBase.Channel.CreateAndRunProject(SessionID, ProjectSettings, LocalCodeContainer, visibleToOtherUsers)
        End Function
        
        Public Function CreateAndRunProjectAsync(ByVal SessionID As String, ByVal ProjectSettings As CxPortal.ProjectSettings, ByVal LocalCodeContainer As CxPortal.LocalCodeContainer, ByVal visibleToOtherUsers As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID) Implements CxPortal.CxPortalWebServiceSoap.CreateAndRunProjectAsync
            Return MyBase.Channel.CreateAndRunProjectAsync(SessionID, ProjectSettings, LocalCodeContainer, visibleToOtherUsers)
        End Function
        
        Public Function RunScanAndAddToProject(ByVal sessionId As String, ByVal projectSettings As CxPortal.ProjectSettings, ByVal localCodeContainer As CxPortal.LocalCodeContainer, ByVal visibleToUtherUsers As Boolean) As CxPortal.CxWSResponseRunID Implements CxPortal.CxPortalWebServiceSoap.RunScanAndAddToProject
            Return MyBase.Channel.RunScanAndAddToProject(sessionId, projectSettings, localCodeContainer, visibleToUtherUsers)
        End Function
        
        Public Function RunScanAndAddToProjectAsync(ByVal sessionId As String, ByVal projectSettings As CxPortal.ProjectSettings, ByVal localCodeContainer As CxPortal.LocalCodeContainer, ByVal visibleToUtherUsers As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID) Implements CxPortal.CxPortalWebServiceSoap.RunScanAndAddToProjectAsync
            Return MyBase.Channel.RunScanAndAddToProjectAsync(sessionId, projectSettings, localCodeContainer, visibleToUtherUsers)
        End Function
        
        Public Function CountLines(ByVal sessionId As String, ByVal localCodeContainer As CxPortal.LocalCodeContainer) As CxPortal.CxWSResponseCountLines Implements CxPortal.CxPortalWebServiceSoap.CountLines
            Return MyBase.Channel.CountLines(sessionId, localCodeContainer)
        End Function
        
        Public Function CountLinesAsync(ByVal sessionId As String, ByVal localCodeContainer As CxPortal.LocalCodeContainer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseCountLines) Implements CxPortal.CxPortalWebServiceSoap.CountLinesAsync
            Return MyBase.Channel.CountLinesAsync(sessionId, localCodeContainer)
        End Function
        
        Public Function GetScansStatuses(ByVal sessionID As String) As CxPortal.CxWSResponseExtendedScanStatusArray Implements CxPortal.CxPortalWebServiceSoap.GetScansStatuses
            Return MyBase.Channel.GetScansStatuses(sessionID)
        End Function
        
        Public Function GetScansStatusesAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseExtendedScanStatusArray) Implements CxPortal.CxPortalWebServiceSoap.GetScansStatusesAsync
            Return MyBase.Channel.GetScansStatusesAsync(sessionID)
        End Function
        
        Public Function GetStatusOfSingleScan(ByVal sessionID As String, ByVal runId As String) As CxPortal.CxWSResponseExtendedScanStatus Implements CxPortal.CxPortalWebServiceSoap.GetStatusOfSingleScan
            Return MyBase.Channel.GetStatusOfSingleScan(sessionID, runId)
        End Function
        
        Public Function GetStatusOfSingleScanAsync(ByVal sessionID As String, ByVal runId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseExtendedScanStatus) Implements CxPortal.CxPortalWebServiceSoap.GetStatusOfSingleScanAsync
            Return MyBase.Channel.GetStatusOfSingleScanAsync(sessionID, runId)
        End Function
        
        Public Function PostponeScan(ByVal sessionID As String, ByVal RunId As String) As CxPortal.CxWSResponseQueueRunID Implements CxPortal.CxPortalWebServiceSoap.PostponeScan
            Return MyBase.Channel.PostponeScan(sessionID, RunId)
        End Function
        
        Public Function PostponeScanAsync(ByVal sessionID As String, ByVal RunId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueueRunID) Implements CxPortal.CxPortalWebServiceSoap.PostponeScanAsync
            Return MyBase.Channel.PostponeScanAsync(sessionID, RunId)
        End Function
        
        Public Function CancelScan(ByVal sessionID As String, ByVal RunId As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.CancelScan
            Return MyBase.Channel.CancelScan(sessionID, RunId)
        End Function
        
        Public Function CancelScanAsync(ByVal sessionID As String, ByVal RunId As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.CancelScanAsync
            Return MyBase.Channel.CancelScanAsync(sessionID, RunId)
        End Function
        
        Public Function UpdateProjectUserCredentials(ByVal sessionID As String, ByVal projectID As Long, ByVal credentials As CxPortal.Credentials) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateProjectUserCredentials
            Return MyBase.Channel.UpdateProjectUserCredentials(sessionID, projectID, credentials)
        End Function
        
        Public Function UpdateProjectUserCredentialsAsync(ByVal sessionID As String, ByVal projectID As Long, ByVal credentials As CxPortal.Credentials) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateProjectUserCredentialsAsync
            Return MyBase.Channel.UpdateProjectUserCredentialsAsync(sessionID, projectID, credentials)
        End Function
        
        Public Function GetProjectsWithUserCredentials(ByVal sessionID As String, ByVal username As String) As CxPortal.CxWSResponseProjectsData Implements CxPortal.CxPortalWebServiceSoap.GetProjectsWithUserCredentials
            Return MyBase.Channel.GetProjectsWithUserCredentials(sessionID, username)
        End Function
        
        Public Function GetProjectsWithUserCredentialsAsync(ByVal sessionID As String, ByVal username As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProjectsData) Implements CxPortal.CxPortalWebServiceSoap.GetProjectsWithUserCredentialsAsync
            Return MyBase.Channel.GetProjectsWithUserCredentialsAsync(sessionID, username)
        End Function
        
        Public Function GetProjectsCredentialUsers(ByVal sessionID As String) As CxPortal.CxWSResponseNameList Implements CxPortal.CxPortalWebServiceSoap.GetProjectsCredentialUsers
            Return MyBase.Channel.GetProjectsCredentialUsers(sessionID)
        End Function
        
        Public Function GetProjectsCredentialUsersAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseNameList) Implements CxPortal.CxPortalWebServiceSoap.GetProjectsCredentialUsersAsync
            Return MyBase.Channel.GetProjectsCredentialUsersAsync(sessionID)
        End Function
        
        Public Function GetProjectsDisplayData(ByVal sessionID As String) As CxPortal.CxWSResponseProjectsDisplayData Implements CxPortal.CxPortalWebServiceSoap.GetProjectsDisplayData
            Return MyBase.Channel.GetProjectsDisplayData(sessionID)
        End Function
        
        Public Function GetProjectsDisplayDataAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProjectsDisplayData) Implements CxPortal.CxPortalWebServiceSoap.GetProjectsDisplayDataAsync
            Return MyBase.Channel.GetProjectsDisplayDataAsync(sessionID)
        End Function
        
        Public Function RunProjectImmediately(ByVal sessionID As String, ByVal projectID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.RunProjectImmediately
            Return MyBase.Channel.RunProjectImmediately(sessionID, projectID)
        End Function
        
        Public Function RunProjectImmediatelyAsync(ByVal sessionID As String, ByVal projectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.RunProjectImmediatelyAsync
            Return MyBase.Channel.RunProjectImmediatelyAsync(sessionID, projectID)
        End Function
        
        Public Function RunProjectIncrementally(ByVal sessionID As String, ByVal projectID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.RunProjectIncrementally
            Return MyBase.Channel.RunProjectIncrementally(sessionID, projectID)
        End Function
        
        Public Function RunProjectIncrementallyAsync(ByVal sessionID As String, ByVal projectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.RunProjectIncrementallyAsync
            Return MyBase.Channel.RunProjectIncrementallyAsync(sessionID, projectID)
        End Function
        
        Public Function DeleteProject(ByVal sessionID As String, ByVal projectID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.DeleteProject
            Return MyBase.Channel.DeleteProject(sessionID, projectID)
        End Function
        
        Public Function DeleteProjectAsync(ByVal sessionID As String, ByVal projectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.DeleteProjectAsync
            Return MyBase.Channel.DeleteProjectAsync(sessionID, projectID)
        End Function
        
        Public Function GetProjectConfiguration(ByVal sessionID As String, ByVal projectID As Long) As CxPortal.CxWSResponseProjectConfig Implements CxPortal.CxPortalWebServiceSoap.GetProjectConfiguration
            Return MyBase.Channel.GetProjectConfiguration(sessionID, projectID)
        End Function
        
        Public Function GetProjectConfigurationAsync(ByVal sessionID As String, ByVal projectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProjectConfig) Implements CxPortal.CxPortalWebServiceSoap.GetProjectConfigurationAsync
            Return MyBase.Channel.GetProjectConfigurationAsync(sessionID, projectID)
        End Function
        
        Public Function GetProjectProperties(ByVal sessionID As String, ByVal projectID As Long, ByVal scanType As CxPortal.ScanType) As CxPortal.CxWSResponsProjectProperties Implements CxPortal.CxPortalWebServiceSoap.GetProjectProperties
            Return MyBase.Channel.GetProjectProperties(sessionID, projectID, scanType)
        End Function
        
        Public Function GetProjectPropertiesAsync(ByVal sessionID As String, ByVal projectID As Long, ByVal scanType As CxPortal.ScanType) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsProjectProperties) Implements CxPortal.CxPortalWebServiceSoap.GetProjectPropertiesAsync
            Return MyBase.Channel.GetProjectPropertiesAsync(sessionID, projectID, scanType)
        End Function
        
        Public Function UpdateProjectConfiguration(ByVal sessionID As String, ByVal projectID As Long, ByVal projectConfiguration As CxPortal.ProjectConfiguration) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateProjectConfiguration
            Return MyBase.Channel.UpdateProjectConfiguration(sessionID, projectID, projectConfiguration)
        End Function
        
        Public Function UpdateProjectConfigurationAsync(ByVal sessionID As String, ByVal projectID As Long, ByVal projectConfiguration As CxPortal.ProjectConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateProjectConfigurationAsync
            Return MyBase.Channel.UpdateProjectConfigurationAsync(sessionID, projectID, projectConfiguration)
        End Function
        
        Public Function UpdateProjectIncrementalConfiguration(ByVal sessionID As String, ByVal projectID As Long, ByVal projectConfiguration As CxPortal.ProjectConfiguration) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateProjectIncrementalConfiguration
            Return MyBase.Channel.UpdateProjectIncrementalConfiguration(sessionID, projectID, projectConfiguration)
        End Function
        
        Public Function UpdateProjectIncrementalConfigurationAsync(ByVal sessionID As String, ByVal projectID As Long, ByVal projectConfiguration As CxPortal.ProjectConfiguration) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateProjectIncrementalConfigurationAsync
            Return MyBase.Channel.UpdateProjectIncrementalConfigurationAsync(sessionID, projectID, projectConfiguration)
        End Function
        
        Public Function GetProjectCharts(ByVal sessionID As String, ByVal projectID As Long, ByVal scanType As CxPortal.ScanType) As CxPortal.CxWSResponsProjectChartData Implements CxPortal.CxPortalWebServiceSoap.GetProjectCharts
            Return MyBase.Channel.GetProjectCharts(sessionID, projectID, scanType)
        End Function
        
        Public Function GetProjectChartsAsync(ByVal sessionID As String, ByVal projectID As Long, ByVal scanType As CxPortal.ScanType) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsProjectChartData) Implements CxPortal.CxPortalWebServiceSoap.GetProjectChartsAsync
            Return MyBase.Channel.GetProjectChartsAsync(sessionID, projectID, scanType)
        End Function
        
        Public Function SetFalsePositiveFlag(ByVal sessionID As String, ByVal ResultId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal falsePositiveFlag As Boolean) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SetFalsePositiveFlag
            Return MyBase.Channel.SetFalsePositiveFlag(sessionID, ResultId, PathId, projectId, falsePositiveFlag)
        End Function
        
        Public Function SetFalsePositiveFlagAsync(ByVal sessionID As String, ByVal ResultId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal falsePositiveFlag As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SetFalsePositiveFlagAsync
            Return MyBase.Channel.SetFalsePositiveFlagAsync(sessionID, ResultId, PathId, projectId, falsePositiveFlag)
        End Function
        
        Public Function UpdateResultComment(ByVal sessionID As String, ByVal ResultId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal comment As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateResultComment
            Return MyBase.Channel.UpdateResultComment(sessionID, ResultId, PathId, projectId, comment)
        End Function
        
        Public Function UpdateResultCommentAsync(ByVal sessionID As String, ByVal ResultId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal comment As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateResultCommentAsync
            Return MyBase.Channel.UpdateResultCommentAsync(sessionID, ResultId, PathId, projectId, comment)
        End Function
        
        Public Function UpdateResultState(ByVal sessionID As String, ByVal scanId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal Remarks As String, ByVal ResultLabelType As Integer, ByVal data As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateResultState
            Return MyBase.Channel.UpdateResultState(sessionID, scanId, PathId, projectId, Remarks, ResultLabelType, data)
        End Function
        
        Public Function UpdateResultStateAsync(ByVal sessionID As String, ByVal scanId As Long, ByVal PathId As Long, ByVal projectId As Long, ByVal Remarks As String, ByVal ResultLabelType As Integer, ByVal data As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateResultStateAsync
            Return MyBase.Channel.UpdateResultStateAsync(sessionID, scanId, PathId, projectId, Remarks, ResultLabelType, data)
        End Function
        
        Public Function UpdateSetOfResultState(ByVal sessionID As String, ByVal resultsStates() As CxPortal.ResultStateData) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateSetOfResultState
            Return MyBase.Channel.UpdateSetOfResultState(sessionID, resultsStates)
        End Function
        
        Public Function UpdateSetOfResultStateAsync(ByVal sessionID As String, ByVal resultsStates() As CxPortal.ResultStateData) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateSetOfResultStateAsync
            Return MyBase.Channel.UpdateSetOfResultStateAsync(sessionID, resultsStates)
        End Function
        
        Public Function UpdateSetOfResultStateInfluenceCheck(ByVal sessionID As String, ByVal resultsStates() As CxPortal.ResultStateData, ByVal checkPathInfluence As Boolean) As CxPortal.CxWSResponseResultStateUpdate Implements CxPortal.CxPortalWebServiceSoap.UpdateSetOfResultStateInfluenceCheck
            Return MyBase.Channel.UpdateSetOfResultStateInfluenceCheck(sessionID, resultsStates, checkPathInfluence)
        End Function
        
        Public Function UpdateSetOfResultStateInfluenceCheckAsync(ByVal sessionID As String, ByVal resultsStates() As CxPortal.ResultStateData, ByVal checkPathInfluence As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultStateUpdate) Implements CxPortal.CxPortalWebServiceSoap.UpdateSetOfResultStateInfluenceCheckAsync
            Return MyBase.Channel.UpdateSetOfResultStateInfluenceCheckAsync(sessionID, resultsStates, checkPathInfluence)
        End Function
        
        Public Function BranchProject(ByVal SessionID As String, ByVal Project As CxPortal.ProjectConfiguration, ByVal originalProjectId As Long) As CxPortal.CxWSResponseRunID Implements CxPortal.CxPortalWebServiceSoap.BranchProject
            Return MyBase.Channel.BranchProject(SessionID, Project, originalProjectId)
        End Function
        
        Public Function BranchProjectAsync(ByVal SessionID As String, ByVal Project As CxPortal.ProjectConfiguration, ByVal originalProjectId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID) Implements CxPortal.CxPortalWebServiceSoap.BranchProjectAsync
            Return MyBase.Channel.BranchProjectAsync(SessionID, Project, originalProjectId)
        End Function
        
        Public Function GetProjectBranchingStatus(ByVal SessionID As String, ByVal BranchedProjectID As Long) As CxPortal.CxWSProjectBranchingStatusResponse Implements CxPortal.CxPortalWebServiceSoap.GetProjectBranchingStatus
            Return MyBase.Channel.GetProjectBranchingStatus(SessionID, BranchedProjectID)
        End Function
        
        Public Function GetProjectBranchingStatusAsync(ByVal SessionID As String, ByVal BranchedProjectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSProjectBranchingStatusResponse) Implements CxPortal.CxPortalWebServiceSoap.GetProjectBranchingStatusAsync
            Return MyBase.Channel.GetProjectBranchingStatusAsync(SessionID, BranchedProjectID)
        End Function
        
        Public Function DeleteProjects(ByVal request As CxPortal.CxWSRequestDeleteProjects) As CxPortal.CxWSResponseDeleteProjects Implements CxPortal.CxPortalWebServiceSoap.DeleteProjects
            Return MyBase.Channel.DeleteProjects(request)
        End Function
        
        Public Function DeleteProjectsAsync(ByVal request As CxPortal.CxWSRequestDeleteProjects) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseDeleteProjects) Implements CxPortal.CxPortalWebServiceSoap.DeleteProjectsAsync
            Return MyBase.Channel.DeleteProjectsAsync(request)
        End Function
        
        Public Function RunScanWithExistingProject(ByVal sessionId As String, ByVal projectName As String) As CxPortal.CxWSResponseRunID Implements CxPortal.CxPortalWebServiceSoap.RunScanWithExistingProject
            Return MyBase.Channel.RunScanWithExistingProject(sessionId, projectName)
        End Function
        
        Public Function RunScanWithExistingProjectAsync(ByVal sessionId As String, ByVal projectName As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseRunID) Implements CxPortal.CxPortalWebServiceSoap.RunScanWithExistingProjectAsync
            Return MyBase.Channel.RunScanWithExistingProjectAsync(sessionId, projectName)
        End Function
        
        Public Function GetScansDisplayData(ByVal sessionID As String, ByVal projectID As Long) As CxPortal.CxWSResponseScansDisplayData Implements CxPortal.CxPortalWebServiceSoap.GetScansDisplayData
            Return MyBase.Channel.GetScansDisplayData(sessionID, projectID)
        End Function
        
        Public Function GetScansDisplayDataAsync(ByVal sessionID As String, ByVal projectID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScansDisplayData) Implements CxPortal.CxPortalWebServiceSoap.GetScansDisplayDataAsync
            Return MyBase.Channel.GetScansDisplayDataAsync(sessionID, projectID)
        End Function
        
        Public Function DeleteScan(ByVal sessionID As String, ByVal ScanID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.DeleteScan
            Return MyBase.Channel.DeleteScan(sessionID, ScanID)
        End Function
        
        Public Function DeleteScanAsync(ByVal sessionID As String, ByVal ScanID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.DeleteScanAsync
            Return MyBase.Channel.DeleteScanAsync(sessionID, ScanID)
        End Function
        
        Public Function GetScanProperties(ByVal sessionID As String, ByVal ScanID As Long) As CxPortal.CxWSResponseScanProperties Implements CxPortal.CxPortalWebServiceSoap.GetScanProperties
            Return MyBase.Channel.GetScanProperties(sessionID, ScanID)
        End Function
        
        Public Function GetScanPropertiesAsync(ByVal sessionID As String, ByVal ScanID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScanProperties) Implements CxPortal.CxPortalWebServiceSoap.GetScanPropertiesAsync
            Return MyBase.Channel.GetScanPropertiesAsync(sessionID, ScanID)
        End Function
        
        Public Function UpdateScanComment(ByVal sessionID As String, ByVal ScanID As Long, ByVal Comment As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateScanComment
            Return MyBase.Channel.UpdateScanComment(sessionID, ScanID, Comment)
        End Function
        
        Public Function UpdateScanCommentAsync(ByVal sessionID As String, ByVal ScanID As Long, ByVal Comment As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateScanCommentAsync
            Return MyBase.Channel.UpdateScanCommentAsync(sessionID, ScanID, Comment)
        End Function
        
        Public Function GetScansDisplayDataForAllProjects(ByVal sessionID As String) As CxPortal.CxWSResponseScansDisplayExtendedData Implements CxPortal.CxPortalWebServiceSoap.GetScansDisplayDataForAllProjects
            Return MyBase.Channel.GetScansDisplayDataForAllProjects(sessionID)
        End Function
        
        Public Function GetScansDisplayDataForAllProjectsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScansDisplayExtendedData) Implements CxPortal.CxPortalWebServiceSoap.GetScansDisplayDataForAllProjectsAsync
            Return MyBase.Channel.GetScansDisplayDataForAllProjectsAsync(sessionID)
        End Function
        
        Public Function GetScanSummary(ByVal i_SessionID As String, ByVal i_ScanID As Long, ByVal auditEvent As Boolean) As CxPortal.CxWSResponseScanSummaryExtended Implements CxPortal.CxPortalWebServiceSoap.GetScanSummary
            Return MyBase.Channel.GetScanSummary(i_SessionID, i_ScanID, auditEvent)
        End Function
        
        Public Function GetScanSummaryAsync(ByVal i_SessionID As String, ByVal i_ScanID As Long, ByVal auditEvent As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScanSummaryExtended) Implements CxPortal.CxPortalWebServiceSoap.GetScanSummaryAsync
            Return MyBase.Channel.GetScanSummaryAsync(i_SessionID, i_ScanID, auditEvent)
        End Function
        
        Public Function GetScanCompareSummary(ByVal sessionId As String, ByVal oldScanId As Long, ByVal newScanId As Long) As CxPortal.CxWSResponseScanCompareSummary Implements CxPortal.CxPortalWebServiceSoap.GetScanCompareSummary
            Return MyBase.Channel.GetScanCompareSummary(sessionId, oldScanId, newScanId)
        End Function
        
        Public Function GetScanCompareSummaryAsync(ByVal sessionId As String, ByVal oldScanId As Long, ByVal newScanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScanCompareSummary) Implements CxPortal.CxPortalWebServiceSoap.GetScanCompareSummaryAsync
            Return MyBase.Channel.GetScanCompareSummaryAsync(sessionId, oldScanId, newScanId)
        End Function
        
        Public Function GetCompareScanResults(ByVal sessionId As String, ByVal oldScanId As Long, ByVal newScanId As Long) As CxPortal.CxWSResponceScanCompareResults Implements CxPortal.CxPortalWebServiceSoap.GetCompareScanResults
            Return MyBase.Channel.GetCompareScanResults(sessionId, oldScanId, newScanId)
        End Function
        
        Public Function GetCompareScanResultsAsync(ByVal sessionId As String, ByVal oldScanId As Long, ByVal newScanId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponceScanCompareResults) Implements CxPortal.CxPortalWebServiceSoap.GetCompareScanResultsAsync
            Return MyBase.Channel.GetCompareScanResultsAsync(sessionId, oldScanId, newScanId)
        End Function
        
        Public Function GetScanLogs(ByVal cxWSRequestScanLog As CxPortal.CxWSRequestScanLog) As CxPortal.CxWSResponseScanLog Implements CxPortal.CxPortalWebServiceSoap.GetScanLogs
            Return MyBase.Channel.GetScanLogs(cxWSRequestScanLog)
        End Function
        
        Public Function GetScanLogsAsync(ByVal cxWSRequestScanLog As CxPortal.CxWSRequestScanLog) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseScanLog) Implements CxPortal.CxPortalWebServiceSoap.GetScanLogsAsync
            Return MyBase.Channel.GetScanLogsAsync(cxWSRequestScanLog)
        End Function
        
        Public Function DeleteScans(ByVal request As CxPortal.CxWSRequestDeleteScans) As CxPortal.CxWSResponseDeleteScans Implements CxPortal.CxPortalWebServiceSoap.DeleteScans
            Return MyBase.Channel.DeleteScans(request)
        End Function
        
        Public Function DeleteScansAsync(ByVal request As CxPortal.CxWSRequestDeleteScans) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseDeleteScans) Implements CxPortal.CxPortalWebServiceSoap.DeleteScansAsync
            Return MyBase.Channel.DeleteScansAsync(request)
        End Function
        
        Public Function LockScan(ByVal i_SessionID As String, ByVal i_ScanID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.LockScan
            Return MyBase.Channel.LockScan(i_SessionID, i_ScanID)
        End Function
        
        Public Function LockScanAsync(ByVal i_SessionID As String, ByVal i_ScanID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.LockScanAsync
            Return MyBase.Channel.LockScanAsync(i_SessionID, i_ScanID)
        End Function
        
        Public Function UnlockScan(ByVal i_SessionID As String, ByVal i_ScanID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UnlockScan
            Return MyBase.Channel.UnlockScan(i_SessionID, i_ScanID)
        End Function
        
        Public Function UnlockScanAsync(ByVal i_SessionID As String, ByVal i_ScanID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UnlockScanAsync
            Return MyBase.Channel.UnlockScanAsync(i_SessionID, i_ScanID)
        End Function
        
        Public Function GetQueryDescriptionByQueryId(ByVal sessionId As String, ByVal queryId As Integer) As CxPortal.CxWSResponseQueryDescription Implements CxPortal.CxPortalWebServiceSoap.GetQueryDescriptionByQueryId
            Return MyBase.Channel.GetQueryDescriptionByQueryId(sessionId, queryId)
        End Function
        
        Public Function GetQueryDescriptionByQueryIdAsync(ByVal sessionId As String, ByVal queryId As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueryDescription) Implements CxPortal.CxPortalWebServiceSoap.GetQueryDescriptionByQueryIdAsync
            Return MyBase.Channel.GetQueryDescriptionByQueryIdAsync(sessionId, queryId)
        End Function
        
        Public Function GetQueryDescription(ByVal sessionId As String, ByVal cweID As Integer) As CxPortal.CxWSResponseQueryDescription Implements CxPortal.CxPortalWebServiceSoap.GetQueryDescription
            Return MyBase.Channel.GetQueryDescription(sessionId, cweID)
        End Function
        
        Public Function GetQueryDescriptionAsync(ByVal sessionId As String, ByVal cweID As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueryDescription) Implements CxPortal.CxPortalWebServiceSoap.GetQueryDescriptionAsync
            Return MyBase.Channel.GetQueryDescriptionAsync(sessionId, cweID)
        End Function
        
        Public Function GetResultDescription(ByVal sessionID As String, ByVal scanID As Long, ByVal pathID As Long) As CxPortal.CxWSResponseResultDescription Implements CxPortal.CxPortalWebServiceSoap.GetResultDescription
            Return MyBase.Channel.GetResultDescription(sessionID, scanID, pathID)
        End Function
        
        Public Function GetResultDescriptionAsync(ByVal sessionID As String, ByVal scanID As Long, ByVal pathID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultDescription) Implements CxPortal.CxPortalWebServiceSoap.GetResultDescriptionAsync
            Return MyBase.Channel.GetResultDescriptionAsync(sessionID, scanID, pathID)
        End Function
        
        Public Function GetCWEDescription(ByVal sessionId As String, ByVal cweID As Integer) As CxPortal.CxWSResponseQueryDescription Implements CxPortal.CxPortalWebServiceSoap.GetCWEDescription
            Return MyBase.Channel.GetCWEDescription(sessionId, cweID)
        End Function
        
        Public Function GetCWEDescriptionAsync(ByVal sessionId As String, ByVal cweID As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseQueryDescription) Implements CxPortal.CxPortalWebServiceSoap.GetCWEDescriptionAsync
            Return MyBase.Channel.GetCWEDescriptionAsync(sessionId, cweID)
        End Function
        
        Public Function GetSourceByScanID(ByVal sessionID As String, ByVal scanID As Long, ByVal fileToRetreive As String) As CxPortal.CxWSResponseSourceContent Implements CxPortal.CxPortalWebServiceSoap.GetSourceByScanID
            Return MyBase.Channel.GetSourceByScanID(sessionID, scanID, fileToRetreive)
        End Function
        
        Public Function GetSourceByScanIDAsync(ByVal sessionID As String, ByVal scanID As Long, ByVal fileToRetreive As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourceContent) Implements CxPortal.CxPortalWebServiceSoap.GetSourceByScanIDAsync
            Return MyBase.Channel.GetSourceByScanIDAsync(sessionID, scanID, fileToRetreive)
        End Function
        
        Public Function GetSourcesByScanID(ByVal sessionID As String, ByVal scanID As Long, ByVal filesToRetreive() As String) As CxPortal.CxWSResponseSourcesContent Implements CxPortal.CxPortalWebServiceSoap.GetSourcesByScanID
            Return MyBase.Channel.GetSourcesByScanID(sessionID, scanID, filesToRetreive)
        End Function
        
        Public Function GetSourcesByScanIDAsync(ByVal sessionID As String, ByVal scanID As Long, ByVal filesToRetreive() As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSourcesContent) Implements CxPortal.CxPortalWebServiceSoap.GetSourcesByScanIDAsync
            Return MyBase.Channel.GetSourcesByScanIDAsync(sessionID, scanID, filesToRetreive)
        End Function
        
        Public Function GetResultStateList(ByVal sessionID As String) As CxPortal.CxWSResponseResultStateList Implements CxPortal.CxPortalWebServiceSoap.GetResultStateList
            Return MyBase.Channel.GetResultStateList(sessionID)
        End Function
        
        Public Function GetResultStateListAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseResultStateList) Implements CxPortal.CxPortalWebServiceSoap.GetResultStateListAsync
            Return MyBase.Channel.GetResultStateListAsync(sessionID)
        End Function
        
        Public Function IsSMTPHostConfigured() As CxPortal.CxWSResponseBool Implements CxPortal.CxPortalWebServiceSoap.IsSMTPHostConfigured
            Return MyBase.Channel.IsSMTPHostConfigured
        End Function
        
        Public Function IsSMTPHostConfiguredAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBool) Implements CxPortal.CxPortalWebServiceSoap.IsSMTPHostConfiguredAsync
            Return MyBase.Channel.IsSMTPHostConfiguredAsync
        End Function
        
        Public Function IsPasswordComplexityEnabled() As CxPortal.CxWSResponseBool Implements CxPortal.CxPortalWebServiceSoap.IsPasswordComplexityEnabled
            Return MyBase.Channel.IsPasswordComplexityEnabled
        End Function
        
        Public Function IsPasswordComplexityEnabledAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBool) Implements CxPortal.CxPortalWebServiceSoap.IsPasswordComplexityEnabledAsync
            Return MyBase.Channel.IsPasswordComplexityEnabledAsync
        End Function
        
        Public Function IsPrivateCloud() As CxPortal.CxWSResponseBool Implements CxPortal.CxPortalWebServiceSoap.IsPrivateCloud
            Return MyBase.Channel.IsPrivateCloud
        End Function
        
        Public Function IsPrivateCloudAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseBool) Implements CxPortal.CxPortalWebServiceSoap.IsPrivateCloudAsync
            Return MyBase.Channel.IsPrivateCloudAsync
        End Function
        
        Public Function IsAdminAllowedToChangeUserPassword(ByVal sessionID As String, ByVal userID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.IsAdminAllowedToChangeUserPassword
            Return MyBase.Channel.IsAdminAllowedToChangeUserPassword(sessionID, userID)
        End Function
        
        Public Function IsAdminAllowedToChangeUserPasswordAsync(ByVal sessionID As String, ByVal userID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.IsAdminAllowedToChangeUserPasswordAsync
            Return MyBase.Channel.IsAdminAllowedToChangeUserPasswordAsync(sessionID, userID)
        End Function
        
        Public Function ForgotPassword(ByVal passwordChangePageUrl As String, ByVal userName As String, ByVal email As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.ForgotPassword
            Return MyBase.Channel.ForgotPassword(passwordChangePageUrl, userName, email)
        End Function
        
        Public Function ForgotPasswordAsync(ByVal passwordChangePageUrl As String, ByVal userName As String, ByVal email As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.ForgotPasswordAsync
            Return MyBase.Channel.ForgotPasswordAsync(passwordChangePageUrl, userName, email)
        End Function
        
        Public Function ResetPassword(ByVal sessionID As String, ByVal loginUrl As String, ByVal userID As Long) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.ResetPassword
            Return MyBase.Channel.ResetPassword(sessionID, loginUrl, userID)
        End Function
        
        Public Function ResetPasswordAsync(ByVal sessionID As String, ByVal loginUrl As String, ByVal userID As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.ResetPasswordAsync
            Return MyBase.Channel.ResetPasswordAsync(sessionID, loginUrl, userID)
        End Function
        
        Public Function CheckChangePasswordToken(ByVal token As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.CheckChangePasswordToken
            Return MyBase.Channel.CheckChangePasswordToken(token)
        End Function
        
        Public Function CheckChangePasswordTokenAsync(ByVal token As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.CheckChangePasswordTokenAsync
            Return MyBase.Channel.CheckChangePasswordTokenAsync(token)
        End Function
        
        Public Function ChangePasswordWithToken(ByVal token As String, ByVal password As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.ChangePasswordWithToken
            Return MyBase.Channel.ChangePasswordWithToken(token, password)
        End Function
        
        Public Function ChangePasswordWithTokenAsync(ByVal token As String, ByVal password As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.ChangePasswordWithTokenAsync
            Return MyBase.Channel.ChangePasswordWithTokenAsync(token, password)
        End Function
        
        Public Function ChangePassword(ByVal sessionID As String, ByVal oldPsw As String, ByVal newPsw As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.ChangePassword
            Return MyBase.Channel.ChangePassword(sessionID, oldPsw, newPsw)
        End Function
        
        Public Function ChangePasswordAsync(ByVal sessionID As String, ByVal oldPsw As String, ByVal newPsw As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.ChangePasswordAsync
            Return MyBase.Channel.ChangePasswordAsync(sessionID, oldPsw, newPsw)
        End Function
        
        Public Function ChangePasswordAdminToUser(ByVal sessionID As String, ByVal userID As Long, ByVal newPassword As String, ByVal adminPassword As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.ChangePasswordAdminToUser
            Return MyBase.Channel.ChangePasswordAdminToUser(sessionID, userID, newPassword, adminPassword)
        End Function
        
        Public Function ChangePasswordAdminToUserAsync(ByVal sessionID As String, ByVal userID As Long, ByVal newPassword As String, ByVal adminPassword As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.ChangePasswordAdminToUserAsync
            Return MyBase.Channel.ChangePasswordAdminToUserAsync(sessionID, userID, newPassword, adminPassword)
        End Function
        
        Public Function GetCompanies() As CxPortal.CxWSResponseGroupList Implements CxPortal.CxPortalWebServiceSoap.GetCompanies
            Return MyBase.Channel.GetCompanies
        End Function
        
        Public Function GetCompaniesAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseGroupList) Implements CxPortal.CxPortalWebServiceSoap.GetCompaniesAsync
            Return MyBase.Channel.GetCompaniesAsync
        End Function
        
        Public Function RegisterPendingUser(ByVal pendingUser As CxPortal.WebClientPendingUser, ByVal pendingUsersTableUrl As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.RegisterPendingUser
            Return MyBase.Channel.RegisterPendingUser(pendingUser, pendingUsersTableUrl)
        End Function
        
        Public Function RegisterPendingUserAsync(ByVal pendingUser As CxPortal.WebClientPendingUser, ByVal pendingUsersTableUrl As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.RegisterPendingUserAsync
            Return MyBase.Channel.RegisterPendingUserAsync(pendingUser, pendingUsersTableUrl)
        End Function
        
        Public Function GetPendingUsersList(ByVal sessionID As String) As CxPortal.CxWSResponsePendingUsersList Implements CxPortal.CxPortalWebServiceSoap.GetPendingUsersList
            Return MyBase.Channel.GetPendingUsersList(sessionID)
        End Function
        
        Public Function GetPendingUsersListAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponsePendingUsersList) Implements CxPortal.CxPortalWebServiceSoap.GetPendingUsersListAsync
            Return MyBase.Channel.GetPendingUsersListAsync(sessionID)
        End Function
        
        Public Function DeletePendingUsers(ByVal sessionID As String, ByVal userIdList() As Integer) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.DeletePendingUsers
            Return MyBase.Channel.DeletePendingUsers(sessionID, userIdList)
        End Function
        
        Public Function DeletePendingUsersAsync(ByVal sessionID As String, ByVal userIdList() As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.DeletePendingUsersAsync
            Return MyBase.Channel.DeletePendingUsersAsync(sessionID, userIdList)
        End Function
        
        Public Function ApprovePendingUsers(ByVal sessionID As String, ByVal userList() As CxPortal.WebClientApprovedUser) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.ApprovePendingUsers
            Return MyBase.Channel.ApprovePendingUsers(sessionID, userList)
        End Function
        
        Public Function ApprovePendingUsersAsync(ByVal sessionID As String, ByVal userList() As CxPortal.WebClientApprovedUser) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.ApprovePendingUsersAsync
            Return MyBase.Channel.ApprovePendingUsersAsync(sessionID, userList)
        End Function
        
        Public Function GetUserProfileData(ByVal sessionID As String) As CxPortal.CxWSResponseProfileData Implements CxPortal.CxPortalWebServiceSoap.GetUserProfileData
            Return MyBase.Channel.GetUserProfileData(sessionID)
        End Function
        
        Public Function GetUserProfileDataAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseProfileData) Implements CxPortal.CxPortalWebServiceSoap.GetUserProfileDataAsync
            Return MyBase.Channel.GetUserProfileDataAsync(sessionID)
        End Function
        
        Public Function UpdateUserProfileData(ByVal sessionID As String, ByVal userProfileData As CxPortal.ProfileData) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateUserProfileData
            Return MyBase.Channel.UpdateUserProfileData(sessionID, userProfileData)
        End Function
        
        Public Function UpdateUserProfileDataAsync(ByVal sessionID As String, ByVal userProfileData As CxPortal.ProfileData) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateUserProfileDataAsync
            Return MyBase.Channel.UpdateUserProfileDataAsync(sessionID, userProfileData)
        End Function
        
        Public Function GetUserById(ByVal sessionID As String, ByVal userId As Long) As CxPortal.CxWSResponseSingleUserData Implements CxPortal.CxPortalWebServiceSoap.GetUserById
            Return MyBase.Channel.GetUserById(sessionID, userId)
        End Function
        
        Public Function GetUserByIdAsync(ByVal sessionID As String, ByVal userId As Long) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSingleUserData) Implements CxPortal.CxPortalWebServiceSoap.GetUserByIdAsync
            Return MyBase.Channel.GetUserByIdAsync(sessionID, userId)
        End Function
        
        Public Function GetAllUsers(ByVal sessionID As String) As CxPortal.CxWSResponseUserData Implements CxPortal.CxPortalWebServiceSoap.GetAllUsers
            Return MyBase.Channel.GetAllUsers(sessionID)
        End Function
        
        Public Function GetAllUsersAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseUserData) Implements CxPortal.CxPortalWebServiceSoap.GetAllUsersAsync
            Return MyBase.Channel.GetAllUsersAsync(sessionID)
        End Function
        
        Public Function GetAllUsersInGroup(ByVal sessionID As String, ByVal groupID As String, ByVal isRecursive As Boolean) As CxPortal.CxWSResponseUserData Implements CxPortal.CxPortalWebServiceSoap.GetAllUsersInGroup
            Return MyBase.Channel.GetAllUsersInGroup(sessionID, groupID, isRecursive)
        End Function
        
        Public Function GetAllUsersInGroupAsync(ByVal sessionID As String, ByVal groupID As String, ByVal isRecursive As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseUserData) Implements CxPortal.CxPortalWebServiceSoap.GetAllUsersInGroupAsync
            Return MyBase.Channel.GetAllUsersInGroupAsync(sessionID, groupID, isRecursive)
        End Function
        
        Public Function DeleteUser(ByVal sessionID As String, ByVal userID As Integer) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.DeleteUser
            Return MyBase.Channel.DeleteUser(sessionID, userID)
        End Function
        
        Public Function DeleteUserAsync(ByVal sessionID As String, ByVal userID As Integer) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.DeleteUserAsync
            Return MyBase.Channel.DeleteUserAsync(sessionID, userID)
        End Function
        
        Public Function GetHierarchyGroupTree(ByVal sessionID As String) As CxPortal.CxWSResponseHierarchyGroupNodes Implements CxPortal.CxPortalWebServiceSoap.GetHierarchyGroupTree
            Return MyBase.Channel.GetHierarchyGroupTree(sessionID)
        End Function
        
        Public Function GetHierarchyGroupTreeAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseHierarchyGroupNodes) Implements CxPortal.CxPortalWebServiceSoap.GetHierarchyGroupTreeAsync
            Return MyBase.Channel.GetHierarchyGroupTreeAsync(sessionID)
        End Function
        
        Public Function GetChildNodes(ByVal sessionID As String, ByVal pTeamId As String, ByVal pLevel As Integer, ByVal pTeamPath As String) As CxPortal.CxWSResponseHierarchyGroupNodes Implements CxPortal.CxPortalWebServiceSoap.GetChildNodes
            Return MyBase.Channel.GetChildNodes(sessionID, pTeamId, pLevel, pTeamPath)
        End Function
        
        Public Function GetChildNodesAsync(ByVal sessionID As String, ByVal pTeamId As String, ByVal pLevel As Integer, ByVal pTeamPath As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseHierarchyGroupNodes) Implements CxPortal.CxPortalWebServiceSoap.GetChildNodesAsync
            Return MyBase.Channel.GetChildNodesAsync(sessionID, pTeamId, pLevel, pTeamPath)
        End Function
        
        Public Function GetAncestryGroupTree(ByVal sessionID As String, ByVal pTeamID As String) As CxPortal.CxWSResponseHierarchyGroupNodes Implements CxPortal.CxPortalWebServiceSoap.GetAncestryGroupTree
            Return MyBase.Channel.GetAncestryGroupTree(sessionID, pTeamID)
        End Function
        
        Public Function GetAncestryGroupTreeAsync(ByVal sessionID As String, ByVal pTeamID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseHierarchyGroupNodes) Implements CxPortal.CxPortalWebServiceSoap.GetAncestryGroupTreeAsync
            Return MyBase.Channel.GetAncestryGroupTreeAsync(sessionID, pTeamID)
        End Function
        
        Public Function SetUserActivationState(ByVal sessionID As String, ByVal userID As Integer, ByVal activationState As Boolean) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.SetUserActivationState
            Return MyBase.Channel.SetUserActivationState(sessionID, userID, activationState)
        End Function
        
        Public Function SetUserActivationStateAsync(ByVal sessionID As String, ByVal userID As Integer, ByVal activationState As Boolean) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.SetUserActivationStateAsync
            Return MyBase.Channel.SetUserActivationStateAsync(sessionID, userID, activationState)
        End Function
        
        Public Function AddNewUser(ByVal sessionID As String, ByVal userData As CxPortal.UserData, ByVal userType As CxPortal.CxUserTypes) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.AddNewUser
            Return MyBase.Channel.AddNewUser(sessionID, userData, userType)
        End Function
        
        Public Function AddNewUserAsync(ByVal sessionID As String, ByVal userData As CxPortal.UserData, ByVal userType As CxPortal.CxUserTypes) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.AddNewUserAsync
            Return MyBase.Channel.AddNewUserAsync(sessionID, userData, userType)
        End Function
        
        Public Function UpdateUserData(ByVal sessionID As String, ByVal userData As CxPortal.UserData) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateUserData
            Return MyBase.Channel.UpdateUserData(sessionID, userData)
        End Function
        
        Public Function UpdateUserDataAsync(ByVal sessionID As String, ByVal userData As CxPortal.UserData) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateUserDataAsync
            Return MyBase.Channel.UpdateUserDataAsync(sessionID, userData)
        End Function
        
        Public Function GetServerLicenseData(ByVal sessionID As String) As CxPortal.CxWSResponseServerLicenseData Implements CxPortal.CxPortalWebServiceSoap.GetServerLicenseData
            Return MyBase.Channel.GetServerLicenseData(sessionID)
        End Function
        
        Public Function GetServerLicenseDataAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseServerLicenseData) Implements CxPortal.CxPortalWebServiceSoap.GetServerLicenseDataAsync
            Return MyBase.Channel.GetServerLicenseDataAsync(sessionID)
        End Function
        
        Public Function GetUsersLicenseData(ByVal sessionID As String, ByVal groupID As String) As CxPortal.CxWSResponseUsersLicenseData Implements CxPortal.CxPortalWebServiceSoap.GetUsersLicenseData
            Return MyBase.Channel.GetUsersLicenseData(sessionID, groupID)
        End Function
        
        Public Function GetUsersLicenseDataAsync(ByVal sessionID As String, ByVal groupID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseUsersLicenseData) Implements CxPortal.CxPortalWebServiceSoap.GetUsersLicenseDataAsync
            Return MyBase.Channel.GetUsersLicenseDataAsync(sessionID, groupID)
        End Function
        
        Public Function GetCompaniesLicenseData(ByVal sessionID As String, ByVal groupID As String) As CxPortal.CxWSResponseCompaniesLicenseData Implements CxPortal.CxPortalWebServiceSoap.GetCompaniesLicenseData
            Return MyBase.Channel.GetCompaniesLicenseData(sessionID, groupID)
        End Function
        
        Public Function GetCompaniesLicenseDataAsync(ByVal sessionID As String, ByVal groupID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseCompaniesLicenseData) Implements CxPortal.CxPortalWebServiceSoap.GetCompaniesLicenseDataAsync
            Return MyBase.Channel.GetCompaniesLicenseDataAsync(sessionID, groupID)
        End Function
        
        Public Function GetSPLicenseData(ByVal sessionID As String, ByVal groupID As String) As CxPortal.CxWSResponseSPLicenseData Implements CxPortal.CxPortalWebServiceSoap.GetSPLicenseData
            Return MyBase.Channel.GetSPLicenseData(sessionID, groupID)
        End Function
        
        Public Function GetSPLicenseDataAsync(ByVal sessionID As String, ByVal groupID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseSPLicenseData) Implements CxPortal.CxPortalWebServiceSoap.GetSPLicenseDataAsync
            Return MyBase.Channel.GetSPLicenseDataAsync(sessionID, groupID)
        End Function
        
        Public Function UpdateUserGroups(ByVal sessionID As String, ByVal userID As Long, ByVal unsubscribedGroups() As CxPortal.Group, ByVal subscribedGroups() As CxPortal.Group, ByVal role As CxPortal.Role) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateUserGroups
            Return MyBase.Channel.UpdateUserGroups(sessionID, userID, unsubscribedGroups, subscribedGroups, role)
        End Function
        
        Public Function UpdateUserGroupsAsync(ByVal sessionID As String, ByVal userID As Long, ByVal unsubscribedGroups() As CxPortal.Group, ByVal subscribedGroups() As CxPortal.Group, ByVal role As CxPortal.Role) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateUserGroupsAsync
            Return MyBase.Channel.UpdateUserGroupsAsync(sessionID, userID, unsubscribedGroups, subscribedGroups, role)
        End Function
        
        Public Function GetCompaniesList() As CxPortal.CxWSResponseGroupList Implements CxPortal.CxPortalWebServiceSoap.GetCompaniesList
            Return MyBase.Channel.GetCompaniesList
        End Function
        
        Public Function GetCompaniesListAsync() As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseGroupList) Implements CxPortal.CxPortalWebServiceSoap.GetCompaniesListAsync
            Return MyBase.Channel.GetCompaniesListAsync
        End Function
        
        Public Function IsValidUserName(ByVal sessionID As String, ByVal username As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.IsValidUserName
            Return MyBase.Channel.IsValidUserName(sessionID, username)
        End Function
        
        Public Function IsValidUserNameAsync(ByVal sessionID As String, ByVal username As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.IsValidUserNameAsync
            Return MyBase.Channel.IsValidUserNameAsync(sessionID, username)
        End Function
        
        Public Function IsValidEmail(ByVal sessionID As String, ByVal email As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.IsValidEmail
            Return MyBase.Channel.IsValidEmail(sessionID, email)
        End Function
        
        Public Function IsValidEmailAsync(ByVal sessionID As String, ByVal email As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.IsValidEmailAsync
            Return MyBase.Channel.IsValidEmailAsync(sessionID, email)
        End Function
        
        Public Function GetAvailbleDomainNames(ByVal sessionID As String) As CxPortal.CxWSResponseNameList Implements CxPortal.CxPortalWebServiceSoap.GetAvailbleDomainNames
            Return MyBase.Channel.GetAvailbleDomainNames(sessionID)
        End Function
        
        Public Function GetAvailbleDomainNamesAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseNameList) Implements CxPortal.CxPortalWebServiceSoap.GetAvailbleDomainNamesAsync
            Return MyBase.Channel.GetAvailbleDomainNamesAsync(sessionID)
        End Function
        
        Public Function GetAvailbleUserDirectoriesNames(ByVal sessionID As String) As CxPortal.CxWSResponseNameList Implements CxPortal.CxPortalWebServiceSoap.GetAvailbleUserDirectoriesNames
            Return MyBase.Channel.GetAvailbleUserDirectoriesNames(sessionID)
        End Function
        
        Public Function GetAvailbleUserDirectoriesNamesAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseNameList) Implements CxPortal.CxPortalWebServiceSoap.GetAvailbleUserDirectoriesNamesAsync
            Return MyBase.Channel.GetAvailbleUserDirectoriesNamesAsync(sessionID)
        End Function
        
        Public Function GetAvailbleUserDirectories(ByVal sessionID As String) As CxPortal.CxWSResponseUserDirectories Implements CxPortal.CxPortalWebServiceSoap.GetAvailbleUserDirectories
            Return MyBase.Channel.GetAvailbleUserDirectories(sessionID)
        End Function
        
        Public Function GetAvailbleUserDirectoriesAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseUserDirectories) Implements CxPortal.CxPortalWebServiceSoap.GetAvailbleUserDirectoriesAsync
            Return MyBase.Channel.GetAvailbleUserDirectoriesAsync(sessionID)
        End Function
        
        Public Function GetAllUsersFromDomain(ByVal sessionID As String, ByVal domain As String, ByVal i_SearchPattern As String) As CxPortal.CxWSResponseDomainUserList Implements CxPortal.CxPortalWebServiceSoap.GetAllUsersFromDomain
            Return MyBase.Channel.GetAllUsersFromDomain(sessionID, domain, i_SearchPattern)
        End Function
        
        Public Function GetAllUsersFromDomainAsync(ByVal sessionID As String, ByVal domain As String, ByVal i_SearchPattern As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseDomainUserList) Implements CxPortal.CxPortalWebServiceSoap.GetAllUsersFromDomainAsync
            Return MyBase.Channel.GetAllUsersFromDomainAsync(sessionID, domain, i_SearchPattern)
        End Function
        
        Public Function GetAllUsersFromUserDirectory(ByVal sessionID As String, ByVal domain As String, ByVal i_SearchPattern As String, ByVal searchPatternOption As CxPortal.CxWSSearchPatternOption) As CxPortal.CxWSResponseDomainUserList Implements CxPortal.CxPortalWebServiceSoap.GetAllUsersFromUserDirectory
            Return MyBase.Channel.GetAllUsersFromUserDirectory(sessionID, domain, i_SearchPattern, searchPatternOption)
        End Function
        
        Public Function GetAllUsersFromUserDirectoryAsync(ByVal sessionID As String, ByVal domain As String, ByVal i_SearchPattern As String, ByVal searchPatternOption As CxPortal.CxWSSearchPatternOption) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseDomainUserList) Implements CxPortal.CxPortalWebServiceSoap.GetAllUsersFromUserDirectoryAsync
            Return MyBase.Channel.GetAllUsersFromUserDirectoryAsync(sessionID, domain, i_SearchPattern, searchPatternOption)
        End Function
        
        Public Function CreateNewTeam(ByVal sessionID As String, ByVal parentTeamID As String, ByVal newTeamName As String, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.CreateNewTeam
            Return MyBase.Channel.CreateNewTeam(sessionID, parentTeamID, newTeamName, ldapGroupMappings)
        End Function
        
        Public Function CreateNewTeamAsync(ByVal sessionID As String, ByVal parentTeamID As String, ByVal newTeamName As String, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.CreateNewTeamAsync
            Return MyBase.Channel.CreateNewTeamAsync(sessionID, parentTeamID, newTeamName, ldapGroupMappings)
        End Function
        
        Public Function RenameTeam(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.RenameTeam
            Return MyBase.Channel.RenameTeam(sessionID, teamID, newTeamName)
        End Function
        
        Public Function RenameTeamAsync(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.RenameTeamAsync
            Return MyBase.Channel.RenameTeamAsync(sessionID, teamID, newTeamName)
        End Function
        
        Public Function UpdateTeam(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.UpdateTeam
            Return MyBase.Channel.UpdateTeam(sessionID, teamID, newTeamName, ldapGroupMappings)
        End Function
        
        Public Function UpdateTeamAsync(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.UpdateTeamAsync
            Return MyBase.Channel.UpdateTeamAsync(sessionID, teamID, newTeamName, ldapGroupMappings)
        End Function
        
        Public Function GetAllTeams(ByVal sessionID As String) As CxPortal.CxWSResponseTeamData Implements CxPortal.CxPortalWebServiceSoap.GetAllTeams
            Return MyBase.Channel.GetAllTeams(sessionID)
        End Function
        
        Public Function GetAllTeamsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData) Implements CxPortal.CxPortalWebServiceSoap.GetAllTeamsAsync
            Return MyBase.Channel.GetAllTeamsAsync(sessionID)
        End Function
        
        Public Function GetAllUserDirecTeams(ByVal sessionID As String) As CxPortal.CxWSResponseTeamData Implements CxPortal.CxPortalWebServiceSoap.GetAllUserDirecTeams
            Return MyBase.Channel.GetAllUserDirecTeams(sessionID)
        End Function
        
        Public Function GetAllUserDirecTeamsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData) Implements CxPortal.CxPortalWebServiceSoap.GetAllUserDirecTeamsAsync
            Return MyBase.Channel.GetAllUserDirecTeamsAsync(sessionID)
        End Function
        
        Public Function DeleteTeam(ByVal sessionID As String, ByVal teamID As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.DeleteTeam
            Return MyBase.Channel.DeleteTeam(sessionID, teamID)
        End Function
        
        Public Function DeleteTeamAsync(ByVal sessionID As String, ByVal teamID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.DeleteTeamAsync
            Return MyBase.Channel.DeleteTeamAsync(sessionID, teamID)
        End Function
        
        Public Function CreateNewCompany(ByVal sessionID As String, ByVal ParentSP As String, ByVal newTCompanyName As String, ByVal companyManagers As Integer, ByVal scanners As Integer, ByVal reviewers As Integer, ByVal allowActions As Boolean, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.CreateNewCompany
            Return MyBase.Channel.CreateNewCompany(sessionID, ParentSP, newTCompanyName, companyManagers, scanners, reviewers, allowActions, ldapGroupMappings)
        End Function
        
        Public Function CreateNewCompanyAsync(ByVal sessionID As String, ByVal ParentSP As String, ByVal newTCompanyName As String, ByVal companyManagers As Integer, ByVal scanners As Integer, ByVal reviewers As Integer, ByVal allowActions As Boolean, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.CreateNewCompanyAsync
            Return MyBase.Channel.CreateNewCompanyAsync(sessionID, ParentSP, newTCompanyName, companyManagers, scanners, reviewers, allowActions, ldapGroupMappings)
        End Function
        
        Public Function CreateNewServiceProvider(ByVal sessionID As String, ByVal newSpName As String, ByVal spManagersint As Integer, ByVal companyManagers As Integer, ByVal scanners As Integer, ByVal reviewers As Integer, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.CreateNewServiceProvider
            Return MyBase.Channel.CreateNewServiceProvider(sessionID, newSpName, spManagersint, companyManagers, scanners, reviewers, ldapGroupMappings)
        End Function
        
        Public Function CreateNewServiceProviderAsync(ByVal sessionID As String, ByVal newSpName As String, ByVal spManagersint As Integer, ByVal companyManagers As Integer, ByVal scanners As Integer, ByVal reviewers As Integer, ByVal ldapGroupMappings() As CxPortal.CxWSLdapGroupMapping) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.CreateNewServiceProviderAsync
            Return MyBase.Channel.CreateNewServiceProviderAsync(sessionID, newSpName, spManagersint, companyManagers, scanners, reviewers, ldapGroupMappings)
        End Function
        
        Public Function RenameCompany(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.RenameCompany
            Return MyBase.Channel.RenameCompany(sessionID, teamID, newTeamName)
        End Function
        
        Public Function RenameCompanyAsync(ByVal sessionID As String, ByVal teamID As String, ByVal newTeamName As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.RenameCompanyAsync
            Return MyBase.Channel.RenameCompanyAsync(sessionID, teamID, newTeamName)
        End Function
        
        Public Function GetAllCompanies(ByVal sessionID As String) As CxPortal.CxWSResponseTeamData Implements CxPortal.CxPortalWebServiceSoap.GetAllCompanies
            Return MyBase.Channel.GetAllCompanies(sessionID)
        End Function
        
        Public Function GetAllCompaniesAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData) Implements CxPortal.CxPortalWebServiceSoap.GetAllCompaniesAsync
            Return MyBase.Channel.GetAllCompaniesAsync(sessionID)
        End Function
        
        Public Function GetAllSPs(ByVal sessionID As String) As CxPortal.CxWSResponseTeamData Implements CxPortal.CxPortalWebServiceSoap.GetAllSPs
            Return MyBase.Channel.GetAllSPs(sessionID)
        End Function
        
        Public Function GetAllSPsAsync(ByVal sessionID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSResponseTeamData) Implements CxPortal.CxPortalWebServiceSoap.GetAllSPsAsync
            Return MyBase.Channel.GetAllSPsAsync(sessionID)
        End Function
        
        Public Function DeleteCompany(ByVal sessionID As String, ByVal teamID As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.DeleteCompany
            Return MyBase.Channel.DeleteCompany(sessionID, teamID)
        End Function
        
        Public Function DeleteCompanyAsync(ByVal sessionID As String, ByVal teamID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.DeleteCompanyAsync
            Return MyBase.Channel.DeleteCompanyAsync(sessionID, teamID)
        End Function
        
        Public Function DeleteSP(ByVal sessionID As String, ByVal teamID As String) As CxPortal.CxWSBasicRepsonse Implements CxPortal.CxPortalWebServiceSoap.DeleteSP
            Return MyBase.Channel.DeleteSP(sessionID, teamID)
        End Function
        
        Public Function DeleteSPAsync(ByVal sessionID As String, ByVal teamID As String) As System.Threading.Tasks.Task(Of CxPortal.CxWSBasicRepsonse) Implements CxPortal.CxPortalWebServiceSoap.DeleteSPAsync
            Return MyBase.Channel.DeleteSPAsync(sessionID, teamID)
        End Function
    End Class
End Namespace
